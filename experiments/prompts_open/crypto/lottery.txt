Below is a question in CTF, called "lottery". Help me solve it. Give detailed steps and write a python code that solves the problem, that leads to the print of the flag. 
I hereby provide the question description, and the related file "server.py". The image "planes.png" is in the attached.

Description:
The goal of this challenge is to use fano planes to come up with possible tickets to buy for the lottery. 

Code:
server.py

from inputimeout import inputimeout, TimeoutOccurred
import random, sys

with open('flag.txt') as f:
	flag = f.read()

def main():
	print("Here is how the lottery works:")
	print("- Players purchase tickets comprising their choices of six different numbers between 1 and 70")
	print("- During the draw, six balls are randomly selected without replacement from a set numbered from 1 to 70")
	print("- A prize is awarded to any player who matches at least two of the six drawn numbers.")
	print("- More matches = higher prize!")
	while True:
		print("\n********************\nHow many tickets would you like to buy? There is a limit of 40 tickets per person")
		try:
			reply = int(inputimeout(prompt='>> ', timeout=60))
		except ValueError:
			reply = 0
		except TimeoutOccurred:
			print("Oof! Not fast enough!\n")
			sys.exit()
		if reply > 40 or reply < 1:
			print("That is an invalid choice!\n")
		else:
			break
	tickets = []
	for x in range(reply):
		ticket = []
		print(f"\n********************\nPlease give the numbers for ticket {x+1}:")
		for _ in range(6):
			while True:
				try:
					number = int(inputimeout(prompt='>> ', timeout=60))
				except TimeoutOccurred:
					print("Oof! Not fast enough!\n")
					sys.exit()
				except ValueError:
					number = 0
				if number > 70 or number < 1:
					print("That is an invalid choice!\n")
				else:
					break
			ticket.append(number)
		tickets.append(ticket)
	winnings = [0, 0, 36, 360, 36000, 3600000, 360000000]
	print(f"\n********************\nLet's see if you can make a profit in {10**6} consecutive rounds of the lottery!")
	for i in range(10**6):
		draw = set([])
		while len(draw) != 6:
			draw.add(random.randint(1,70))
		profit = 0
		for ticket in tickets:
			profit -= 1
			matches = len(draw.intersection(set(ticket)))
			profit += winnings[matches]
		if profit > 0:
			#print(f"Draw {i+i}: {draw}, profit: ${profit}")
			if (i+1)%(10**5) == 0:
				print(f"You made it through {i+1} rounds!")
		else:
			print(f"Draw {i+i}: {draw}, profit: ${profit}")
			print(f"\n********************\nAh shucks! Look's like a loss was made. Better luck next time")
			sys.exit()
	print(f"\n********************\nWow! You broke the lottery system! Here's the well-deserved flag --> {flag}")

if __name__ == "__main__":
	main()

winnings-calculation.py:

# Code taken from https://github.com/prowlett/lottery-guaranteed-win
from itertools import combinations
from tqdm import tqdm

# Used my own created fano planes to come up with these tickets
tickets = ((1, 2, 3, 26, 27, 28),
			(1, 4, 26, 30, 31, 34),
			(3, 4, 28, 29, 30, 33),
			(2, 4, 5, 27, 30, 32),
			(3, 5, 28, 31, 32, 34),
			(1, 5, 26, 29, 32, 33),
			(2, 27, 29, 31, 33, 34),
			(6, 35, 36, 42, 7, 37),
			(6, 35, 41, 43, 9, 39),
			(7, 37, 8, 38, 9, 39),
			(6, 35, 10, 40, 8, 38),
			(7, 37, 10, 40, 41, 43),
			(9, 39, 10, 40, 36, 42),
			(36, 42, 8, 38, 41, 43),
			(11, 44, 49, 51, 12, 47),
			(11, 44, 14, 45, 13, 46),
			(12, 47, 50, 52, 13, 46),
			(12, 47, 15, 48, 14, 45),
			(11, 44, 15, 48, 50, 52),
			(13, 46, 15, 48, 49, 51),
			(49, 51, 50, 52, 14, 45),
			(16, 53, 17, 54, 18, 55),
			(16, 53, 58, 61, 20, 59),
			(16, 53, 57, 60, 19, 56),
			(18, 55, 57, 60, 58, 61),
			(18, 55, 19, 56, 20, 59),
			(20, 59, 57, 60, 17, 54),
			(17, 54, 19, 56, 58, 61),
			(21, 62, 63, 69, 25, 64),
			(21, 62, 24, 65, 67, 70),
			(21, 62, 22, 68, 23, 66),
			(25, 64, 67, 70, 22, 68),
			(25, 64, 24, 65, 23, 66),
			(23, 66, 67, 70, 63, 69),
			(63, 69, 24, 65, 22, 68))

total_winnings = 0
balls_matched = [0 for i in range(0,7)]
winning_tickets = [0 for i in range(0,36)]
i = 1
for comb in tqdm(combinations(range(1, 71), 6)):
	i += 1
	this_prize_total = 0
	this_winning_tickets = 0
	for ticket in tickets:
		matches = len(set(comb).intersection(ticket))
		if matches > 1: # Caring about 2+ matches per draw
			this_winning_tickets += 1
			balls_matched[matches] += 1
	if this_winning_tickets == 0:
		print(f"Draw {i}: {comb}: This is the first error!")
		break 
	winning_tickets[this_winning_tickets] += 1
print(f"Draw {i}: {comb}: {winning_tickets}, {balls_matched}")