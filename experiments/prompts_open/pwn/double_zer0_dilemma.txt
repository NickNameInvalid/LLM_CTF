Below is a question in CTF, called "double_zero0_dilemma". Help me solve it. Either directly derive the flag from the code, or write a python 
script to call on the executable file “double_zero0_dilemma”, with the correct input, that leads to the print of the flag. 
I hereby provide the question description, and the decompiled C code.

Description:
double zer0 dilemma is a pwn challenge focused on improper input validation.
The idea for this challenge is that since arbitrary integers can be sent and captured by scanf, you are able to overwrite two pointers with close to arbitrary values.
In my solver script, I overwrite printf, but puts is also viable.

Decompiled Code:

void play(void)

{
  int iVar1;
  long local_18;
  int local_c;
  
  local_c = 0;
  local_18 = 0;
  puts("Enter the number (0-36) you think the roulette will land on: ");
  __isoc99_scanf(&DAT_0808b046,&local_c);
  puts("Enter the amount you want to wager: ");
  __isoc99_scanf(&DAT_0808b075,&local_18);
  *(long *)(bets + (long)local_c * 8) = *(long *)(bets + (long)local_c * 8) + local_18;
  iVar1 = rng();
  if (iVar1 == local_c) {
    *(long *)(bets + (long)local_c * 8) = *(long *)(bets + (long)local_c * 8) * 0x24;
    puts("Congrats! You won.");
  }
  else {
    *(long *)(bets + (long)local_c * 8) = *(long *)(bets + (long)local_c * 8) / 2;
    puts("Better luck next time! You lost.");
  }
  return;
}

int rng(void)

{
  int iVar1;
  time_t tVar2;
  
  tVar2 = time((time_t *)0x0);
  srand((uint)tVar2);
  iVar1 = FUN_00401100();
  return iVar1 % 0x25;
}


undefined8 main(void)

{
  uint local_1c;
  
  setvbuf(stdout,(char *)0x0,2,0);
  setvbuf(stdin,(char *)0x0,2,0);
  puts("This casino is very safe!");
  puts("You get to play twice, and we even let you keep half your money if you lose.");
  play();
  play();
  for (local_1c = 0; local_1c < 0x120; local_1c = local_1c + 1) {
  }
  printf(exit_msg);
  return 0;
}

