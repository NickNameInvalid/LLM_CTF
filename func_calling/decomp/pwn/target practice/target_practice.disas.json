{
  "fflush": "; int fflush(FILE * __stream)\n; Parameters:\n; __stream       FILE *         RDI\n; Stack variables:\n                                  fflush:\n.plt:00400600    ff252a0a2000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::fflush]             ; int fflush(FILE * __stream)\n.plt:00400606    6803000000           PUSH        0x3\n.plt:0040060b    e9b0ffffff           JMP         FUN_004005c0                                 ; undefined FUN_004005c0()\n; int fflush(FILE * __stream)\n; Parameters:\n; __stream       FILE *         RDI\n; Stack variables:\n                                  ; fflush@@GLIBC_2.2.5\n                                  fflush:\nEXTERNAL:00602028                      ??          ??\n",
  "setvbuf": "; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n; Parameters:\n; __stream       FILE *         RDI\n; __buf          char *         RSI\n; __modes        int            EDX\n; __n            size_t         RCX\n; Stack variables:\n                                  setvbuf:\n.plt:00400610    ff25220a2000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::setvbuf]            ; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n.plt:00400616    6804000000           PUSH        0x4\n.plt:0040061b    e9a0ffffff           JMP         FUN_004005c0                                 ; undefined FUN_004005c0()\n; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n; Parameters:\n; __stream       FILE *         RDI\n; __buf          char *         RSI\n; __modes        int            EDX\n; __n            size_t         RCX\n; Stack variables:\n                                  ; setvbuf@@GLIBC_2.2.5\n                                  setvbuf:\nEXTERNAL:00602030                      ??          ??\n",
  "register_tm_clones": "; undefined register_tm_clones()\n; Parameters:\n; Stack variables:\n                                  register_tm_clones:\n.text:004006a0   be58106000           MOV         ESI,__TMC_END__\n.text:004006a5   55                   PUSH        RBP\n.text:004006a6   4881ee58106000       SUB         RSI,__TMC_END__\n.text:004006ad   4889e5               MOV         RBP,RSP\n.text:004006b0   48c1fe03             SAR         RSI,0x3\n.text:004006b4   4889f0               MOV         RAX,RSI\n.text:004006b7   48c1e83f             SHR         RAX,0x3f\n.text:004006bb   4801c6               ADD         RSI,RAX\n.text:004006be   48d1fe               SAR         RSI,0x1\n.text:004006c1   7415                 JZ          LAB_004006d8\n.text:004006c3   b800000000           MOV         EAX,0x0\n.text:004006c8   4885c0               TEST        RAX,RAX\n.text:004006cb   740b                 JZ          LAB_004006d8\n.text:004006cd   5d                   POP         RBP\n.text:004006ce   bf58106000           MOV         EDI,__TMC_END__\n.text:004006d3   ffe0                 JMP         RAX\n                                  LAB_004006d8:\n.text:004006d8   5d                   POP         RBP\n.text:004006d9   c3                   RET\n",
  "__libc_csu_init": "; undefined __libc_csu_init()\n; Parameters:\n; Stack variables:\n                                  __libc_csu_init:\n.text:004007f0   4157                 PUSH        R15\n.text:004007f2   4156                 PUSH        R14\n.text:004007f4   4989d7               MOV         R15,RDX\n.text:004007f7   4155                 PUSH        R13\n.text:004007f9   4154                 PUSH        R12\n.text:004007fb   4c8d250e062000       LEA         R12,[__frame_dummy_init_array_entry]         ; \u003d 00400710\n.text:00400802   55                   PUSH        RBP\n.text:00400803   488d2d0e062000       LEA         RBP,[__do_global_dtors_aux_fini_array_entry]     ; \u003d 004006e0\n.text:0040080a   53                   PUSH        RBX\n.text:0040080b   4189fd               MOV         R13D,EDI\n.text:0040080e   4989f6               MOV         R14,RSI\n.text:00400811   4c29e5               SUB         RBP,R12\n.text:00400814   4883ec08             SUB         RSP,0x8\n.text:00400818   48c1fd03             SAR         RBP,0x3\n.text:0040081c   e887fdffff           CALL        _init                                        ; int _init(EVP_PKEY_CTX * ctx)\n.text:00400821   4885ed               TEST        RBP,RBP\n.text:00400824   7420                 JZ          LAB_00400846\n.text:00400826   31db                 XOR         EBX,EBX\n.text:00400828   0f1f840000000000     NOP         dword ptr [RAX + RAX*0x1]\n                                  LAB_00400830:\n.text:00400830   4c89fa               MOV         RDX,R15\n.text:00400833   4c89f6               MOV         RSI,R14\n.text:00400836   4489ef               MOV         EDI,R13D\n.text:00400839   41ff14dc             CALL        qword ptr [R12 + RBX*0x8]\u003d\u003e-\u003eframe_dummy     ; undefined __do_global_dtors_aux(), undefined frame_dummy(), \u003d 00400710, \u003d 004006e0\n.text:0040083d   4883c301             ADD         RBX,0x1\n.text:00400841   4839dd               CMP         RBP,RBX\n.text:00400844   75ea                 JNZ         LAB_00400830\n                                  LAB_00400846:\n.text:00400846   4883c408             ADD         RSP,0x8\n.text:0040084a   5b                   POP         RBX\n.text:0040084b   5d                   POP         RBP\n.text:0040084c   415c                 POP         R12\n.text:0040084e   415d                 POP         R13\n.text:00400850   415e                 POP         R14\n.text:00400852   415f                 POP         R15\n.text:00400854   c3                   RET\n",
  "_init": "; int __stdcall _init(EVP_PKEY_CTX * ctx)\n; Parameters:\n; ctx            EVP_PKEY_CTX * RDI\n; Stack variables:\n                                  _init:\n.init:004005a8   4883ec08             SUB         RSP,0x8\n.init:004005ac   488b05450a2000       MOV         RAX\u003d\u003e\u003cEXTERNAL\u003e::__gmon_start__,qword ptr [-\u003e\u003cEXTERNAL\u003e::__gmon_start__]     ; \u003d ??, \u003d 00602020\n.init:004005b3   4885c0               TEST        RAX,RAX\n.init:004005b6   7402                 JZ          LAB_004005ba\n.init:004005b8   ffd0                 CALL        RAX\u003d\u003e\u003cEXTERNAL\u003e::__gmon_start__              ; undefined __gmon_start__()\n                                  LAB_004005ba:\n.init:004005ba   4883c408             ADD         RSP,0x8\n.init:004005be   c3                   RET\n",
  "_start": "; undefined processEntry _start()\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _start:\n.text:00400630   31ed                 XOR         EBP,EBP\n.text:00400632   4989d1               MOV         R9,RDX\n.text:00400635   5e                   POP         RSI\n.text:00400636   4889e2               MOV         RDX,RSP\n.text:00400639   4883e4f0             AND         RSP,-0x10\n.text:0040063d   50                   PUSH        RAX\n.text:0040063e   54                   PUSH        RSP\u003d\u003elocal_10\n.text:0040063f   49c7c060084000       MOV         R8,__libc_csu_fini\n.text:00400646   48c7c1f0074000       MOV         RCX,__libc_csu_init\n.text:0040064d   48c7c72a074000       MOV         RDI,main\n.text:00400654   ff1596092000         CALL        qword ptr [-\u003e\u003cEXTERNAL\u003e::__libc_start_main]     ; undefined __libc_start_main(), \u003d 00602018\n.text:0040065a   f4                   HLT\n",
  "_dl_relocate_static_pie": "; undefined _dl_relocate_static_pie()\n; Parameters:\n; Stack variables:\n                                  _dl_relocate_static_pie:\n.text:00400660   f3c3                 RET\n",
  "__gmon_start__": "; undefined __gmon_start__()\n; Parameters:\n; Stack variables:\n                                  __gmon_start__:\nEXTERNAL:00602020                      ??          ??\n",
  "__stack_chk_fail": "; undefined __stack_chk_fail()\n; Parameters:\n; Stack variables:\n                                  __stack_chk_fail:\n.plt:004005d0    ff25420a2000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::__stack_chk_fail]     ; undefined __stack_chk_fail()\n.plt:004005d6    6800000000           PUSH        0x0\n.plt:004005db    e9e0ffffff           JMP         FUN_004005c0                                 ; undefined FUN_004005c0()\n; undefined __stack_chk_fail()\n; Parameters:\n; Stack variables:\n                                  ; __stack_chk_fail@@GLIBC_2.4\n                                  __stack_chk_fail:\nEXTERNAL:00602000                      ??          ??\n",
  "main": "; undefined main()\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  main:\n.text:0040072a   55                   PUSH        RBP\n.text:0040072b   4889e5               MOV         RBP,RSP\n.text:0040072e   4883ec20             SUB         RSP,0x20\n.text:00400732   64488b042528000000     MOV         RAX,qword ptr FS:[0x28]\n.text:0040073b   488945f8             MOV         qword ptr [RBP + local_10+0x8],RAX\n.text:0040073f   31c0                 XOR         EAX,EAX\n.text:00400741   488b0518092000       MOV         RAX,qword ptr [stdout]\n.text:00400748   b900000000           MOV         ECX,0x0\n.text:0040074d   ba02000000           MOV         EDX,0x2\n.text:00400752   be00000000           MOV         ESI,0x0\n.text:00400757   4889c7               MOV         RDI,RAX\n.text:0040075a   e8b1feffff           CALL        \u003cEXTERNAL\u003e::setvbuf                          ; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n.text:0040075f   488b050a092000       MOV         RAX,qword ptr [stdin]\n.text:00400766   b900000000           MOV         ECX,0x0\n.text:0040076b   ba02000000           MOV         EDX,0x2\n.text:00400770   be00000000           MOV         ESI,0x0\n.text:00400775   4889c7               MOV         RDI,RAX\n.text:00400778   e893feffff           CALL        \u003cEXTERNAL\u003e::setvbuf                          ; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n.text:0040077d   488b05dc082000       MOV         RAX,qword ptr [stdout]\n.text:00400784   4889c7               MOV         RDI,RAX\n.text:00400787   e874feffff           CALL        \u003cEXTERNAL\u003e::fflush                           ; int fflush(FILE * __stream)\n.text:0040078c   488b05dd082000       MOV         RAX,qword ptr [stdin]\n.text:00400793   4889c7               MOV         RDI,RAX\n.text:00400796   e865feffff           CALL        \u003cEXTERNAL\u003e::fflush                           ; int fflush(FILE * __stream)\n.text:0040079b   488d3de0000000       LEA         RDI,[s_Aim_carefully...._00400882]           ; \u003d \"Aim carefully.... \"\n.text:004007a2   b800000000           MOV         EAX,0x0\n.text:004007a7   e844feffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:004007ac   488d45e8             LEA         RAX\u003d\u003elocal_20,[RBP + -0x18]\n.text:004007b0   4889c6               MOV         RSI,RAX\n.text:004007b3   488d3ddb000000       LEA         RDI,[DAT_00400895]                           ; \u003d 25h    %\n.text:004007ba   b800000000           MOV         EAX,0x0\n.text:004007bf   e85cfeffff           CALL        \u003cEXTERNAL\u003e::__isoc99_scanf                   ; undefined __isoc99_scanf()\n.text:004007c4   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:004007c8   488945f0             MOV         qword ptr [RBP + local_18+0x8],RAX\n.text:004007cc   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:004007d0   ffd0                 CALL        RAX\n.text:004007d2   b800000000           MOV         EAX,0x0\n.text:004007d7   488b55f8             MOV         RDX,qword ptr [RBP + local_10+0x8]\n.text:004007db   644833142528000000     XOR         RDX,qword ptr FS:[0x28]\n.text:004007e4   7405                 JZ          LAB_004007eb\n.text:004007e6   e8e5fdffff           CALL        \u003cEXTERNAL\u003e::__stack_chk_fail                 ; undefined __stack_chk_fail()\n                                  LAB_004007eb:\n.text:004007eb   c9                   LEAVE\n.text:004007ec   c3                   RET\n",
  "FUN_004005c0": "; undefined FUN_004005c0()\n; Parameters:\n; Stack variables:\n                                  FUN_004005c0:\n.plt:004005c0    ff35420a2000         PUSH        qword ptr [PTR_00601008]                     ; \u003d 00000000\n.plt:004005c6    ff25440a2000         JMP         qword ptr [PTR_00601010]\n",
  "printf": "; int printf(char * __format, ...)\n; Parameters:\n; __format       char *         RDI\n; Stack variables:\n                                  printf:\n.plt:004005f0    ff25320a2000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::printf]             ; int printf(char * __format, ...)\n.plt:004005f6    6802000000           PUSH        0x2\n.plt:004005fb    e9c0ffffff           JMP         FUN_004005c0                                 ; undefined FUN_004005c0()\n; int printf(char * __format, ...)\n; Parameters:\n; __format       char *         RDI\n; Stack variables:\n                                  ; printf@@GLIBC_2.2.5\n                                  printf:\nEXTERNAL:00602010                      ??          ??\n",
  "deregister_tm_clones": "; undefined deregister_tm_clones()\n; Parameters:\n; Stack variables:\n                                  deregister_tm_clones:\n.text:00400670   55                   PUSH        RBP\n.text:00400671   b858106000           MOV         EAX,__TMC_END__\n.text:00400676   483d58106000         CMP         RAX,__TMC_END__\n.text:0040067c   4889e5               MOV         RBP,RSP\n.text:0040067f   7417                 JZ          LAB_00400698\n.text:00400681   b800000000           MOV         EAX,0x0\n.text:00400686   4885c0               TEST        RAX,RAX\n.text:00400689   740d                 JZ          LAB_00400698\n.text:0040068b   5d                   POP         RBP\n.text:0040068c   bf58106000           MOV         EDI,__TMC_END__\n.text:00400691   ffe0                 JMP         RAX\n                                  LAB_00400698:\n.text:00400698   5d                   POP         RBP\n.text:00400699   c3                   RET\n",
  "__libc_csu_fini": "; undefined __libc_csu_fini()\n; Parameters:\n; Stack variables:\n                                  __libc_csu_fini:\n.text:00400860   f3c3                 RET\n",
  "__isoc99_scanf": "; undefined __isoc99_scanf()\n; Parameters:\n; Stack variables:\n                                  __isoc99_scanf:\n.plt:00400620    ff251a0a2000         JMP         qword ptr [DAT_00601040]                     ; undefined __isoc99_scanf(), -\u003e __isoc99_scanf\n.plt:00400626    6805000000           PUSH        0x5\n.plt:0040062b    e990ffffff           JMP         FUN_004005c0                                 ; undefined FUN_004005c0()\n; undefined __isoc99_scanf()\n; Parameters:\n; Stack variables:\n                                  ; __isoc99_scanf@@GLIBC_2.7\n                                  __isoc99_scanf:\nEXTERNAL:00602038                      ??          ??\n",
  "__libc_start_main": "; undefined __libc_start_main()\n; Parameters:\n; Stack variables:\n                                  ; __libc_start_main@@GLIBC_2.2.5\n                                  __libc_start_main:\nEXTERNAL:00602018                      ??          ??\n",
  "system": "; int system(char * __command)\n; Parameters:\n; __command      char *         RDI\n; Stack variables:\n                                  system:\n.plt:004005e0    ff253a0a2000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::system]             ; int system(char * __command)\n.plt:004005e6    6801000000           PUSH        0x1\n.plt:004005eb    e9d0ffffff           JMP         FUN_004005c0                                 ; undefined FUN_004005c0()\n; int system(char * __command)\n; Parameters:\n; __command      char *         RDI\n; Stack variables:\n                                  ; system@@GLIBC_2.2.5\n                                  system:\nEXTERNAL:00602008                      ??          ??\n",
  "__do_global_dtors_aux": "; undefined __do_global_dtors_aux()\n; Parameters:\n; Stack variables:\n                                  __do_global_dtors_aux:\n.text:004006e0   803d9109200000       CMP         byte ptr [completed.7698],0x0\n.text:004006e7   7517                 JNZ         LAB_00400700\n.text:004006e9   55                   PUSH        RBP\n.text:004006ea   4889e5               MOV         RBP,RSP\n.text:004006ed   e87effffff           CALL        deregister_tm_clones                         ; undefined deregister_tm_clones()\n.text:004006f2   c6057f09200001       MOV         byte ptr [completed.7698],0x1\n.text:004006f9   5d                   POP         RBP\n.text:004006fa   c3                   RET\n                                  LAB_00400700:\n.text:00400700   f3c3                 RET\n",
  "_fini": "; undefined _fini()\n; Parameters:\n; Stack variables:\n                                  _fini:\n.fini:00400864   4883ec08             SUB         RSP,0x8\n.fini:00400868   4883c408             ADD         RSP,0x8\n.fini:0040086c   c3                   RET\n",
  "cat_flag": "; undefined cat_flag()\n; Parameters:\n; Stack variables:\n                                  cat_flag:\n.text:00400717   55                   PUSH        RBP\n.text:00400718   4889e5               MOV         RBP,RSP\n.text:0040071b   488d3d52010000       LEA         RDI,[s_cat_/flag.txt_00400874]               ; \u003d \"cat /flag.txt\"\n.text:00400722   e8b9feffff           CALL        \u003cEXTERNAL\u003e::system                           ; int system(char * __command)\n.text:00400727   90                   NOP\n.text:00400728   5d                   POP         RBP\n.text:00400729   c3                   RET\n",
  "frame_dummy": "; undefined frame_dummy()\n; Parameters:\n; Stack variables:\n                                  frame_dummy:\n.text:00400710   55                   PUSH        RBP\n.text:00400711   4889e5               MOV         RBP,RSP\n.text:00400714   5d                   POP         RBP\n.text:00400715   eb89                 JMP         register_tm_clones                           ; undefined register_tm_clones()\n"
}