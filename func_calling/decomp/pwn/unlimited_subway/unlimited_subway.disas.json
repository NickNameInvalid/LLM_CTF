{
  "setvbuf": "; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n; Parameters:\n; __stream       FILE *          0x4\n; __buf          char *          0x8\n; __modes        int             0xc\n; __n            size_t          0x10\n; Stack variables:\n                                  setvbuf:\n.plt:080490d0    ff2530c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::setvbuf]            ; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n.plt:080490d6    6848000000           PUSH        0x48\n.plt:080490db    e950ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n; Parameters:\n; __stream       FILE *          0x4\n; __buf          char *          0x8\n; __modes        int             0xc\n; __n            size_t          0x10\n; Stack variables:\n                                  ; setvbuf@GLIBC_2.0\n                                  setvbuf:\nEXTERNAL:0804d028                      ??          ??\n",
  "_init": "; undefined _init()\n; Parameters:\n; Stack variables:\n                                  _init:\n.init:08049000   f30f1efb             ENDBR32\n.init:08049004   53                   PUSH        EBX\n.init:08049005   83ec08               SUB         ESP,0x8\n.init:08049008   e833010000           CALL        __x86.get_pc_thunk.bx                        ; undefined __x86.get_pc_thunk.bx()\n.init:0804900d   81c3f32f0000         ADD         EBX,0x2ff3\n.init:08049013   8b83fcffffff         MOV         EAX\u003d\u003e\u003cEXTERNAL\u003e::__gmon_start__,dword ptr [EBX + 0xfffffffc]\u003d\u003e-\u003e\u003cEXTERNAL\u003e::__gmon_start__     ; \u003d ??, \u003d 0804d020\n.init:08049019   85c0                 TEST        EAX,EAX\n.init:0804901b   7402                 JZ          LAB_0804901f\n.init:0804901d   ffd0                 CALL        EAX\u003d\u003e\u003cEXTERNAL\u003e::__gmon_start__              ; undefined __gmon_start__()\n                                  LAB_0804901f:\n.init:0804901f   83c408               ADD         ESP,0x8\n.init:08049022   5b                   POP         EBX\n.init:08049023   c3                   RET\n",
  "_start": "; undefined processEntry _start()\n; Parameters:\n; Stack variables:\n; local_8        undefined4     -0x8\n                                  _start:\n.text:080490f0   f30f1efb             ENDBR32\n.text:080490f4   31ed                 XOR         EBP,EBP\n.text:080490f6   5e                   POP         ESI\n.text:080490f7   89e1                 MOV         ECX,ESP\n.text:080490f9   83e4f0               AND         ESP,0xfffffff0\n.text:080490fc   50                   PUSH        EAX\n.text:080490fd   54                   PUSH        ESP\u003d\u003elocal_8\n.text:080490fe   52                   PUSH        EDX\n.text:080490ff   e819000000           CALL        __i686.get_pc_thunk.bx                       ; undefined __i686.get_pc_thunk.bx()\n.text:08049104   81c3fc2e0000         ADD         EBX,0x2efc\n.text:0804910a   6a00                 PUSH        0x0\n.text:0804910c   6a00                 PUSH        0x0\n.text:0804910e   51                   PUSH        ECX\n.text:0804910f   56                   PUSH        ESI\n.text:08049110   c7c017930408         MOV         EAX,main\n.text:08049116   50                   PUSH        EAX\u003d\u003emain\n.text:08049117   e824ffffff           CALL        \u003cEXTERNAL\u003e::__libc_start_main                ; undefined __libc_start_main()\n.text:0804911c   f4                   HLT\n",
  "view_account": "; undefined view_account(undefined4 param_1, undefined4 param_2)\n; Parameters:\n; param_1        undefined4      0x4\n; param_2        undefined4      0x8\n; Stack variables:\n                                  view_account:\n.text:080492a5   55                   PUSH        EBP\n.text:080492a6   89e5                 MOV         EBP,ESP\n.text:080492a8   8b550c               MOV         EDX,dword ptr [EBP + param_2+0x4]\n.text:080492ab   8b4508               MOV         EAX,dword ptr [EBP + param_1+0x4]\n.text:080492ae   01d0                 ADD         EAX,EDX\n.text:080492b0   0fb600               MOVZX       EAX,byte ptr [EAX]\n.text:080492b3   0fb6c0               MOVZX       EAX,AL\n.text:080492b6   50                   PUSH        EAX\n.text:080492b7   ff750c               PUSH        dword ptr [EBP + param_2+0x4]\n.text:080492ba   688aa00408           PUSH        s_Index_%d_:_%02x_0804a08a                   ; \u003d \"Index %d : %02x\\n\"\n.text:080492bf   e89cfdffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:080492c4   83c40c               ADD         ESP,0xc\n.text:080492c7   90                   NOP\n.text:080492c8   c9                   LEAVE\n.text:080492c9   c3                   RET\n",
  "__stack_chk_fail": "; undefined __stack_chk_fail()\n; Parameters:\n; Stack variables:\n                                  __stack_chk_fail:\n.plt:08049090    ff2520c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::__stack_chk_fail]     ; undefined __stack_chk_fail()\n.plt:08049096    6828000000           PUSH        0x28\n.plt:0804909b    e990ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; undefined __stack_chk_fail()\n; Parameters:\n; Stack variables:\n                                  ; __stack_chk_fail@GLIBC_2.4\n                                  __stack_chk_fail:\nEXTERNAL:0804d014                      ??          ??\n",
  "main": "; undefined main(undefined param_1, undefined4 param_2)\n; Parameters:\n; param_1        undefined       0x4\n; param_2        undefined4      0x8\n; Stack variables:\n; local_8        undefined4     -0x8\n; local_c        undefined4     -0xc\n; local_10       undefined4     -0x10\n; local_14       undefined4     -0x14\n; local_18       undefined4     -0x18\n; local_1c       undefined4     -0x1c\n; local_20       undefined4     -0x20\n; local_24       undefined4     -0x24\n; local_28       undefined4     -0x28\n; local_2c       undefined4     -0x2c\n; local_30       undefined4     -0x30\n; local_34       undefined4     -0x34\n; local_38       undefined4     -0x38\n; local_3c       undefined4     -0x3c\n; local_40       undefined4     -0x40\n; local_44       undefined4     -0x44\n; local_48       undefined4     -0x48\n; local_4c       undefined4     -0x4c\n; local_50       undefined4     -0x50\n; local_54       undefined4     -0x54\n; local_58       undefined4     -0x58\n; local_5c       undefined4     -0x5c\n; local_60       undefined4     -0x60\n; local_64       undefined4     -0x64\n; local_68       undefined4     -0x68\n; local_6c       undefined4     -0x6c\n; local_70       undefined4     -0x70\n; local_74       undefined4     -0x74\n; local_78       undefined4     -0x78\n; local_7c       undefined4     -0x7c\n; local_80       undefined4     -0x80\n; local_84       undefined4     -0x84\n; local_88       undefined4     -0x88\n; local_8a       undefined2     -0x8a\n; local_90       undefined4     -0x90\n; local_94       undefined4     -0x94\n; local_98       undefined4     -0x98\n                                  main:\n.text:08049317   55                   PUSH        EBP\n.text:08049318   89e5                 MOV         EBP,ESP\n.text:0804931a   81ec94000000         SUB         ESP,0x94\n.text:08049320   8b450c               MOV         EAX,dword ptr [EBP + param_2+0x4]\n.text:08049323   89856cffffff         MOV         dword ptr [EBP + local_98+0x4],EAX\n.text:08049329   65a114000000         MOV         EAX,GS:[0x14]\n.text:0804932f   8945fc               MOV         dword ptr [EBP + local_8+0x4],EAX\n.text:08049332   31c0                 XOR         EAX,EAX\n.text:08049334   c7857cffffff00000000     MOV         dword ptr [EBP + local_88+0x4],0x0\n.text:0804933e   c7458000000000       MOV         dword ptr [EBP + local_84+0x4],0x0\n.text:08049345   c7458400000000       MOV         dword ptr [EBP + local_80+0x4],0x0\n.text:0804934c   c7458800000000       MOV         dword ptr [EBP + local_7c+0x4],0x0\n.text:08049353   c7458c00000000       MOV         dword ptr [EBP + local_78+0x4],0x0\n.text:0804935a   c7459000000000       MOV         dword ptr [EBP + local_74+0x4],0x0\n.text:08049361   c7459400000000       MOV         dword ptr [EBP + local_70+0x4],0x0\n.text:08049368   c7459800000000       MOV         dword ptr [EBP + local_6c+0x4],0x0\n.text:0804936f   c7459c00000000       MOV         dword ptr [EBP + local_68+0x4],0x0\n.text:08049376   c745a000000000       MOV         dword ptr [EBP + local_64+0x4],0x0\n.text:0804937d   c745a400000000       MOV         dword ptr [EBP + local_60+0x4],0x0\n.text:08049384   c745a800000000       MOV         dword ptr [EBP + local_5c+0x4],0x0\n.text:0804938b   c745ac00000000       MOV         dword ptr [EBP + local_58+0x4],0x0\n.text:08049392   c745b000000000       MOV         dword ptr [EBP + local_54+0x4],0x0\n.text:08049399   c745b400000000       MOV         dword ptr [EBP + local_50+0x4],0x0\n.text:080493a0   c745b800000000       MOV         dword ptr [EBP + local_4c+0x4],0x0\n.text:080493a7   c745bc00000000       MOV         dword ptr [EBP + local_48+0x4],0x0\n.text:080493ae   c745c000000000       MOV         dword ptr [EBP + local_44+0x4],0x0\n.text:080493b5   c745c400000000       MOV         dword ptr [EBP + local_40+0x4],0x0\n.text:080493bc   c745c800000000       MOV         dword ptr [EBP + local_3c+0x4],0x0\n.text:080493c3   c745cc00000000       MOV         dword ptr [EBP + local_38+0x4],0x0\n.text:080493ca   c745d000000000       MOV         dword ptr [EBP + local_34+0x4],0x0\n.text:080493d1   c745d400000000       MOV         dword ptr [EBP + local_30+0x4],0x0\n.text:080493d8   c745d800000000       MOV         dword ptr [EBP + local_2c+0x4],0x0\n.text:080493df   c745dc00000000       MOV         dword ptr [EBP + local_28+0x4],0x0\n.text:080493e6   c745e000000000       MOV         dword ptr [EBP + local_24+0x4],0x0\n.text:080493ed   c745e400000000       MOV         dword ptr [EBP + local_20+0x4],0x0\n.text:080493f4   c745e800000000       MOV         dword ptr [EBP + local_1c+0x4],0x0\n.text:080493fb   c745ec00000000       MOV         dword ptr [EBP + local_18+0x4],0x0\n.text:08049402   c745f000000000       MOV         dword ptr [EBP + local_14+0x4],0x0\n.text:08049409   c745f400000000       MOV         dword ptr [EBP + local_10+0x4],0x0\n.text:08049410   c745f800000000       MOV         dword ptr [EBP + local_c+0x4],0x0\n.text:08049417   66c7857affffff0000     MOV         word ptr [EBP + local_8a+0x4],0x0\n.text:08049420   c78570ffffff00000000     MOV         dword ptr [EBP + local_94+0x4],0x0\n.text:0804942a   c78574ffffff00000000     MOV         dword ptr [EBP + local_90+0x4],0x0\n.text:08049434   e8e4fdffff           CALL        init                                         ; int init(EVP_PKEY_CTX * ctx)\n                                  LAB_08049439:\n.text:08049439   e88cfeffff           CALL        print_menu                                   ; undefined print_menu()\n.text:0804943e   6a02                 PUSH        0x2\n.text:08049440   8d857affffff         LEA         EAX\u003d\u003elocal_8a,[EBP + 0xffffff7a]\n.text:08049446   50                   PUSH        EAX\n.text:08049447   6a00                 PUSH        0x0\n.text:08049449   e802fcffff           CALL        \u003cEXTERNAL\u003e::read                             ; ssize_t read(int __fd, void * __buf, size_t __nbytes)\n.text:0804944e   83c40c               ADD         ESP,0xc\n.text:08049451   0fb6857affffff       MOVZX       EAX,byte ptr [EBP + local_8a+0x4]\n.text:08049458   3c46                 CMP         AL,0x46\n.text:0804945a   7522                 JNZ         LAB_0804947e\n.text:0804945c   68d8a00408           PUSH        s_Data_:_0804a0d8                            ; \u003d \"Data : \"\n.text:08049461   e8fafbffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:08049466   83c404               ADD         ESP,0x4\n.text:08049469   6a40                 PUSH        0x40\n.text:0804946b   8d857cffffff         LEA         EAX\u003d\u003elocal_88,[EBP + 0xffffff7c]\n.text:08049471   50                   PUSH        EAX\n.text:08049472   6a00                 PUSH        0x0\n.text:08049474   e8d7fbffff           CALL        \u003cEXTERNAL\u003e::read                             ; ssize_t read(int __fd, void * __buf, size_t __nbytes)\n.text:08049479   83c40c               ADD         ESP,0xc\n.text:0804947c   ebbb                 JMP         LAB_08049439\n                                  LAB_0804947e:\n.text:0804947e   0fb6857affffff       MOVZX       EAX,byte ptr [EBP + local_8a+0x4]\n.text:08049485   3c56                 CMP         AL,0x56\n.text:08049487   753c                 JNZ         LAB_080494c5\n.text:08049489   68e0a00408           PUSH        s_Index_:_0804a0e0                           ; \u003d \"Index : \"\n.text:0804948e   e8cdfbffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:08049493   83c404               ADD         ESP,0x4\n.text:08049496   8d8570ffffff         LEA         EAX\u003d\u003elocal_94,[EBP + 0xffffff70]\n.text:0804949c   50                   PUSH        EAX\n.text:0804949d   68e9a00408           PUSH        DAT_0804a0e9                                 ; \u003d 25h    %\n.text:080494a2   e839fcffff           CALL        \u003cEXTERNAL\u003e::__isoc99_scanf                   ; undefined __isoc99_scanf()\n.text:080494a7   83c408               ADD         ESP,0x8\n.text:080494aa   8b8570ffffff         MOV         EAX,dword ptr [EBP + local_94+0x4]\n.text:080494b0   50                   PUSH        EAX\n.text:080494b1   8d857cffffff         LEA         EAX\u003d\u003elocal_88,[EBP + 0xffffff7c]\n.text:080494b7   50                   PUSH        EAX\n.text:080494b8   e8e8fdffff           CALL        view_account                                 ; undefined view_account(undefined4 param_1, undefined4 param_2)\n.text:080494bd   83c408               ADD         ESP,0x8\n.text:080494c0   e974ffffff           JMP         LAB_08049439\n                                  LAB_080494c5:\n.text:080494c5   0fb6857affffff       MOVZX       EAX,byte ptr [EBP + local_8a+0x4]\n.text:080494cc   3c45                 CMP         AL,0x45\n.text:080494ce   7556                 JNZ         LAB_08049526\n.text:080494d0   68eca00408           PUSH        s_Name_Size_:_0804a0ec                       ; \u003d \"Name Size : \"\n.text:080494d5   e886fbffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:080494da   83c404               ADD         ESP,0x4\n.text:080494dd   8d8574ffffff         LEA         EAX\u003d\u003elocal_90,[EBP + 0xffffff74]\n.text:080494e3   50                   PUSH        EAX\n.text:080494e4   68e9a00408           PUSH        DAT_0804a0e9                                 ; \u003d 25h    %\n.text:080494e9   e8f2fbffff           CALL        \u003cEXTERNAL\u003e::__isoc99_scanf                   ; undefined __isoc99_scanf()\n.text:080494ee   83c408               ADD         ESP,0x8\n.text:080494f1   68f9a00408           PUSH        s_Name_:_0804a0f9                            ; \u003d \"Name : \"\n.text:080494f6   e865fbffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:080494fb   83c404               ADD         ESP,0x4\n.text:080494fe   8b8574ffffff         MOV         EAX,dword ptr [EBP + local_90+0x4]\n.text:08049504   50                   PUSH        EAX\n.text:08049505   8d45bc               LEA         EAX\u003d\u003elocal_48,[EBP + -0x44]\n.text:08049508   50                   PUSH        EAX\n.text:08049509   6a00                 PUSH        0x0\n.text:0804950b   e840fbffff           CALL        \u003cEXTERNAL\u003e::read                             ; ssize_t read(int __fd, void * __buf, size_t __nbytes)\n.text:08049510   83c40c               ADD         ESP,0xc\n.text:08049513   b800000000           MOV         EAX,0x0\n.text:08049518   8b55fc               MOV         EDX,dword ptr [EBP + local_8+0x4]\n.text:0804951b   652b1514000000       SUB         EDX,dword ptr GS:[0x14]\n.text:08049522   7419                 JZ          LAB_0804953d\n.text:08049524   eb12                 JMP         LAB_08049538\n                                  LAB_08049526:\n.text:08049526   6801a10408           PUSH        s_Invalid_choice_0804a101                    ; \u003d \"Invalid choice\"\n.text:0804952b   e870fbffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:08049530   83c404               ADD         ESP,0x4\n.text:08049533   e901ffffff           JMP         LAB_08049439\n                                  LAB_08049538:\n.text:08049538   e853fbffff           CALL        \u003cEXTERNAL\u003e::__stack_chk_fail                 ; undefined __stack_chk_fail()\n                                  LAB_0804953d:\n.text:0804953d   c9                   LEAVE\n.text:0804953e   c3                   RET\n",
  "__i686.get_pc_thunk.bx": "; undefined __i686.get_pc_thunk.bx()\n; Parameters:\n; Stack variables:\n; local_res0     undefined4      0x0\n                                  __i686.get_pc_thunk.bx:\n.text:0804911d   8b1c24               MOV         EBX,dword ptr [ESP]\u003d\u003elocal_res0\n.text:08049120   c3                   RET\n",
  "printf": "; int printf(char * __format, ...)\n; Parameters:\n; __format       char *          0x4\n; Stack variables:\n                                  printf:\n.plt:08049060    ff2514c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::printf]             ; int printf(char * __format, ...)\n.plt:08049066    6810000000           PUSH        0x10\n.plt:0804906b    e9c0ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; int printf(char * __format, ...)\n; Parameters:\n; __format       char *          0x4\n; Stack variables:\n                                  ; printf@GLIBC_2.0\n                                  printf:\nEXTERNAL:0804d008                      ??          ??\n",
  "deregister_tm_clones": "; undefined deregister_tm_clones()\n; Parameters:\n; Stack variables:\n                                  deregister_tm_clones:\n.text:08049150   b840c00408           MOV         EAX,stdin\n.text:08049155   3d40c00408           CMP         EAX,stdin\n.text:0804915a   7424                 JZ          LAB_08049180\n.text:0804915c   b800000000           MOV         EAX,0x0\n.text:08049161   85c0                 TEST        EAX,EAX\n.text:08049163   741b                 JZ          LAB_08049180\n.text:08049165   55                   PUSH        EBP\n.text:08049166   89e5                 MOV         EBP,ESP\n.text:08049168   83ec14               SUB         ESP,0x14\n.text:0804916b   6840c00408           PUSH        stdin\n.text:08049170   ffd0                 CALL        EAX\n.text:08049172   83c410               ADD         ESP,0x10\n.text:08049175   c9                   LEAVE\n.text:08049176   c3                   RET\n                                  LAB_08049180:\n.text:08049180   c3                   RET\n",
  "__libc_start_main": "; undefined __libc_start_main()\n; Parameters:\n; Stack variables:\n                                  __libc_start_main:\n.plt:08049040    ff250cc00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::__libc_start_main]     ; undefined __libc_start_main()\n.plt:08049046    6800000000           PUSH        0x0\n.plt:0804904b    e9e0ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; undefined __libc_start_main()\n; Parameters:\n; Stack variables:\n                                  ; __libc_start_main@GLIBC_2.34\n                                  __libc_start_main:\nEXTERNAL:0804d000                      ??          ??\n",
  "__isoc99_scanf": "; undefined __isoc99_scanf()\n; Parameters:\n; Stack variables:\n                                  __isoc99_scanf:\n.plt:080490e0    ff2534c00408         JMP         dword ptr [DAT_0804c034]                     ; undefined __isoc99_scanf(), -\u003e __isoc99_scanf\n.plt:080490e6    6850000000           PUSH        0x50\n.plt:080490eb    e940ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; undefined __isoc99_scanf()\n; Parameters:\n; Stack variables:\n                                  ; __isoc99_scanf@GLIBC_2.7\n                                  __isoc99_scanf:\nEXTERNAL:0804d02c                      ??          ??\n",
  "alarm": "; uint alarm(uint __seconds)\n; Parameters:\n; __seconds      uint            0x4\n; Stack variables:\n                                  alarm:\n.plt:08049080    ff251cc00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::alarm]              ; uint alarm(uint __seconds)\n.plt:08049086    6820000000           PUSH        0x20\n.plt:0804908b    e9a0ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; uint alarm(uint __seconds)\n; Parameters:\n; __seconds      uint            0x4\n; Stack variables:\n                                  ; alarm@GLIBC_2.0\n                                  alarm:\nEXTERNAL:0804d010                      ??          ??\n",
  "__x86.get_pc_thunk.bx": "; undefined __x86.get_pc_thunk.bx()\n; Parameters:\n; Stack variables:\n; local_res0     undefined4      0x0\n                                  __x86.get_pc_thunk.bx:\n.text:08049140   8b1c24               MOV         EBX,dword ptr [ESP]\u003d\u003elocal_res0\n.text:08049143   c3                   RET\n",
  "FUN_08049030": "; undefined FUN_08049030()\n; Parameters:\n; Stack variables:\n                                  FUN_08049030:\n.plt:08049030    ff3504c00408         PUSH        dword ptr [PTR_0804c004]                     ; \u003d 00000000\n.plt:08049036    ff2508c00408         JMP         dword ptr [PTR_0804c008]\n",
  "signal": "; __sighandler_t signal(int __sig, __sighandler_t __handler)\n; Parameters:\n; __sig          int             0x4\n; __handler      __sighandler_t  0x8\n; Stack variables:\n                                  signal:\n.plt:08049070    ff2518c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::signal]             ; __sighandler_t signal(int __sig, __sighandler_t __handler)\n.plt:08049076    6818000000           PUSH        0x18\n.plt:0804907b    e9b0ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; __sighandler_t signal(int __sig, __sighandler_t __handler)\n; Parameters:\n; __sig          int             0x4\n; __handler      __sighandler_t  0x8\n; Stack variables:\n                                  ; signal@GLIBC_2.0\n                                  signal:\nEXTERNAL:0804d00c                      ??          ??\n",
  "frame_dummy": "; undefined frame_dummy()\n; Parameters:\n; Stack variables:\n                                  frame_dummy:\n.text:08049200   f30f1efb             ENDBR32\n.text:08049204   eb8a                 JMP         register_tm_clones                           ; undefined register_tm_clones()\n",
  "register_tm_clones": "; undefined register_tm_clones()\n; Parameters:\n; Stack variables:\n                                  register_tm_clones:\n.text:08049190   b840c00408           MOV         EAX,stdin\n.text:08049195   2d40c00408           SUB         EAX,stdin\n.text:0804919a   89c2                 MOV         EDX,EAX\n.text:0804919c   c1e81f               SHR         EAX,0x1f\n.text:0804919f   c1fa02               SAR         EDX,0x2\n.text:080491a2   01d0                 ADD         EAX,EDX\n.text:080491a4   d1f8                 SAR         EAX,0x1\n.text:080491a6   7420                 JZ          LAB_080491c8\n.text:080491a8   ba00000000           MOV         EDX,0x0\n.text:080491ad   85d2                 TEST        EDX,EDX\n.text:080491af   7417                 JZ          LAB_080491c8\n.text:080491b1   55                   PUSH        EBP\n.text:080491b2   89e5                 MOV         EBP,ESP\n.text:080491b4   83ec10               SUB         ESP,0x10\n.text:080491b7   50                   PUSH        EAX\n.text:080491b8   6840c00408           PUSH        stdin\n.text:080491bd   ffd2                 CALL        EDX\n.text:080491bf   83c410               ADD         ESP,0x10\n.text:080491c2   c9                   LEAVE\n.text:080491c3   c3                   RET\n                                  LAB_080491c8:\n.text:080491c8   c3                   RET\n",
  "init": "; int __cdecl init(EVP_PKEY_CTX * ctx)\n; Parameters:\n; ctx            EVP_PKEY_CTX *  0x4\n; Stack variables:\n                                  init:\n.text:0804921d   55                   PUSH        EBP\n.text:0804921e   89e5                 MOV         EBP,ESP\n.text:08049220   a140c00408           MOV         EAX,[stdin]\n.text:08049225   6a00                 PUSH        0x0\n.text:08049227   6a02                 PUSH        0x2\n.text:08049229   6a00                 PUSH        0x0\n.text:0804922b   50                   PUSH        EAX\n.text:0804922c   e89ffeffff           CALL        \u003cEXTERNAL\u003e::setvbuf                          ; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n.text:08049231   83c410               ADD         ESP,0x10\n.text:08049234   a144c00408           MOV         EAX,[stdout]\n.text:08049239   6a00                 PUSH        0x0\n.text:0804923b   6a02                 PUSH        0x2\n.text:0804923d   6a00                 PUSH        0x0\n.text:0804923f   50                   PUSH        EAX\n.text:08049240   e88bfeffff           CALL        \u003cEXTERNAL\u003e::setvbuf                          ; int setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n.text:08049245   83c410               ADD         ESP,0x10\n.text:08049248   6806920408           PUSH        _alarm\n.text:0804924d   6a0e                 PUSH        0xe\n.text:0804924f   e81cfeffff           CALL        \u003cEXTERNAL\u003e::signal                           ; __sighandler_t signal(int __sig, __sighandler_t __handler)\n.text:08049254   83c408               ADD         ESP,0x8\n.text:08049257   6a1e                 PUSH        0x1e\n.text:08049259   e822feffff           CALL        \u003cEXTERNAL\u003e::alarm                            ; uint alarm(uint __seconds)\n.text:0804925e   83c404               ADD         ESP,0x4\n.text:08049261   6814a00408           PUSH        s_\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d_0804a014     ; \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"\n.text:08049266   e835feffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:0804926b   83c404               ADD         ESP,0x4\n.text:0804926e   683ca00408           PUSH        s_\u003d_\u003d_0804a03c                               ; \u003d \"\u003d                                   \u003d\"\n.text:08049273   e828feffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:08049278   83c404               ADD         ESP,0x4\n.text:0804927b   6864a00408           PUSH        s_\u003d_Subway_Account_System_\u003d_0804a064         ; \u003d \"\u003d       Subway Account System       \u003d\"\n.text:08049280   e81bfeffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:08049285   83c404               ADD         ESP,0x4\n.text:08049288   683ca00408           PUSH        s_\u003d_\u003d_0804a03c                               ; \u003d \"\u003d                                   \u003d\"\n.text:0804928d   e80efeffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:08049292   83c404               ADD         ESP,0x4\n.text:08049295   6814a00408           PUSH        s_\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d_0804a014     ; \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"\n.text:0804929a   e801feffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:0804929f   83c404               ADD         ESP,0x4\n.text:080492a2   90                   NOP\n.text:080492a3   c9                   LEAVE\n.text:080492a4   c3                   RET\n",
  "read": "; ssize_t read(int __fd, void * __buf, size_t __nbytes)\n; Parameters:\n; __fd           int             0x4\n; __buf          void *          0x8\n; __nbytes       size_t          0xc\n; Stack variables:\n                                  read:\n.plt:08049050    ff2510c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::read]               ; ssize_t read(int __fd, void * __buf, size_t __nbytes)\n.plt:08049056    6808000000           PUSH        0x8\n.plt:0804905b    e9d0ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; ssize_t read(int __fd, void * __buf, size_t __nbytes)\n; Parameters:\n; __fd           int             0x4\n; __buf          void *          0x8\n; __nbytes       size_t          0xc\n; Stack variables:\n                                  ; read@GLIBC_2.0\n                                  read:\nEXTERNAL:0804d004                      ??          ??\n",
  "_dl_relocate_static_pie": "; undefined _dl_relocate_static_pie()\n; Parameters:\n; Stack variables:\n                                  _dl_relocate_static_pie:\n.text:08049130   f30f1efb             ENDBR32\n.text:08049134   c3                   RET\n",
  "__gmon_start__": "; undefined __gmon_start__()\n; Parameters:\n; Stack variables:\n                                  __gmon_start__:\nEXTERNAL:0804d020                      ??          ??\n",
  "puts": "; int puts(char * __s)\n; Parameters:\n; __s            char *          0x4\n; Stack variables:\n                                  puts:\n.plt:080490a0    ff2524c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::puts]               ; int puts(char * __s)\n.plt:080490a6    6830000000           PUSH        0x30\n.plt:080490ab    e980ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; int puts(char * __s)\n; Parameters:\n; __s            char *          0x4\n; Stack variables:\n                                  ; puts@GLIBC_2.0\n                                  puts:\nEXTERNAL:0804d018                      ??          ??\n",
  "exit": "; void exit(int __status)\n; Parameters:\n; __status       int             0x4\n; Stack variables:\n                                  exit:\n.plt:080490c0    ff252cc00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::exit]               ; void exit(int __status)\n.plt:080490c6    6840000000           PUSH        0x40\n.plt:080490cb    e960ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; void exit(int __status)\n; Parameters:\n; __status       int             0x4\n; Stack variables:\n                                  ; exit@GLIBC_2.0\n                                  exit:\nEXTERNAL:0804d024                      ??          ??\n",
  "print_menu": "; undefined print_menu()\n; Parameters:\n; Stack variables:\n                                  print_menu:\n.text:080492ca   55                   PUSH        EBP\n.text:080492cb   89e5                 MOV         EBP,ESP\n.text:080492cd   689ba00408           PUSH        s_[F]ill_account_info_0804a09b               ; \u003d \"[F]ill account info\"\n.text:080492d2   e8c9fdffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:080492d7   83c404               ADD         ESP,0x4\n.text:080492da   68afa00408           PUSH        s_[V]iew_account_info_0804a0af               ; \u003d \"[V]iew account info\"\n.text:080492df   e8bcfdffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:080492e4   83c404               ADD         ESP,0x4\n.text:080492e7   68c3a00408           PUSH        s_[E]xit_0804a0c3                            ; \u003d \"[E]xit\"\n.text:080492ec   e8affdffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:080492f1   83c404               ADD         ESP,0x4\n.text:080492f4   68caa00408           PUSH        DAT_0804a0ca                                 ; \u003d 3Eh    \u003e\n.text:080492f9   e862fdffff           CALL        \u003cEXTERNAL\u003e::printf                           ; int printf(char * __format, ...)\n.text:080492fe   83c404               ADD         ESP,0x4\n.text:08049301   90                   NOP\n.text:08049302   c9                   LEAVE\n.text:08049303   c3                   RET\n",
  "system": "; int system(char * __command)\n; Parameters:\n; __command      char *          0x4\n; Stack variables:\n                                  system:\n.plt:080490b0    ff2528c00408         JMP         dword ptr [-\u003e\u003cEXTERNAL\u003e::system]             ; int system(char * __command)\n.plt:080490b6    6838000000           PUSH        0x38\n.plt:080490bb    e970ffffff           JMP         FUN_08049030                                 ; undefined FUN_08049030()\n; int system(char * __command)\n; Parameters:\n; __command      char *          0x4\n; Stack variables:\n                                  ; system@GLIBC_2.0\n                                  system:\nEXTERNAL:0804d01c                      ??          ??\n",
  "__do_global_dtors_aux": "; undefined __do_global_dtors_aux()\n; Parameters:\n; Stack variables:\n                                  __do_global_dtors_aux:\n.text:080491d0   f30f1efb             ENDBR32\n.text:080491d4   803d48c0040800       CMP         byte ptr [completed.0],0x0\n.text:080491db   751b                 JNZ         LAB_080491f8\n.text:080491dd   55                   PUSH        EBP\n.text:080491de   89e5                 MOV         EBP,ESP\n.text:080491e0   83ec08               SUB         ESP,0x8\n.text:080491e3   e868ffffff           CALL        deregister_tm_clones                         ; undefined deregister_tm_clones()\n.text:080491e8   c60548c0040801       MOV         byte ptr [completed.0],0x1\n.text:080491ef   c9                   LEAVE\n.text:080491f0   c3                   RET\n                                  LAB_080491f8:\n.text:080491f8   c3                   RET\n",
  "_alarm": "; undefined _alarm()\n; Parameters:\n; Stack variables:\n                                  _alarm:\n.text:08049206   55                   PUSH        EBP\n.text:08049207   89e5                 MOV         EBP,ESP\n.text:08049209   6808a00408           PUSH        s_TIME_OUT_0804a008                          ; \u003d \"TIME OUT\"\n.text:0804920e   e88dfeffff           CALL        \u003cEXTERNAL\u003e::puts                             ; int puts(char * __s)\n.text:08049213   83c404               ADD         ESP,0x4\n.text:08049216   6aff                 PUSH        -0x1\n.text:08049218   e8a3feffff           CALL        \u003cEXTERNAL\u003e::exit                             ; void exit(int __status)\n",
  "_fini": "; undefined _fini()\n; Parameters:\n; Stack variables:\n                                  _fini:\n.fini:08049540   f30f1efb             ENDBR32\n.fini:08049544   53                   PUSH        EBX\n.fini:08049545   83ec08               SUB         ESP,0x8\n.fini:08049548   e8f3fbffff           CALL        __x86.get_pc_thunk.bx                        ; undefined __x86.get_pc_thunk.bx()\n.fini:0804954d   81c3b32a0000         ADD         EBX,0x2ab3\n.fini:08049553   83c408               ADD         ESP,0x8\n.fini:08049556   5b                   POP         EBX\n.fini:08049557   c3                   RET\n",
  "print_flag": "; undefined print_flag()\n; Parameters:\n; Stack variables:\n                                  print_flag:\n.text:08049304   55                   PUSH        EBP\n.text:08049305   89e5                 MOV         EBP,ESP\n.text:08049307   68cda00408           PUSH        s_cat_./flag_0804a0cd                        ; \u003d \"cat ./flag\"\n.text:0804930c   e89ffdffff           CALL        \u003cEXTERNAL\u003e::system                           ; int system(char * __command)\n.text:08049311   83c404               ADD         ESP,0x4\n.text:08049314   90                   NOP\n.text:08049315   c9                   LEAVE\n.text:08049316   c3                   RET\n"
}