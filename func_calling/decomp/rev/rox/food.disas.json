{
  "_M_set_length": "; undefined _M_set_length(ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  _M_set_length:\n.plt:00401430    ff25ba7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_set_length]     ; undefined _M_set_length(ulong param_1)\n.plt:00401436    6809000000           PUSH        0x9\n.plt:0040143b    e950ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_set_length(ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21\n                                  _M_set_length:\nEXTERNAL:0040a040                      ??          ??\n",
  "min\u003cunsigned_long\u003e": "; ulong * min\u003cunsigned_long\u003e(ulong * param_1, ulong * param_2)\n; Parameters:\n; param_1        ulong *        RDI\n; param_2        ulong *        RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  min\u003cunsigned_long\u003e:\n.text:0040301b   55                   PUSH        RBP\n.text:0040301c   4889e5               MOV         RBP,RSP\n.text:0040301f   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403023   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403027   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:0040302b   488b10               MOV         RDX,qword ptr [RAX]\n.text:0040302e   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403032   488b00               MOV         RAX,qword ptr [RAX]\n.text:00403035   4839c2               CMP         RDX,RAX\n.text:00403038   7306                 JNC         LAB_00403040\n.text:0040303a   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:0040303e   eb04                 JMP         LAB_00403044\n                                  LAB_00403040:\n.text:00403040   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n                                  LAB_00403044:\n.text:00403044   5d                   POP         RBP\n.text:00403045   c3                   RET\n",
  "deallocate": "; undefined __stdcall deallocate(allocator * param_1, int * param_2, ulong param_3)\n; Parameters:\n; param_1        allocator *    RDI\n; param_2        int *          RSI\n; param_3        ulong          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  deallocate:\n.text:00402dbe   55                   PUSH        RBP\n.text:00402dbf   4889e5               MOV         RBP,RSP\n.text:00402dc2   4883ec20             SUB         RSP,0x20\n.text:00402dc6   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402dca   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402dce   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00402dd2   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:00402dd6   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00402dda   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402dde   4889ce               MOV         param_2,RCX\n.text:00402de1   4889c7               MOV         param_1,RAX\n.text:00402de4   e8e7010000           CALL        std::__new_allocator\u003cint\u003e::deallocate        ; undefined deallocate(__new_allocator\u003cint\u003e * this, int * param_1, ulong param_2)\n.text:00402de9   90                   NOP\n.text:00402dea   c9                   LEAVE\n.text:00402deb   c3                   RET\n; undefined __stdcall deallocate(allocator * param_1, uchar * param_2, ulong param_3)\n; Parameters:\n; param_1        allocator *    RDI\n; param_2        uchar *        RSI\n; param_3        ulong          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  deallocate:\n.text:00402ee2   55                   PUSH        RBP\n.text:00402ee3   4889e5               MOV         RBP,RSP\n.text:00402ee6   4883ec20             SUB         RSP,0x20\n.text:00402eea   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402eee   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402ef2   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00402ef6   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:00402efa   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00402efe   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402f02   4889ce               MOV         param_2,RCX\n.text:00402f05   4889c7               MOV         param_1,RAX\n.text:00402f08   e8d7010000           CALL        std::__new_allocator\u003cunsigned_char\u003e::deallocate     ; undefined deallocate(__new_allocator\u003cunsigned_char\u003e * this, uchar * param_1, ulong param_2)\n.text:00402f0d   90                   NOP\n.text:00402f0e   c9                   LEAVE\n.text:00402f0f   c3                   RET\n; undefined __thiscall deallocate(int * param_1, ulong param_2)\n; Parameters:\n; this           __new_allocator\u003cint\u003e * RDI\n; param_1        int *          RSI\n; param_2        ulong          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  deallocate:\n.text:00402fd0   55                   PUSH        RBP\n.text:00402fd1   4889e5               MOV         RBP,RSP\n.text:00402fd4   4883ec20             SUB         RSP,0x20\n.text:00402fd8   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402fdc   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402fe0   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_2\n.text:00402fe4   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402fe8   488d148500000000     LEA         param_2,[RAX*0x4]\n.text:00402ff0   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00402ff4   4889d6               MOV         param_1,param_2\n.text:00402ff7   4889c7               MOV         this,RAX\n.text:00402ffa   e8d1e4ffff           CALL        \u003cEXTERNAL\u003e::operator.delete                  ; void operator.delete(void * param_1, ulong param_2)\n.text:00402fff   c9                   LEAVE\n.text:00403000   c3                   RET\n; undefined __thiscall deallocate(uchar * param_1, ulong param_2)\n; Parameters:\n; this           __new_allocator\u003cunsigned_char\u003e * RDI\n; param_1        uchar *        RSI\n; param_2        ulong          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  deallocate:\n.text:004030e4   55                   PUSH        RBP\n.text:004030e5   4889e5               MOV         RBP,RSP\n.text:004030e8   4883ec20             SUB         RSP,0x20\n.text:004030ec   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:004030f0   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:004030f4   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_2\n.text:004030f8   488b55e8             MOV         param_2,qword ptr [RBP + local_20+0x8]\n.text:004030fc   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00403100   4889d6               MOV         param_1,param_2\n.text:00403103   4889c7               MOV         this,RAX\n.text:00403106   e8c5e3ffff           CALL        \u003cEXTERNAL\u003e::operator.delete                  ; void operator.delete(void * param_1, ulong param_2)\n.text:0040310b   c9                   LEAVE\n.text:0040310c   c3                   RET\n",
  "__miter_base\u003cunsigned_char_const*\u003e": "; uchar * __miter_base\u003cunsigned_char_const*\u003e(uchar * param_1)\n; Parameters:\n; param_1        uchar *        RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __miter_base\u003cunsigned_char_const*\u003e:\n.text:00403309   55                   PUSH        RBP\n.text:0040330a   4889e5               MOV         RBP,RSP\n.text:0040330d   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403311   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403315   5d                   POP         RBP\n.text:00403316   c3                   RET\n",
  "~_Guard": "; undefined __thiscall ~_Guard(void)\n; Parameters:\n; this           _Guard *       RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~_Guard:\n.text:00402552   55                   PUSH        RBP\n.text:00402553   4889e5               MOV         RBP,RSP\n.text:00402556   4883ec10             SUB         RSP,0x10\n.text:0040255a   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:0040255e   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402562   488b00               MOV         RAX,qword ptr [RAX]\n.text:00402565   4885c0               TEST        RAX,RAX\n.text:00402568   740f                 JZ          LAB_00402579\n.text:0040256a   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040256e   488b00               MOV         RAX,qword ptr [RAX]\n.text:00402571   4889c7               MOV         this,RAX\n.text:00402574   e8d7efffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_dispose     ; undefined _M_dispose(void)\n                                  LAB_00402579:\n.text:00402579   90                   NOP\n.text:0040257a   c9                   LEAVE\n.text:0040257b   c3                   RET\n",
  "__niter_base\u003cunsigned_char*\u003e": "; uchar * __niter_base\u003cunsigned_char*\u003e(uchar * param_1)\n; Parameters:\n; param_1        uchar *        RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __niter_base\u003cunsigned_char*\u003e:\n.text:004033ea   55                   PUSH        RBP\n.text:004033eb   4889e5               MOV         RBP,RSP\n.text:004033ee   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004033f2   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004033f6   5d                   POP         RBP\n.text:004033f7   c3                   RET\n",
  "__distance\u003cint_const*\u003e": "; difference_type __distance\u003cint_const*\u003e(int * param_1, int * param_2, random_access_iterator_tag param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        random_access_iterator_tag EDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __distance\u003cint_const*\u003e:\n.text:00402ae1   55                   PUSH        RBP\n.text:00402ae2   4889e5               MOV         RBP,RSP\n.text:00402ae5   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402ae9   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402aed   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00402af1   482b45f8             SUB         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402af5   48c1f802             SAR         RAX,0x2\n.text:00402af9   5d                   POP         RBP\n.text:00402afa   c3                   RET\n",
  "rand": "; int rand(void)\n; Parameters:\n; Stack variables:\n                                  rand:\n.plt:00401570    ff251a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::rand]               ; int rand(void)\n.plt:00401576    681d000000           PUSH        0x1d\n.plt:0040157b    e910feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; int rand(void)\n; Parameters:\n; Stack variables:\n                                  ; rand@FBSD_1.6\n                                  rand:\nEXTERNAL:0040a0e0                      ??          ??\n",
  "__gxx_personality_v0": "; undefined __gxx_personality_v0()\n; Parameters:\n; Stack variables:\n                                  __gxx_personality_v0:\n.plt:00401580    ff25127f0000         JMP         qword ptr [-\u003e__gxx_personality_v0]\n.plt:00401586    681e000000           PUSH        0x1e\n.plt:0040158b    e900feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n",
  "Init": "; undefined __thiscall Init(void)\n; Parameters:\n; this           Init *         RDI\n; Stack variables:\n                                  Init:\n.plt:00401560    ff25227f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::ios_base::Init::Init]     ; undefined Init(Init * this)\n.plt:00401566    681c000000           PUSH        0x1c\n.plt:0040156b    e920feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall Init(void)\n; Parameters:\n; this           Init *         RDI\n; Stack variables:\n                                  ; _ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4\n                                  Init:\nEXTERNAL:0040a0d8                      ??          ??\n",
  "allocator": "; undefined allocator(void)\n; Parameters:\n; Stack variables:\n                                  allocator:\n.plt:004015a0    ff25027f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::allocator]     ; undefined allocator(void)\n.plt:004015a6    6820000000           PUSH        0x20\n.plt:004015ab    e9e0fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined allocator(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  allocator:\n.text:00402238   55                   PUSH        RBP\n.text:00402239   4889e5               MOV         RBP,RSP\n.text:0040223c   4883ec10             SUB         RSP,0x10\n.text:00402240   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402244   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402248   4889c7               MOV         RDI,RAX\n.text:0040224b   e814040000           CALL        std::__new_allocator\u003cint\u003e::__new_allocator     ; undefined __new_allocator(void)\n.text:00402250   90                   NOP\n.text:00402251   c9                   LEAVE\n.text:00402252   c3                   RET\n; undefined allocator(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  allocator:\n.text:004022f8   55                   PUSH        RBP\n.text:004022f9   4889e5               MOV         RBP,RSP\n.text:004022fc   4883ec10             SUB         RSP,0x10\n.text:00402300   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402304   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402308   4889c7               MOV         RDI,RAX\n.text:0040230b   e824050000           CALL        std::__new_allocator\u003cunsigned_char\u003e::__new_allocator     ; undefined __new_allocator(void)\n.text:00402310   90                   NOP\n.text:00402311   c9                   LEAVE\n.text:00402312   c3                   RET\n; undefined __stdcall allocator(allocator * param_1)\n; Parameters:\n; param_1        allocator *    RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  allocator:\n.text:00402d6a   55                   PUSH        RBP\n.text:00402d6b   4889e5               MOV         RBP,RSP\n.text:00402d6e   4883ec10             SUB         RSP,0x10\n.text:00402d72   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402d76   488975f0             MOV         qword ptr [RBP + local_18+0x8],RSI\n.text:00402d7a   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402d7e   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402d82   4889d6               MOV         RSI,RDX\n.text:00402d85   4889c7               MOV         param_1,RAX\n.text:00402d88   e833020000           CALL        std::__new_allocator\u003cint\u003e::__new_allocator     ; undefined __new_allocator(__new_allocator * param_1)\n.text:00402d8d   90                   NOP\n.text:00402d8e   c9                   LEAVE\n.text:00402d8f   c3                   RET\n; undefined __stdcall allocator(allocator * param_1)\n; Parameters:\n; param_1        allocator *    RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  allocator:\n.text:00402e8e   55                   PUSH        RBP\n.text:00402e8f   4889e5               MOV         RBP,RSP\n.text:00402e92   4883ec10             SUB         RSP,0x10\n.text:00402e96   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402e9a   488975f0             MOV         qword ptr [RBP + local_18+0x8],RSI\n.text:00402e9e   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402ea2   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402ea6   4889d6               MOV         RSI,RDX\n.text:00402ea9   4889c7               MOV         param_1,RAX\n.text:00402eac   e823020000           CALL        std::__new_allocator\u003cunsigned_char\u003e::__new_allocator     ; undefined __new_allocator(__new_allocator * param_1)\n.text:00402eb1   90                   NOP\n.text:00402eb2   c9                   LEAVE\n.text:00402eb3   c3                   RET\n; undefined allocator(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZNSaIcEC1Ev@GLIBCXX_3.4\n                                  allocator:\nEXTERNAL:0040a0f8                      ??          ??\n",
  "__iterator_category\u003cchar_const*\u003e": "; iterator_category __iterator_category\u003cchar_const*\u003e(char * * param_1)\n; Parameters:\n; param_1        char * *       RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __iterator_category\u003cchar_const*\u003e:\n.text:00402d48   55                   PUSH        RBP\n.text:00402d49   4889e5               MOV         RBP,RSP\n.text:00402d4c   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402d50   90                   NOP\n.text:00402d51   5d                   POP         RBP\n.text:00402d52   c3                   RET\n",
  "frame_dummy": "; undefined frame_dummy()\n; Parameters:\n; Stack variables:\n                                  frame_dummy:\n.text:00401990   e93bffffff           JMP         register_tm_clones\n",
  "_Unwind_Resume": "; undefined _Unwind_Resume()\n; Parameters:\n; Stack variables:\n                                  _Unwind_Resume:\n.plt:00401590    ff250a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::_Unwind_Resume]     ; undefined _Unwind_Resume()\n.plt:00401596    681f000000           PUSH        0x1f\n.plt:0040159b    e9f0fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _Unwind_Resume()\n; Parameters:\n; Stack variables:\n                                  ; _Unwind_Resume@GCC_3.0\n                                  _Unwind_Resume:\nEXTERNAL:0040a0f0                      ??          ??\n",
  "_ITM_registerTMCloneTable": "; undefined _ITM_registerTMCloneTable()\n; Parameters:\n; Stack variables:\n                                  _ITM_registerTMCloneTable:\nEXTERNAL:0040a110                      ??          ??\n",
  "finalizer": "; void finalizer(void)\n; Parameters:\n; Stack variables:\n; n              size_t         RCX\n; fn             _func_void *   RAX\n                                  finalizer:\n.text:00401840   55                   PUSH        RBP\n.text:00401841   4889e5               MOV         RBP,RSP\n.text:00401844   53                   PUSH        RBX\n.text:00401845   50                   PUSH        RAX\n.text:00401846   b980914000           MOV         ECX,__CTOR_LIST__                            ; \u003d FFFFFFFFFFFFFFFFh\n.text:0040184b   b880914000           MOV         EAX,__CTOR_LIST__                            ; \u003d FFFFFFFFFFFFFFFFh\n.text:00401850   4829c8               SUB         RAX,RCX\n.text:00401853   488d5807             LEA         RBX,[RAX + 0x7]\n.text:00401857   4885c0               TEST        RAX,RAX\n.text:0040185a   4889c1               MOV         RCX,RAX\n.text:0040185d   480f48cb             CMOVS       RCX,RBX\n.text:00401861   48c1f903             SAR         RCX,0x3\n.text:00401865   750b                 JNZ         LAB_00401872\n                                  LAB_00401867:\n.text:00401867   4883c408             ADD         RSP,0x8\n.text:0040186b   5b                   POP         RBX\n.text:0040186c   5d                   POP         RBP\n.text:0040186d   e9b21d0000           JMP         _fini                                        ; undefined _fini()\n                                  LAB_00401872:\n.text:00401872   4885c0               TEST        RAX,RAX\n.text:00401875   480f49d8             CMOVNS      RBX,RAX\n.text:00401879   48c1fb03             SAR         RBX,0x3\n.text:0040187d   eb06                 JMP         LAB_00401885\n                                  LAB_00401880:\n.text:00401880   4885db               TEST        RBX,RBX\n.text:00401883   74e2                 JZ          LAB_00401867\n                                  LAB_00401885:\n.text:00401885   488b04dd78914000     MOV         RAX,qword ptr [-\u003e_GLOBAL__sub_I_fail_msgs + RBX*0x8]     ; \u003d 00402184\n.text:0040188d   4883c3ff             ADD         RBX,-0x1\n.text:00401891   4883f802             CMP         RAX,0x2\n.text:00401895   72e9                 JC          LAB_00401880\n.text:00401897   ffd0                 CALL        fn\u003d\u003e_GLOBAL__sub_I_fail_msgs                 ; undefined _GLOBAL__sub_I_fail_msgs()\n.text:00401899   ebe5                 JMP         LAB_00401880\n",
  "__uninit_copy\u003cint_const*,int*\u003e": "; int * __stdcall __uninit_copy\u003cint_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  __uninit_copy\u003cint_const*,int*\u003e:\n.text:004030a7   55                   PUSH        RBP\n.text:004030a8   4889e5               MOV         RBP,RSP\n.text:004030ab   4883ec20             SUB         RSP,0x20\n.text:004030af   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004030b3   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:004030b7   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:004030bb   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:004030bf   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:004030c3   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004030c7   4889ce               MOV         param_2,RCX\n.text:004030ca   4889c7               MOV         param_1,RAX\n.text:004030cd   e8fa000000           CALL        std::copy\u003cint_const*,int*\u003e                   ; int * copy\u003cint_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n.text:004030d2   c9                   LEAVE\n.text:004030d3   c3                   RET\n",
  "__copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e": "; uchar * __copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  __copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e:\n.text:00403317   55                   PUSH        RBP\n.text:00403318   4889e5               MOV         RBP,RSP\n.text:0040331b   4154                 PUSH        R12\n.text:0040331d   53                   PUSH        RBX\n.text:0040331e   4883ec20             SUB         RSP,0x20\n.text:00403322   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:00403326   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:0040332a   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:0040332e   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00403332   4889c7               MOV         param_1,RAX\n.text:00403335   e8b0000000           CALL        std::__niter_base\u003cunsigned_char*\u003e            ; uchar * __niter_base\u003cunsigned_char*\u003e(uchar * param_1)\n.text:0040333a   4989c4               MOV         R12,RAX\n.text:0040333d   488b45e0             MOV         RAX,qword ptr [RBP + local_28+0x8]\n.text:00403341   4889c7               MOV         param_1,RAX\n.text:00403344   e893000000           CALL        std::__niter_base\u003cunsigned_char_const*\u003e      ; uchar * __niter_base\u003cunsigned_char_const*\u003e(uchar * param_1)\n.text:00403349   4889c3               MOV         RBX,RAX\n.text:0040334c   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00403350   4889c7               MOV         param_1,RAX\n.text:00403353   e884000000           CALL        std::__niter_base\u003cunsigned_char_const*\u003e      ; uchar * __niter_base\u003cunsigned_char_const*\u003e(uchar * param_1)\n.text:00403358   4c89e2               MOV         param_3,R12\n.text:0040335b   4889de               MOV         param_2,RBX\n.text:0040335e   4889c7               MOV         param_1,RAX\n.text:00403361   e892000000           CALL        std::__copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e     ; uchar * __copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:00403366   4889c2               MOV         param_3,RAX\n.text:00403369   488d45d8             LEA         RAX\u003d\u003elocal_30,[RBP + -0x28]\n.text:0040336d   4889d6               MOV         param_2,param_3\n.text:00403370   4889c7               MOV         param_1,RAX\n.text:00403373   e8ad000000           CALL        std::__niter_wrap\u003cunsigned_char*\u003e            ; uchar * __niter_wrap\u003cunsigned_char*\u003e(uchar * * param_1, uchar * param_2)\n.text:00403378   4883c420             ADD         RSP,0x20\n.text:0040337c   5b                   POP         RBX\n.text:0040337d   415c                 POP         R12\n.text:0040337f   5d                   POP         RBP\n.text:00403380   c3                   RET\n",
  "~vector": "; undefined __thiscall ~vector(void)\n; Parameters:\n; this           vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~vector:\n.text:004023b8   55                   PUSH        RBP\n.text:004023b9   4889e5               MOV         RBP,RSP\n.text:004023bc   4883ec10             SUB         RSP,0x10\n.text:004023c0   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:004023c4   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004023c8   4889c7               MOV         this,RAX\n.text:004023cb   e822060000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_get_Tp_allocator     ; undefined _M_get_Tp_allocator(void)\n.text:004023d0   4889c2               MOV         RDX,RAX\n.text:004023d3   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004023d7   488b4808             MOV         RCX,qword ptr [RAX + 0x8]\n.text:004023db   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004023df   488b00               MOV         RAX,qword ptr [RAX]\n.text:004023e2   4889ce               MOV         RSI,RCX\n.text:004023e5   4889c7               MOV         this,RAX\n.text:004023e8   e813060000           CALL        std::_Destroy\u003cunsigned_char*,unsigned_char\u003e     ; void _Destroy\u003cunsigned_char*,unsigned_char\u003e(uchar * param_1, uchar * param_2, allocator * param_3)\n.text:004023ed   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004023f1   4889c7               MOV         this,RAX\n.text:004023f4   e895040000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::~_Vector_base     ; undefined ~_Vector_base(_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this)\n.text:004023f9   90                   NOP\n.text:004023fa   c9                   LEAVE\n.text:004023fb   c3                   RET\n; undefined __thiscall ~vector(void)\n; Parameters:\n; this           vector\u003cint,std::allocator\u003cint\u003e\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~vector:\n.text:0040353c   55                   PUSH        RBP\n.text:0040353d   4889e5               MOV         RBP,RSP\n.text:00403540   4883ec10             SUB         RSP,0x10\n.text:00403544   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00403548   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040354c   4889c7               MOV         this,RAX\n.text:0040354f   e802f6ffff           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator     ; undefined _M_get_Tp_allocator(void)\n.text:00403554   4889c2               MOV         RDX,RAX\n.text:00403557   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040355b   488b4808             MOV         RCX,qword ptr [RAX + 0x8]\n.text:0040355f   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403563   488b00               MOV         RAX,qword ptr [RAX]\n.text:00403566   4889ce               MOV         RSI,RCX\n.text:00403569   4889c7               MOV         this,RAX\n.text:0040356c   e80f000000           CALL        std::_Destroy\u003cint*,int\u003e                      ; void _Destroy\u003cint*,int\u003e(int * param_1, int * param_2, allocator * param_3)\n.text:00403571   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403575   4889c7               MOV         this,RAX\n.text:00403578   e841f1ffff           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::~_Vector_base     ; undefined ~_Vector_base(_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * this)\n.text:0040357d   90                   NOP\n.text:0040357e   c9                   LEAVE\n.text:0040357f   c3                   RET\n",
  "__is_constant_evaluated": "; undefined __is_constant_evaluated(void)\n; Parameters:\n; Stack variables:\n                                  __is_constant_evaluated:\n.text:00402199   55                   PUSH        RBP\n.text:0040219a   4889e5               MOV         RBP,RSP\n.text:0040219d   b800000000           MOV         EAX,0x0\n.text:004021a2   5d                   POP         RBP\n.text:004021a3   c3                   RET\n",
  "__destroy\u003cint*\u003e": "; void __stdcall __destroy\u003cint*\u003e(int * param_1, int * param_2)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __destroy\u003cint*\u003e:\n.text:004035d0   55                   PUSH        RBP\n.text:004035d1   4889e5               MOV         RBP,RSP\n.text:004035d4   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004035d8   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:004035dc   90                   NOP\n.text:004035dd   5d                   POP         RBP\n.text:004035de   c3                   RET\n",
  "exit": "; void exit(int __status)\n; Parameters:\n; __status       int            EDI\n; Stack variables:\n                                  exit:\n.plt:004015d0    ff25ea7e0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::exit]               ; void exit(int __status)\n.plt:004015d6    6823000000           PUSH        0x23\n.plt:004015db    e9b0fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; void exit(int __status)\n; Parameters:\n; __status       int            EDI\n; Stack variables:\n                                  ; exit@FBSD_1.0\n                                  exit:\nEXTERNAL:0040a118                      ??          ??\n",
  "size": "; undefined size(void)\n; Parameters:\n; Stack variables:\n                                  size:\n.plt:00401440    ff25b27f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size]     ; undefined size(void)\n.plt:00401446    680a000000           PUSH        0xa\n.plt:0040144b    e940ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  size:\n.text:00402418   55                   PUSH        RBP\n.text:00402419   4889e5               MOV         RBP,RSP\n.text:0040241c   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402420   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402424   488b5008             MOV         RDX,qword ptr [RAX + 0x8]\n.text:00402428   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040242c   488b00               MOV         RAX,qword ptr [RAX]\n.text:0040242f   4829c2               SUB         RDX,RAX\n.text:00402432   4889d0               MOV         RAX,RDX\n.text:00402435   5d                   POP         RBP\n.text:00402436   c3                   RET\n; undefined size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  size:\n.text:00402438   55                   PUSH        RBP\n.text:00402439   4889e5               MOV         RBP,RSP\n.text:0040243c   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402440   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402444   488b5008             MOV         RDX,qword ptr [RAX + 0x8]\n.text:00402448   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040244c   488b00               MOV         RAX,qword ptr [RAX]\n.text:0040244f   4829c2               SUB         RDX,RAX\n.text:00402452   4889d0               MOV         RAX,RDX\n.text:00402455   48c1f802             SAR         RAX,0x2\n.text:00402459   5d                   POP         RBP\n.text:0040245a   c3                   RET\n; undefined size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  size:\n.text:00402ac4   55                   PUSH        RBP\n.text:00402ac5   4889e5               MOV         RBP,RSP\n.text:00402ac8   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402acc   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402ad0   488b4008             MOV         RAX,qword ptr [RAX + 0x8]\n.text:00402ad4   5d                   POP         RBP\n.text:00402ad5   c3                   RET\n; undefined size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  size:\n.text:00402c30   55                   PUSH        RBP\n.text:00402c31   4889e5               MOV         RBP,RSP\n.text:00402c34   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402c38   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402c3c   488b4008             MOV         RAX,qword ptr [RAX + 0x8]\n.text:00402c40   5d                   POP         RBP\n.text:00402c41   c3                   RET\n; undefined size(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21\n                                  size:\nEXTERNAL:0040a048                      ??          ??\n",
  "allocate": "; undefined __stdcall allocate(allocator * param_1, ulong param_2)\n; Parameters:\n; param_1        allocator *    RDI\n; param_2        ulong          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  allocate:\n.text:00402e2e   55                   PUSH        RBP\n.text:00402e2f   4889e5               MOV         RBP,RSP\n.text:00402e32   4883ec10             SUB         RSP,0x10\n.text:00402e36   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402e3a   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402e3e   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00402e42   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402e46   ba00000000           MOV         EDX,0x0\n.text:00402e4b   4889ce               MOV         param_2,RCX\n.text:00402e4e   4889c7               MOV         param_1,RAX\n.text:00402e51   e8f0010000           CALL        std::__new_allocator\u003cint\u003e::allocate          ; undefined allocate(ulong param_1, void * param_2)\n.text:00402e56   c9                   LEAVE\n.text:00402e57   c3                   RET\n; undefined __stdcall allocate(allocator * param_1, ulong param_2)\n; Parameters:\n; param_1        allocator *    RDI\n; param_2        ulong          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  allocate:\n.text:00402f52   55                   PUSH        RBP\n.text:00402f53   4889e5               MOV         RBP,RSP\n.text:00402f56   4883ec10             SUB         RSP,0x10\n.text:00402f5a   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402f5e   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402f62   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00402f66   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402f6a   ba00000000           MOV         EDX,0x0\n.text:00402f6f   4889ce               MOV         param_2,RCX\n.text:00402f72   4889c7               MOV         param_1,RAX\n.text:00402f75   e8ae010000           CALL        std::__new_allocator\u003cunsigned_char\u003e::allocate     ; undefined allocate(ulong param_1, void * param_2)\n.text:00402f7a   c9                   LEAVE\n.text:00402f7b   c3                   RET\n; undefined __stdcall allocate(ulong param_1, void * param_2)\n; Parameters:\n; param_1        ulong          RDI\n; param_2        void *         RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  allocate:\n.text:00403046   55                   PUSH        RBP\n.text:00403047   4889e5               MOV         RBP,RSP\n.text:0040304a   4883ec20             SUB         RSP,0x20\n.text:0040304e   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403052   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403056   488955e8             MOV         qword ptr [RBP + local_20+0x8],RDX\n.text:0040305a   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040305e   4889c7               MOV         param_1,RAX\n.text:00403061   e852010000           CALL        std::__new_allocator\u003cint\u003e::_M_max_size       ; undefined _M_max_size(void)\n.text:00403066   483b45f0             CMP         RAX,qword ptr [RBP + local_18+0x8]\n.text:0040306a   0f92c0               SETC        AL\n.text:0040306d   0fb6c0               MOVZX       EAX,AL\n.text:00403070   4885c0               TEST        RAX,RAX\n.text:00403073   0f95c0               SETNZ       AL\n.text:00403076   84c0                 TEST        AL,AL\n.text:00403078   741a                 JZ          LAB_00403094\n.text:0040307a   48b8ffffffffffffff3f     MOV         RAX,0x3fffffffffffffff\n.text:00403084   483b45f0             CMP         RAX,qword ptr [RBP + local_18+0x8]\n.text:00403088   7305                 JNC         LAB_0040308f\n.text:0040308a   e8e1e3ffff           CALL        \u003cEXTERNAL\u003e::std::__throw_bad_array_new_length     ; undefined __throw_bad_array_new_length(void)\n                                  LAB_0040308f:\n.text:0040308f   e83ce3ffff           CALL        \u003cEXTERNAL\u003e::std::__throw_bad_alloc           ; undefined __throw_bad_alloc(void)\n                                  LAB_00403094:\n.text:00403094   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00403098   48c1e002             SHL         RAX,0x2\n.text:0040309c   4889c7               MOV         param_1,RAX\n.text:0040309f   e81ce4ffff           CALL        \u003cEXTERNAL\u003e::operator.new                     ; void * operator.new(ulong param_1)\n.text:004030a4   90                   NOP\n.text:004030a5   c9                   LEAVE\n.text:004030a6   c3                   RET\n; undefined __stdcall allocate(ulong param_1, void * param_2)\n; Parameters:\n; param_1        ulong          RDI\n; param_2        void *         RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  allocate:\n.text:00403128   55                   PUSH        RBP\n.text:00403129   4889e5               MOV         RBP,RSP\n.text:0040312c   4883ec20             SUB         RSP,0x20\n.text:00403130   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403134   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403138   488955e8             MOV         qword ptr [RBP + local_20+0x8],RDX\n.text:0040313c   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403140   4889c7               MOV         param_1,RAX\n.text:00403143   e8ea000000           CALL        std::__new_allocator\u003cunsigned_char\u003e::_M_max_size     ; undefined _M_max_size(void)\n.text:00403148   483b45f0             CMP         RAX,qword ptr [RBP + local_18+0x8]\n.text:0040314c   0f92c0               SETC        AL\n.text:0040314f   0fb6c0               MOVZX       EAX,AL\n.text:00403152   4885c0               TEST        RAX,RAX\n.text:00403155   0f95c0               SETNZ       AL\n.text:00403158   84c0                 TEST        AL,AL\n.text:0040315a   7405                 JZ          LAB_00403161\n.text:0040315c   e86fe2ffff           CALL        \u003cEXTERNAL\u003e::std::__throw_bad_alloc           ; undefined __throw_bad_alloc(void)\n                                  LAB_00403161:\n.text:00403161   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00403165   4889c7               MOV         param_1,RAX\n.text:00403168   e853e3ffff           CALL        \u003cEXTERNAL\u003e::operator.new                     ; void * operator.new(ulong param_1)\n.text:0040316d   90                   NOP\n.text:0040316e   c9                   LEAVE\n.text:0040316f   c3                   RET\n",
  "FUN_00401390": "; undefined FUN_00401390()\n; Parameters:\n; Stack variables:\n                                  FUN_00401390:\n.plt:00401390    ff3502800000         PUSH        qword ptr [PTR_00409398]                     ; \u003d 00000000\n.plt:00401396    ff2504800000         JMP         qword ptr [PTR_004093a0]\n",
  "__copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e": "; uchar * __copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  __copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e:\n.text:00403464   55                   PUSH        RBP\n.text:00403465   4889e5               MOV         RBP,RSP\n.text:00403468   4883ec20             SUB         RSP,0x20\n.text:0040346c   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403470   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403474   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00403478   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:0040347c   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00403480   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403484   4889ce               MOV         param_2,RCX\n.text:00403487   4889c7               MOV         param_1,RAX\n.text:0040348a   e861000000           CALL        std::__copy_move\u003cfalse,true,std::random_access_iterator_tag\u003e::__copy_m\u003cunsigned_char\u003e     ; uchar * __copy_m\u003cunsigned_char\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:0040348f   c9                   LEAVE\n.text:00403490   c3                   RET\n",
  "__throw_bad_alloc": "; undefined __throw_bad_alloc(void)\n; Parameters:\n; Stack variables:\n                                  __throw_bad_alloc:\n.plt:004013d0    ff25ea7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__throw_bad_alloc]     ; undefined __throw_bad_alloc(void)\n.plt:004013d6    6803000000           PUSH        0x3\n.plt:004013db    e9b0ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __throw_bad_alloc(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZSt17__throw_bad_allocv@GLIBCXX_3.4\n                                  __throw_bad_alloc:\nEXTERNAL:0040a018                      ??          ??\n",
  "begin": "; undefined begin(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  begin:\n.text:0040270c   55                   PUSH        RBP\n.text:0040270d   4889e5               MOV         RBP,RSP\n.text:00402710   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402714   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402718   488b00               MOV         RAX,qword ptr [RAX]\n.text:0040271b   5d                   POP         RBP\n.text:0040271c   c3                   RET\n; undefined begin(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  begin:\n.text:004028d2   55                   PUSH        RBP\n.text:004028d3   4889e5               MOV         RBP,RSP\n.text:004028d6   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:004028da   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004028de   488b00               MOV         RAX,qword ptr [RAX]\n.text:004028e1   5d                   POP         RBP\n.text:004028e2   c3                   RET\n",
  "__throw_logic_error": "; undefined __throw_logic_error(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n                                  __throw_logic_error:\n.plt:00401450    ff25aa7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__throw_logic_error]     ; undefined __throw_logic_error(char * param_1)\n.plt:00401456    680b000000           PUSH        0xb\n.plt:0040145b    e930ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __throw_logic_error(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n                                  ; _ZSt19__throw_logic_errorPKc@GLIBCXX_3.4\n                                  __throw_logic_error:\nEXTERNAL:0040a050                      ??          ??\n",
  "_M_capacity": "; undefined _M_capacity(ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  _M_capacity:\n.plt:004015e0    ff25e27e0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_capacity]     ; undefined _M_capacity(ulong param_1)\n.plt:004015e6    6824000000           PUSH        0x24\n.plt:004015eb    e9a0fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_capacity(ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21\n                                  _M_capacity:\nEXTERNAL:0040a120                      ??          ??\n",
  "operator[]": "; undefined operator[](ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  operator[]:\n.plt:004015f0    ff25da7e0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::operator[]]     ; undefined operator[](ulong param_1)\n.plt:004015f6    6825000000           PUSH        0x25\n.plt:004015fb    e990fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall operator[](ulong param_1)\n; Parameters:\n; this           vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * RDI\n; param_1        ulong          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  operator[]:\n.text:004023fc   55                   PUSH        RBP\n.text:004023fd   4889e5               MOV         RBP,RSP\n.text:00402400   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402404   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402408   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040240c   488b10               MOV         RDX,qword ptr [RAX]\n.text:0040240f   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00402413   4801d0               ADD         RAX,RDX\n.text:00402416   5d                   POP         RBP\n.text:00402417   c3                   RET\n; undefined __thiscall operator[](ulong param_1)\n; Parameters:\n; this           vector\u003cint,std::allocator\u003cint\u003e\u003e * RDI\n; param_1        ulong          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  operator[]:\n.text:0040245c   55                   PUSH        RBP\n.text:0040245d   4889e5               MOV         RBP,RSP\n.text:00402460   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402464   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402468   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040246c   488b00               MOV         RAX,qword ptr [RAX]\n.text:0040246f   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402473   48c1e202             SHL         RDX,0x2\n.text:00402477   4801d0               ADD         RAX,RDX\n.text:0040247a   5d                   POP         RBP\n.text:0040247b   c3                   RET\n; undefined operator[](ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@GLIBCXX_3.4.21\n                                  operator[]:\nEXTERNAL:0040a128                      ??          ??\n",
  "_M_data": "; undefined _M_data(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n                                  _M_data:\n.plt:00401490    ff258a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_data]     ; undefined _M_data(char * param_1)\n.plt:00401496    680f000000           PUSH        0xf\n.plt:0040149b    e9f0feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_data(void)\n; Parameters:\n; Stack variables:\n                                  _M_data:\n.plt:00401520    ff25427f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_data]     ; undefined _M_data(void)\n.plt:00401526    6818000000           PUSH        0x18\n.plt:0040152b    e960feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_data(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21\n                                  _M_data:\nEXTERNAL:0040a070                      ??          ??\n; undefined _M_data(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21\n                                  _M_data:\nEXTERNAL:0040a0b8                      ??          ??\n",
  "~_Vector_impl": "; undefined __thiscall ~_Vector_impl(void)\n; Parameters:\n; this           _Vector_impl * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~_Vector_impl:\n.text:0040267c   55                   PUSH        RBP\n.text:0040267d   4889e5               MOV         RBP,RSP\n.text:00402680   4883ec10             SUB         RSP,0x10\n.text:00402684   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402688   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040268c   4889c7               MOV         this,RAX\n.text:0040268f   e8c0fbffff           CALL        std::allocator\u003cint\u003e::~allocator              ; undefined ~allocator(allocator\u003cint\u003e * this)\n.text:00402694   90                   NOP\n.text:00402695   c9                   LEAVE\n.text:00402696   c3                   RET\n; undefined __thiscall ~_Vector_impl(void)\n; Parameters:\n; this           _Vector_impl * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~_Vector_impl:\n.text:0040284c   55                   PUSH        RBP\n.text:0040284d   4889e5               MOV         RBP,RSP\n.text:00402850   4883ec10             SUB         RSP,0x10\n.text:00402854   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402858   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040285c   4889c7               MOV         this,RAX\n.text:0040285f   e8b0faffff           CALL        std::allocator\u003cunsigned_char\u003e::~allocator     ; undefined ~allocator(allocator\u003cunsigned_char\u003e * this)\n.text:00402864   90                   NOP\n.text:00402865   c9                   LEAVE\n.text:00402866   c3                   RET\n",
  "~basic_string": "; undefined __thiscall ~basic_string(void)\n; Parameters:\n; this           basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * RDI\n; Stack variables:\n                                  ~basic_string:\n.plt:00401410    ff25ca7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string]     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.plt:00401416    6807000000           PUSH        0x7\n.plt:0040141b    e970ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall ~basic_string(void)\n; Parameters:\n; this           basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * RDI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21\n                                  ~basic_string:\nEXTERNAL:0040a030                      ??          ??\n",
  "basic_string": "; undefined basic_string(basic_string * param_1)\n; Parameters:\n; param_1        basic_string * RDI\n; Stack variables:\n                                  basic_string:\n.plt:004013e0    ff25e27f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::basic_string]     ; undefined basic_string(basic_string * param_1)\n.plt:004013e6    6804000000           PUSH        0x4\n.plt:004013eb    e9a0ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined basic_string(basic_string * param_1)\n; Parameters:\n; param_1        basic_string * RDI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@GLIBCXX_3.4.21\n                                  basic_string:\nEXTERNAL:0040a020                      ??          ??\n",
  "deregister_tm_clones": "; undefined deregister_tm_clones()\n; Parameters:\n; Stack variables:\n                                  deregister_tm_clones:\n.text:004018a0   488d3df9830000       LEA         RDI,[__TMC_END__]\n.text:004018a7   488d05f2830000       LEA         RAX,[__TMC_END__]\n.text:004018ae   4839f8               CMP         RAX,RDI\n.text:004018b1   7415                 JZ          LAB_004018c8\n.text:004018b3   488b05c67a0000       MOV         RAX\u003d\u003e\u003cEXTERNAL\u003e::_ITM_deregisterTMCloneTable,qword ptr [-\u003e\u003cEXTERNAL\u003e::_ITM_deregisterTMCloneTable]     ; \u003d ??, \u003d 0040a0e8\n.text:004018ba   4885c0               TEST        RAX,RAX\n.text:004018bd   7409                 JZ          LAB_004018c8\n.text:004018bf   ffe0                 JMP         RAX\u003d\u003e\u003cEXTERNAL\u003e::_ITM_deregisterTMCloneTable     ; undefined _ITM_deregisterTMCloneTable()\n                                  LAB_004018c8:\n.text:004018c8   c3                   RET\n",
  "_M_range_initialize\u003cunsigned_char_const*\u003e": "; void __stdcall _M_range_initialize\u003cunsigned_char_const*\u003e(uchar * param_1, uchar * param_2, forward_iterator_tag param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        forward_iterator_tag EDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n; local_40       undefined8     -0x40\n                                  _M_range_initialize\u003cunsigned_char_const*\u003e:\n.text:00402946   55                   PUSH        RBP\n.text:00402947   4889e5               MOV         RBP,RSP\n.text:0040294a   53                   PUSH        RBX\n.text:0040294b   4883ec38             SUB         RSP,0x38\n.text:0040294f   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:00402953   488975d0             MOV         qword ptr [RBP + local_38+0x8],param_2\n.text:00402957   488955c8             MOV         qword ptr [RBP + local_40+0x8],param_3\n.text:0040295b   488b55c8             MOV         param_3,qword ptr [RBP + local_40+0x8]\n.text:0040295f   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:00402963   4889d6               MOV         param_2,param_3\n.text:00402966   4889c7               MOV         param_1,RAX\n.text:00402969   e8a7ffffff           CALL        std::distance\u003cunsigned_char_const*\u003e          ; difference_type distance\u003cunsigned_char_const*\u003e(uchar * param_1, uchar * param_2)\n.text:0040296e   488945e8             MOV         qword ptr [RBP + local_20+0x8],RAX\n.text:00402972   488b5dd8             MOV         RBX,qword ptr [RBP + local_30+0x8]\n.text:00402976   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:0040297a   4889c7               MOV         param_1,RAX\n.text:0040297d   e870000000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_get_Tp_allocator     ; undefined _M_get_Tp_allocator(void)\n.text:00402982   4889c2               MOV         param_3,RAX\n.text:00402985   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402989   4889d6               MOV         param_2,param_3\n.text:0040298c   4889c7               MOV         param_1,RAX\n.text:0040298f   e8cf020000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_S_check_init_len     ; undefined _S_check_init_len(ulong param_1, allocator * param_2)\n.text:00402994   4889c6               MOV         param_2,RAX\n.text:00402997   4889df               MOV         param_1,RBX\n.text:0040299a   e81f030000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_allocate     ; undefined _M_allocate(_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:0040299f   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:004029a3   488902               MOV         qword ptr [param_3],RAX\n.text:004029a6   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004029aa   488b10               MOV         param_3,qword ptr [RAX]\n.text:004029ad   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:004029b1   4801c2               ADD         param_3,RAX\n.text:004029b4   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004029b8   48895010             MOV         qword ptr [RAX + 0x10],param_3\n.text:004029bc   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004029c0   4889c7               MOV         param_1,RAX\n.text:004029c3   e82a000000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_get_Tp_allocator     ; undefined _M_get_Tp_allocator(void)\n.text:004029c8   4889c1               MOV         RCX,RAX\n.text:004029cb   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004029cf   488b10               MOV         param_3,qword ptr [RAX]\n.text:004029d2   488b75c8             MOV         param_2,qword ptr [RBP + local_40+0x8]\n.text:004029d6   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:004029da   4889c7               MOV         param_1,RAX\n.text:004029dd   e80f030000           CALL        std::__uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e     ; uchar * __uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e(uchar * param_1, uchar * param_2, uchar * param_3, allocator * param_4)\n.text:004029e2   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:004029e6   48894208             MOV         qword ptr [param_3 + 0x8],RAX\n.text:004029ea   90                   NOP\n.text:004029eb   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:004029ef   c9                   LEAVE\n.text:004029f0   c3                   RET\n",
  "endl\u003cchar,std::char_traits\u003cchar\u003e\u003e": "; basic_ostream * endl\u003cchar,std::char_traits\u003cchar\u003e\u003e(basic_ostream * param_1)\n; Parameters:\n; param_1        basic_ostream * RDI\n; Stack variables:\n                                  endl\u003cchar,std::char_traits\u003cchar\u003e\u003e:\n.plt:004013f0    ff25da7f0000         JMP         qword ptr [-\u003estd::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e]\n.plt:004013f6    6805000000           PUSH        0x5\n.plt:004013fb    e990ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n",
  "__niter_base\u003cunsigned_char_const*\u003e": "; uchar * __niter_base\u003cunsigned_char_const*\u003e(uchar * param_1)\n; Parameters:\n; param_1        uchar *        RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __niter_base\u003cunsigned_char_const*\u003e:\n.text:004033dc   55                   PUSH        RBP\n.text:004033dd   4889e5               MOV         RBP,RSP\n.text:004033e0   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004033e4   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004033e8   5d                   POP         RBP\n.text:004033e9   c3                   RET\n",
  "__niter_wrap\u003cunsigned_char*\u003e": "; uchar * __niter_wrap\u003cunsigned_char*\u003e(uchar * * param_1, uchar * param_2)\n; Parameters:\n; param_1        uchar * *      RDI\n; param_2        uchar *        RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __niter_wrap\u003cunsigned_char*\u003e:\n.text:00403425   55                   PUSH        RBP\n.text:00403426   4889e5               MOV         RBP,RSP\n.text:00403429   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:0040342d   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403431   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00403435   5d                   POP         RBP\n.text:00403436   c3                   RET\n",
  "verify": "; undefined __stdcall verify(basic_string param_1)\n; Parameters:\n; param_1        basic_string   EDI\n; Stack variables:\n; local_2c       undefined4     -0x2c\n; local_30       undefined4     -0x30\n; local_34       undefined4     -0x34\n; local_38       undefined4     -0x38\n; local_3c       undefined4     -0x3c\n; local_40       undefined4     -0x40\n; local_41       undefined1     -0x41\n; local_42       undefined1     -0x42\n; local_4f       undefined1     -0x4f\n; local_50       undefined1     -0x50\n; local_51       undefined1     -0x51\n; local_52       undefined1     -0x52\n; local_53       undefined1     -0x53\n; local_54       undefined1     -0x54\n; local_55       undefined1     -0x55\n; local_56       undefined1     -0x56\n; local_57       undefined1     -0x57\n; local_58       undefined1     -0x58\n; local_59       undefined1     -0x59\n; local_5a       undefined1     -0x5a\n; local_5b       undefined1     -0x5b\n; local_5c       undefined1     -0x5c\n; local_5d       undefined1     -0x5d\n; local_5e       undefined1     -0x5e\n; local_5f       undefined1     -0x5f\n; local_60       undefined1     -0x60\n; local_61       undefined1     -0x61\n; local_62       undefined1     -0x62\n; local_63       undefined1     -0x63\n; local_64       undefined1     -0x64\n; local_65       undefined1     -0x65\n; local_66       undefined1     -0x66\n; local_67       undefined1     -0x67\n; local_68       undefined1     -0x68\n; local_69       undefined1     -0x69\n; local_6a       undefined1     -0x6a\n; local_6b       undefined1     -0x6b\n; local_6c       undefined1     -0x6c\n; local_6d       undefined1     -0x6d\n; local_6e       undefined1     -0x6e\n; local_6f       undefined1     -0x6f\n; local_70       undefined1     -0x70\n; local_71       undefined1     -0x71\n; local_72       undefined1     -0x72\n; local_73       undefined1     -0x73\n; local_74       undefined1     -0x74\n; local_75       undefined1     -0x75\n; local_76       undefined1     -0x76\n; local_77       undefined1     -0x77\n; local_78       undefined1     -0x78\n; local_79       undefined1     -0x79\n; local_7a       undefined1     -0x7a\n; local_7b       undefined1     -0x7b\n; local_7c       undefined1     -0x7c\n; local_7d       undefined1     -0x7d\n; local_7e       undefined1     -0x7e\n; local_7f       undefined1     -0x7f\n; local_80       undefined1     -0x80\n; local_81       undefined1     -0x81\n; local_82       undefined1     -0x82\n; local_83       undefined1     -0x83\n; local_84       undefined1     -0x84\n; local_85       undefined1     -0x85\n; local_86       undefined1     -0x86\n; local_87       undefined1     -0x87\n; local_88       undefined1     -0x88\n; local_89       undefined1     -0x89\n; local_8a       undefined1     -0x8a\n; local_8b       undefined1     -0x8b\n; local_8c       undefined1     -0x8c\n; local_8d       undefined1     -0x8d\n; local_8e       undefined1     -0x8e\n; local_8f       undefined1     -0x8f\n; local_90       undefined1     -0x90\n; local_91       undefined1     -0x91\n; local_92       undefined1     -0x92\n; local_93       undefined1     -0x93\n; local_94       undefined1     -0x94\n; local_95       undefined1     -0x95\n; local_96       undefined1     -0x96\n; local_97       undefined1     -0x97\n; local_98       undefined1     -0x98\n; local_b8       undefined1     -0xb8\n; local_d8       undefined1     -0xd8\n; local_e0       undefined8     -0xe0\n                                  verify:\n.text:004019a6   55                   PUSH        RBP\n.text:004019a7   4889e5               MOV         RBP,RSP\n.text:004019aa   4155                 PUSH        R13\n.text:004019ac   4154                 PUSH        R12\n.text:004019ae   53                   PUSH        RBX\n.text:004019af   4881ecc8000000       SUB         RSP,0xc8\n.text:004019b6   4889bd28ffffff       MOV         qword ptr [RBP + local_e0+0x8],param_1\n.text:004019bd   c68570ffffff3f       MOV         byte ptr [RBP + local_98+0x8],0x3f\n.text:004019c4   c68571ffffff42       MOV         byte ptr [RBP + local_97+0x8],0x42\n.text:004019cb   c68572ffffff38       MOV         byte ptr [RBP + local_96+0x8],0x38\n.text:004019d2   c68573ffffff5f       MOV         byte ptr [RBP + local_95+0x8],0x5f\n.text:004019d9   c68574ffffff7a       MOV         byte ptr [RBP + local_94+0x8],0x7a\n.text:004019e0   c68575ffffff57       MOV         byte ptr [RBP + local_93+0x8],0x57\n.text:004019e7   c68576ffffff71       MOV         byte ptr [RBP + local_92+0x8],0x71\n.text:004019ee   c68577ffffff74       MOV         byte ptr [RBP + local_91+0x8],0x74\n.text:004019f5   c68578ffffff66       MOV         byte ptr [RBP + local_90+0x8],0x66\n.text:004019fc   c68579ffffff44       MOV         byte ptr [RBP + local_8f+0x8],0x44\n.text:00401a03   c6857affffff47       MOV         byte ptr [RBP + local_8e+0x8],0x47\n.text:00401a0a   c6857bffffff32       MOV         byte ptr [RBP + local_8d+0x8],0x32\n.text:00401a11   c6857cffffff3d       MOV         byte ptr [RBP + local_8c+0x8],0x3d\n.text:00401a18   c6857dffffff16       MOV         byte ptr [RBP + local_8b+0x8],0x16\n.text:00401a1f   c6857effffff63       MOV         byte ptr [RBP + local_8a+0x8],0x63\n.text:00401a26   c6857fffffff1f       MOV         byte ptr [RBP + local_89+0x8],0x1f\n.text:00401a2d   c6458012             MOV         byte ptr [RBP + local_88+0x8],0x12\n.text:00401a31   c645811a             MOV         byte ptr [RBP + local_87+0x8],0x1a\n.text:00401a35   c6458212             MOV         byte ptr [RBP + local_86+0x8],0x12\n.text:00401a39   c645835c             MOV         byte ptr [RBP + local_85+0x8],0x5c\n.text:00401a3d   c645842a             MOV         byte ptr [RBP + local_84+0x8],0x2a\n.text:00401a41   c6458503             MOV         byte ptr [RBP + local_83+0x8],0x3\n.text:00401a45   c6458664             MOV         byte ptr [RBP + local_82+0x8],0x64\n.text:00401a49   c645871c             MOV         byte ptr [RBP + local_81+0x8],0x1c\n.text:00401a4d   c6458815             MOV         byte ptr [RBP + local_80+0x8],0x15\n.text:00401a51   c6458940             MOV         byte ptr [RBP + local_7f+0x8],0x40\n.text:00401a55   c6458a01             MOV         byte ptr [RBP + local_7e+0x8],0x1\n.text:00401a59   c6458b3f             MOV         byte ptr [RBP + local_7d+0x8],0x3f\n.text:00401a5d   c6458c4c             MOV         byte ptr [RBP + local_7c+0x8],0x4c\n.text:00401a61   c6458d02             MOV         byte ptr [RBP + local_7b+0x8],0x2\n.text:00401a65   c6458e3a             MOV         byte ptr [RBP + local_7a+0x8],0x3a\n.text:00401a69   c6458f30             MOV         byte ptr [RBP + local_79+0x8],0x30\n.text:00401a6d   c645901d             MOV         byte ptr [RBP + local_78+0x8],0x1d\n.text:00401a71   c645917c             MOV         byte ptr [RBP + local_77+0x8],0x7c\n.text:00401a75   c6459269             MOV         byte ptr [RBP + local_76+0x8],0x69\n.text:00401a79   c645934d             MOV         byte ptr [RBP + local_75+0x8],0x4d\n.text:00401a7d   c6459419             MOV         byte ptr [RBP + local_74+0x8],0x19\n.text:00401a81   c645955f             MOV         byte ptr [RBP + local_73+0x8],0x5f\n.text:00401a85   c6459648             MOV         byte ptr [RBP + local_72+0x8],0x48\n.text:00401a89   c645975e             MOV         byte ptr [RBP + local_71+0x8],0x5e\n.text:00401a8d   c6459820             MOV         byte ptr [RBP + local_70+0x8],0x20\n.text:00401a91   c6459903             MOV         byte ptr [RBP + local_6f+0x8],0x3\n.text:00401a95   c6459a17             MOV         byte ptr [RBP + local_6e+0x8],0x17\n.text:00401a99   c6459b09             MOV         byte ptr [RBP + local_6d+0x8],0x9\n.text:00401a9d   c6459c52             MOV         byte ptr [RBP + local_6c+0x8],0x52\n.text:00401aa1   c6459d6b             MOV         byte ptr [RBP + local_6b+0x8],0x6b\n.text:00401aa5   c6459e4c             MOV         byte ptr [RBP + local_6a+0x8],0x4c\n.text:00401aa9   c6459f65             MOV         byte ptr [RBP + local_69+0x8],0x65\n.text:00401aad   c645a06f             MOV         byte ptr [RBP + local_68+0x8],0x6f\n.text:00401ab1   c645a148             MOV         byte ptr [RBP + local_67+0x8],0x48\n.text:00401ab5   c645a206             MOV         byte ptr [RBP + local_66+0x8],0x6\n.text:00401ab9   c645a35b             MOV         byte ptr [RBP + local_65+0x8],0x5b\n.text:00401abd   c645a42b             MOV         byte ptr [RBP + local_64+0x8],0x2b\n.text:00401ac1   c645a528             MOV         byte ptr [RBP + local_63+0x8],0x28\n.text:00401ac5   c645a640             MOV         byte ptr [RBP + local_62+0x8],0x40\n.text:00401ac9   c645a72e             MOV         byte ptr [RBP + local_61+0x8],0x2e\n.text:00401acd   c645a84e             MOV         byte ptr [RBP + local_60+0x8],0x4e\n.text:00401ad1   c645a90b             MOV         byte ptr [RBP + local_5f+0x8],0xb\n.text:00401ad5   c645aa16             MOV         byte ptr [RBP + local_5e+0x8],0x16\n.text:00401ad9   c645ab31             MOV         byte ptr [RBP + local_5d+0x8],0x31\n.text:00401add   c645ac30             MOV         byte ptr [RBP + local_5c+0x8],0x30\n.text:00401ae1   c645ad56             MOV         byte ptr [RBP + local_5b+0x8],0x56\n.text:00401ae5   c645ae21             MOV         byte ptr [RBP + local_5a+0x8],0x21\n.text:00401ae9   c645af6e             MOV         byte ptr [RBP + local_59+0x8],0x6e\n.text:00401aed   c645b02d             MOV         byte ptr [RBP + local_58+0x8],0x2d\n.text:00401af1   c645b130             MOV         byte ptr [RBP + local_57+0x8],0x30\n.text:00401af5   c645b24b             MOV         byte ptr [RBP + local_56+0x8],0x4b\n.text:00401af9   c645b31c             MOV         byte ptr [RBP + local_55+0x8],0x1c\n.text:00401afd   c645b410             MOV         byte ptr [RBP + local_54+0x8],0x10\n.text:00401b01   c645b504             MOV         byte ptr [RBP + local_53+0x8],0x4\n.text:00401b05   c645b63f             MOV         byte ptr [RBP + local_52+0x8],0x3f\n.text:00401b09   c645b718             MOV         byte ptr [RBP + local_51+0x8],0x18\n.text:00401b0d   c645b841             MOV         byte ptr [RBP + local_50+0x8],0x41\n.text:00401b11   c645b934             MOV         byte ptr [RBP + local_4f+0x8],0x34\n.text:00401b15   488d8570ffffff       LEA         RAX\u003d\u003elocal_98,[RBP + -0x90]\n.text:00401b1c   4989c4               MOV         R12,RAX\n.text:00401b1f   41bd4a000000         MOV         R13D,0x4a\n.text:00401b25   488d45c6             LEA         RAX\u003d\u003elocal_42,[RBP + -0x3a]\n.text:00401b29   4889c7               MOV         param_1,RAX\n.text:00401b2c   e8c7070000           CALL        std::allocator\u003cunsigned_char\u003e::allocator     ; undefined allocator(void)\n.text:00401b31   488d55c6             LEA         RDX\u003d\u003elocal_42,[RBP + -0x3a]\n.text:00401b35   4c89e6               MOV         RSI,R12\n.text:00401b38   4c89ef               MOV         param_1,R13\n.text:00401b3b   4c89e1               MOV         RCX,R12\n.text:00401b3e   4c89eb               MOV         RBX,R13\n.text:00401b41   4889df               MOV         param_1,RBX\n.text:00401b44   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401b4b   4889d1               MOV         RCX,RDX\n.text:00401b4e   4889fa               MOV         RDX,param_1\n.text:00401b51   4889c7               MOV         param_1,RAX\n                                  ; try { // try from 00401b54 to 00401b58 has its CatchHandler @ 00401f04\n                                  LAB_00401b54:\n.text:00401b54   e8d7070000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::vector     ; undefined vector(initializer_list param_1, allocator * param_2)\n                                  ; } // end try from 00401b54 to 00401b58\n.text:00401b59   488d45c6             LEA         RAX\u003d\u003elocal_42,[RBP + -0x3a]\n.text:00401b5d   4889c7               MOV         param_1,RAX\n.text:00401b60   e8af070000           CALL        std::allocator\u003cunsigned_char\u003e::~allocator     ; undefined ~allocator(allocator\u003cunsigned_char\u003e * this)\n.text:00401b65   c745dc00000000       MOV         dword ptr [RBP + local_2c+0x8],0x0\n.text:00401b6c   eb5a                 JMP         LAB_00401bc8\n                                  LAB_00401b6e:\n.text:00401b6e   8b45dc               MOV         EAX,dword ptr [RBP + local_2c+0x8]\n.text:00401b71   4863d0               MOVSXD      RDX,EAX\n.text:00401b74   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401b7b   4889d6               MOV         RSI,RDX\n.text:00401b7e   4889c7               MOV         param_1,RAX\n.text:00401b81   e876080000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401b86   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401b89   89c3                 MOV         EBX,EAX\n.text:00401b8b   8b45dc               MOV         EAX,dword ptr [RBP + local_2c+0x8]\n.text:00401b8e   4863d0               MOVSXD      RDX,EAX\n.text:00401b91   488b8528ffffff       MOV         RAX,qword ptr [RBP + local_e0+0x8]\n.text:00401b98   4889d6               MOV         RSI,RDX\n.text:00401b9b   4889c7               MOV         param_1,RAX\n                                  ; try { // try from 00401b9e to 00401c8b has its CatchHandler @ 00401f43\n                                  LAB_00401b9e:\n.text:00401b9e   e84dfaffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::operator[]     ; undefined operator[](ulong param_1)\n.text:00401ba3   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401ba6   31d8                 XOR         EAX,EBX\n.text:00401ba8   89c3                 MOV         EBX,EAX\n.text:00401baa   8b45dc               MOV         EAX,dword ptr [RBP + local_2c+0x8]\n.text:00401bad   4863d0               MOVSXD      RDX,EAX\n.text:00401bb0   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401bb7   4889d6               MOV         RSI,RDX\n.text:00401bba   4889c7               MOV         param_1,RAX\n.text:00401bbd   e83a080000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401bc2   8818                 MOV         byte ptr [RAX],BL\n.text:00401bc4   8345dc01             ADD         dword ptr [RBP + local_2c+0x8],0x1\n                                  LAB_00401bc8:\n.text:00401bc8   8b45dc               MOV         EAX,dword ptr [RBP + local_2c+0x8]\n.text:00401bcb   4863d8               MOVSXD      RBX,EAX\n.text:00401bce   488b8528ffffff       MOV         RAX,qword ptr [RBP + local_e0+0x8]\n.text:00401bd5   4889c7               MOV         param_1,RAX\n.text:00401bd8   e863f8ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size     ; undefined size(void)\n.text:00401bdd   4839c3               CMP         RBX,RAX\n.text:00401be0   0f92c0               SETC        AL\n.text:00401be3   84c0                 TEST        AL,AL\n.text:00401be5   7587                 JNZ         LAB_00401b6e\n.text:00401be7   c745d800000000       MOV         dword ptr [RBP + local_30+0x8],0x0\n.text:00401bee   e9f5000000           JMP         LAB_00401ce8\n                                  LAB_00401bf3:\n.text:00401bf3   8b45d8               MOV         EAX,dword ptr [RBP + local_30+0x8]\n.text:00401bf6   4863d0               MOVSXD      RDX,EAX\n.text:00401bf9   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401c00   4889d6               MOV         RSI,RDX\n.text:00401c03   4889c7               MOV         param_1,RAX\n.text:00401c06   e8f1070000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401c0b   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401c0e   4189c5               MOV         R13D,EAX\n.text:00401c11   8b55d8               MOV         EDX,dword ptr [RBP + local_30+0x8]\n.text:00401c14   89d0                 MOV         EAX,EDX\n.text:00401c16   c1e002               SHL         EAX,0x2\n.text:00401c19   01d0                 ADD         EAX,EDX\n.text:00401c1b   01c0                 ADD         EAX,EAX\n.text:00401c1d   83c00c               ADD         EAX,0xc\n.text:00401c20   4863d8               MOVSXD      RBX,EAX\n.text:00401c23   bff09d4000           MOV         param_1,data\n.text:00401c28   e80b080000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::size     ; undefined size(void)\n.text:00401c2d   4889c1               MOV         RCX,RAX\n.text:00401c30   4889d8               MOV         RAX,RBX\n.text:00401c33   ba00000000           MOV         EDX,0x0\n.text:00401c38   48f7f1               DIV         RCX\n.text:00401c3b   4889d1               MOV         RCX,RDX\n.text:00401c3e   4889c8               MOV         RAX,RCX\n.text:00401c41   4889c6               MOV         RSI,RAX\n.text:00401c44   bff09d4000           MOV         param_1,data\n.text:00401c49   e80e080000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::operator[]     ; undefined operator[](vector\u003cint,std::allocator\u003cint\u003e\u003e * this, ulong param_1)\n.text:00401c4e   448b20               MOV         R12D,dword ptr [RAX]\n.text:00401c51   8b45d8               MOV         EAX,dword ptr [RBP + local_30+0x8]\n.text:00401c54   4863d8               MOVSXD      RBX,EAX\n.text:00401c57   488b8528ffffff       MOV         RAX,qword ptr [RBP + local_e0+0x8]\n.text:00401c5e   4889c7               MOV         param_1,RAX\n.text:00401c61   e8daf7ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size     ; undefined size(void)\n.text:00401c66   4889c1               MOV         RCX,RAX\n.text:00401c69   4889d8               MOV         RAX,RBX\n.text:00401c6c   ba00000000           MOV         EDX,0x0\n.text:00401c71   48f7f1               DIV         RCX\n.text:00401c74   4889d1               MOV         RCX,RDX\n.text:00401c77   4889ca               MOV         RDX,RCX\n.text:00401c7a   488b8528ffffff       MOV         RAX,qword ptr [RBP + local_e0+0x8]\n.text:00401c81   4889d6               MOV         RSI,RDX\n.text:00401c84   4889c7               MOV         param_1,RAX\n.text:00401c87   e864f9ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::operator[]     ; undefined operator[](ulong param_1)\n                                  ; } // end try from 00401b9e to 00401c8b\n.text:00401c8c   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401c8f   0fbec0               MOVSX       EAX,AL\n.text:00401c92   4401e0               ADD         EAX,R12D\n.text:00401c95   4863d8               MOVSXD      RBX,EAX\n.text:00401c98   bff09d4000           MOV         param_1,data\n.text:00401c9d   e896070000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::size     ; undefined size(void)\n.text:00401ca2   4889c1               MOV         RCX,RAX\n.text:00401ca5   4889d8               MOV         RAX,RBX\n.text:00401ca8   ba00000000           MOV         EDX,0x0\n.text:00401cad   48f7f1               DIV         RCX\n.text:00401cb0   4889d1               MOV         RCX,RDX\n.text:00401cb3   4889c8               MOV         RAX,RCX\n.text:00401cb6   4889c6               MOV         RSI,RAX\n.text:00401cb9   bff09d4000           MOV         param_1,data\n.text:00401cbe   e899070000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::operator[]     ; undefined operator[](vector\u003cint,std::allocator\u003cint\u003e\u003e * this, ulong param_1)\n.text:00401cc3   8b00                 MOV         EAX,dword ptr [RAX]\n.text:00401cc5   4431e8               XOR         EAX,R13D\n.text:00401cc8   89c3                 MOV         EBX,EAX\n.text:00401cca   8b45d8               MOV         EAX,dword ptr [RBP + local_30+0x8]\n.text:00401ccd   4863d0               MOVSXD      RDX,EAX\n.text:00401cd0   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401cd7   4889d6               MOV         RSI,RDX\n.text:00401cda   4889c7               MOV         param_1,RAX\n.text:00401cdd   e81a070000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401ce2   8818                 MOV         byte ptr [RAX],BL\n.text:00401ce4   8345d801             ADD         dword ptr [RBP + local_30+0x8],0x1\n                                  LAB_00401ce8:\n.text:00401ce8   8b45d8               MOV         EAX,dword ptr [RBP + local_30+0x8]\n.text:00401ceb   4863d8               MOVSXD      RBX,EAX\n.text:00401cee   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401cf5   4889c7               MOV         param_1,RAX\n.text:00401cf8   e81b070000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::size     ; undefined size(void)\n.text:00401cfd   4839c3               CMP         RBX,RAX\n.text:00401d00   0f92c0               SETC        AL\n.text:00401d03   84c0                 TEST        AL,AL\n.text:00401d05   0f85e8feffff         JNZ         LAB_00401bf3\n.text:00401d0b   c745d405000000       MOV         dword ptr [RBP + local_34+0x8],0x5\n.text:00401d12   e982000000           JMP         LAB_00401d99\n                                  LAB_00401d17:\n.text:00401d17   c745d000000000       MOV         dword ptr [RBP + local_38+0x8],0x0\n.text:00401d1e   eb6c                 JMP         LAB_00401d8c\n                                  LAB_00401d20:\n.text:00401d20   8b45d4               MOV         EAX,dword ptr [RBP + local_34+0x8]\n.text:00401d23   4863d0               MOVSXD      RDX,EAX\n.text:00401d26   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401d2d   4889d6               MOV         RSI,RDX\n.text:00401d30   4889c7               MOV         param_1,RAX\n.text:00401d33   e8c4060000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401d38   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401d3b   89c2                 MOV         EDX,EAX\n.text:00401d3d   8b45d0               MOV         EAX,dword ptr [RBP + local_38+0x8]\n.text:00401d40   c1e005               SHL         EAX,0x5\n.text:00401d43   89d3                 MOV         EBX,EDX\n.text:00401d45   31c3                 XOR         EBX,EAX\n.text:00401d47   8b45d4               MOV         EAX,dword ptr [RBP + local_34+0x8]\n.text:00401d4a   83e805               SUB         EAX,0x5\n.text:00401d4d   4863d0               MOVSXD      RDX,EAX\n.text:00401d50   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401d57   4889d6               MOV         RSI,RDX\n.text:00401d5a   4889c7               MOV         param_1,RAX\n.text:00401d5d   e89a060000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401d62   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401d65   3c6e                 CMP         AL,0x6e\n.text:00401d67   0f94c0               SETZ        AL\n.text:00401d6a   31d8                 XOR         EAX,EBX\n.text:00401d6c   89c3                 MOV         EBX,EAX\n.text:00401d6e   8b45d4               MOV         EAX,dword ptr [RBP + local_34+0x8]\n.text:00401d71   4863d0               MOVSXD      RDX,EAX\n.text:00401d74   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401d7b   4889d6               MOV         RSI,RDX\n.text:00401d7e   4889c7               MOV         param_1,RAX\n.text:00401d81   e876060000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401d86   8818                 MOV         byte ptr [RAX],BL\n.text:00401d88   8345d001             ADD         dword ptr [RBP + local_38+0x8],0x1\n                                  LAB_00401d8c:\n.text:00401d8c   817dd02b010000       CMP         dword ptr [RBP + local_38+0x8],0x12b\n.text:00401d93   7e8b                 JLE         LAB_00401d20\n.text:00401d95   8345d401             ADD         dword ptr [RBP + local_34+0x8],0x1\n                                  LAB_00401d99:\n.text:00401d99   8b45d4               MOV         EAX,dword ptr [RBP + local_34+0x8]\n.text:00401d9c   4863d8               MOVSXD      RBX,EAX\n.text:00401d9f   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401da6   4889c7               MOV         param_1,RAX\n.text:00401da9   e86a060000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::size     ; undefined size(void)\n.text:00401dae   4839c3               CMP         RBX,RAX\n.text:00401db1   0f92c0               SETC        AL\n.text:00401db4   84c0                 TEST        AL,AL\n.text:00401db6   0f855bffffff         JNZ         LAB_00401d17\n.text:00401dbc   488d45c7             LEA         RAX\u003d\u003elocal_41,[RBP + -0x39]\n.text:00401dc0   4889c7               MOV         param_1,RAX\n.text:00401dc3   e8d8f7ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::allocator     ; undefined allocator(void)\n.text:00401dc8   488d55c7             LEA         RDX\u003d\u003elocal_41,[RBP + -0x39]\n.text:00401dcc   488d8530ffffff       LEA         RAX\u003d\u003elocal_d8,[RBP + -0xd0]\n.text:00401dd3   be60364000           MOV         ESI,s_flag{ph3w...u_finaLly_g0t_it!_ju_00403660     ; \u003d \"flag{ph3w...u finaLly g0t it! jump into cell wHen U g3t t0 the next cha11}\"\n.text:00401dd8   4889c7               MOV         param_1,RAX\n                                  ; try { // try from 00401ddb to 00401ddf has its CatchHandler @ 00401f1e\n                                  LAB_00401ddb:\n.text:00401ddb   e89c060000           CALL        std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::basic_string\u003cstd::allocator\u003cchar\u003e\u003e     ; undefined basic_string\u003cstd::allocator\u003cchar\u003e\u003e(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this, char * param_1, allocator * param_2)\n                                  ; } // end try from 00401ddb to 00401ddf\n.text:00401de0   488d45c7             LEA         RAX\u003d\u003elocal_41,[RBP + -0x39]\n.text:00401de4   4889c7               MOV         param_1,RAX\n.text:00401de7   e824f7ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.text:00401dec   bf00000000           MOV         param_1,0x0\n.text:00401df1   e8aaf5ffff           CALL        \u003cEXTERNAL\u003e::time                             ; time_t time(time_t * __timer)\n.text:00401df6   89c7                 MOV         param_1,EAX\n.text:00401df8   e863f6ffff           CALL        \u003cEXTERNAL\u003e::srand                            ; void srand(uint __seed)\n.text:00401dfd   c745cc00000000       MOV         dword ptr [RBP + local_3c+0x8],0x0\n.text:00401e04   e99b000000           JMP         LAB_00401ea4\n                                  LAB_00401e09:\n.text:00401e09   8b45cc               MOV         EAX,dword ptr [RBP + local_3c+0x8]\n.text:00401e0c   4863d0               MOVSXD      RDX,EAX\n.text:00401e0f   488d8530ffffff       LEA         RAX\u003d\u003elocal_d8,[RBP + -0xd0]\n.text:00401e16   4889d6               MOV         RSI,RDX\n.text:00401e19   4889c7               MOV         param_1,RAX\n                                  ; try { // try from 00401e1c to 00401ee2 has its CatchHandler @ 00401f2f\n                                  LAB_00401e1c:\n.text:00401e1c   e8cff7ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::operator[]     ; undefined operator[](ulong param_1)\n.text:00401e21   0fb618               MOVZX       EBX,byte ptr [RAX]\n.text:00401e24   8b45cc               MOV         EAX,dword ptr [RBP + local_3c+0x8]\n.text:00401e27   4863d0               MOVSXD      RDX,EAX\n.text:00401e2a   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401e31   4889d6               MOV         RSI,RDX\n.text:00401e34   4889c7               MOV         param_1,RAX\n.text:00401e37   e8c0050000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]     ; undefined operator[](vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, ulong param_1)\n.text:00401e3c   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00401e3f   38c3                 CMP         BL,AL\n.text:00401e41   0f95c0               SETNZ       AL\n.text:00401e44   84c0                 TEST        AL,AL\n.text:00401e46   7458                 JZ          LAB_00401ea0\n.text:00401e48   e823f7ffff           CALL        \u003cEXTERNAL\u003e::rand                             ; int rand(void)\n.text:00401e4d   8945c8               MOV         dword ptr [RBP + local_40+0x8],EAX\n.text:00401e50   8b4dc8               MOV         ECX,dword ptr [RBP + local_40+0x8]\n.text:00401e53   4863c1               MOVSXD      RAX,ECX\n.text:00401e56   4869c0abaaaa2a       IMUL        RAX,RAX,0x2aaaaaab\n.text:00401e5d   48c1e820             SHR         RAX,0x20\n.text:00401e61   4889c2               MOV         RDX,RAX\n.text:00401e64   89c8                 MOV         EAX,ECX\n.text:00401e66   c1f81f               SAR         EAX,0x1f\n.text:00401e69   29c2                 SUB         EDX,EAX\n.text:00401e6b   89d0                 MOV         EAX,EDX\n.text:00401e6d   01c0                 ADD         EAX,EAX\n.text:00401e6f   01d0                 ADD         EAX,EDX\n.text:00401e71   01c0                 ADD         EAX,EAX\n.text:00401e73   29c1                 SUB         ECX,EAX\n.text:00401e75   89ca                 MOV         EDX,ECX\n.text:00401e77   4863c2               MOVSXD      RAX,EDX\n.text:00401e7a   48c1e007             SHL         RAX,0x7\n.text:00401e7e   480520954000         ADD         RAX,fail_msgs                                ; \u003d \"flag{OH MY GOD YOU FINALLY GOT THE FLAG!?!!??!?!?!!}\"\n.text:00401e84   4889c6               MOV         RSI,RAX\n.text:00401e87   bfc09c4000           MOV         param_1,std::cout\n.text:00401e8c   e81ff6ffff           CALL        \u003cEXTERNAL\u003e::std::operator\u003c\u003c                  ; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n.text:00401e91   bef0134000           MOV         ESI,std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e\n.text:00401e96   4889c7               MOV         param_1,RAX\n.text:00401e99   e842f6ffff           CALL        \u003cEXTERNAL\u003e::std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c     ; undefined operator\u003c\u003c(basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e * this, _func_basic_ostream_ptr_basic_ostream_ptr * param_1)\n.text:00401e9e   eb44                 JMP         LAB_00401ee4\n                                  LAB_00401ea0:\n.text:00401ea0   8345cc01             ADD         dword ptr [RBP + local_3c+0x8],0x1\n                                  LAB_00401ea4:\n.text:00401ea4   8b45cc               MOV         EAX,dword ptr [RBP + local_3c+0x8]\n.text:00401ea7   4863d8               MOVSXD      RBX,EAX\n.text:00401eaa   488d8530ffffff       LEA         RAX\u003d\u003elocal_d8,[RBP + -0xd0]\n.text:00401eb1   4889c7               MOV         param_1,RAX\n.text:00401eb4   e887f5ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size     ; undefined size(void)\n.text:00401eb9   4839c3               CMP         RBX,RAX\n.text:00401ebc   0f92c0               SETC        AL\n.text:00401ebf   84c0                 TEST        AL,AL\n.text:00401ec1   0f8542ffffff         JNZ         LAB_00401e09\n.text:00401ec7   beab364000           MOV         ESI,s_You_are_worthy!_004036ab               ; \u003d \"You are worthy!\"\n.text:00401ecc   bfc09c4000           MOV         param_1,std::cout\n.text:00401ed1   e8daf5ffff           CALL        \u003cEXTERNAL\u003e::std::operator\u003c\u003c                  ; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n.text:00401ed6   bef0134000           MOV         ESI,std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e\n.text:00401edb   4889c7               MOV         param_1,RAX\n.text:00401ede   e8fdf5ffff           CALL        \u003cEXTERNAL\u003e::std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c     ; undefined operator\u003c\u003c(basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e * this, _func_basic_ostream_ptr_basic_ostream_ptr * param_1)\n                                  ; } // end try from 00401e1c to 00401ee2\n.text:00401ee3   90                   NOP\n                                  LAB_00401ee4:\n.text:00401ee4   488d8530ffffff       LEA         RAX\u003d\u003elocal_d8,[RBP + -0xd0]\n.text:00401eeb   4889c7               MOV         param_1,RAX\n.text:00401eee   e81df5ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.text:00401ef3   488d8550ffffff       LEA         RAX\u003d\u003elocal_b8,[RBP + -0xb0]\n.text:00401efa   4889c7               MOV         param_1,RAX\n.text:00401efd   e8b6040000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::~vector     ; undefined ~vector(vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this)\n.text:00401f02   eb5c                 JMP         LAB_00401f60\n                                  ; catch() { ... } // from try @ 00401b54 with catch @ 00401f04\n                                  LAB_00401f04:\n.text:00401f04   4889c3               MOV         RBX,RAX\n.text:00401f07   488d45c6             LEA         RAX,[RBP + -0x3a]\n.text:00401f0b   4889c7               MOV         RDI,RAX\n.text:00401f0e   e801040000           CALL        std::allocator\u003cunsigned_char\u003e::~allocator     ; undefined ~allocator(allocator\u003cunsigned_char\u003e * this)\n.text:00401f13   4889d8               MOV         RAX,RBX\n.text:00401f16   4889c7               MOV         RDI,RAX\n                                  LAB_00401f19:\n.text:00401f19   e872f6ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  ; catch() { ... } // from try @ 00401ddb with catch @ 00401f1e\n                                  LAB_00401f1e:\n.text:00401f1e   4889c3               MOV         RBX,RAX\n.text:00401f21   488d45c7             LEA         RAX,[RBP + -0x39]\n.text:00401f25   4889c7               MOV         RDI,RAX\n.text:00401f28   e8e3f5ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.text:00401f2d   eb17                 JMP         LAB_00401f46\n                                  ; catch() { ... } // from try @ 00401e1c with catch @ 00401f2f\n                                  LAB_00401f2f:\n.text:00401f2f   4889c3               MOV         RBX,RAX\n.text:00401f32   488d8530ffffff       LEA         RAX,[RBP + -0xd0]\n.text:00401f39   4889c7               MOV         RDI,RAX\n.text:00401f3c   e8cff4ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.text:00401f41   eb03                 JMP         LAB_00401f46\n                                  ; catch() { ... } // from try @ 00401b9e with catch @ 00401f43\n                                  LAB_00401f43:\n.text:00401f43   4889c3               MOV         RBX,RAX\n                                  LAB_00401f46:\n.text:00401f46   488d8550ffffff       LEA         RAX,[RBP + -0xb0]\n.text:00401f4d   4889c7               MOV         RDI,RAX\n.text:00401f50   e863040000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::~vector     ; undefined ~vector(vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this)\n.text:00401f55   4889d8               MOV         RAX,RBX\n.text:00401f58   4889c7               MOV         RDI,RAX\n.text:00401f5b   e830f6ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  LAB_00401f60:\n.text:00401f60   4881c4c8000000       ADD         RSP,0xc8\n.text:00401f67   5b                   POP         RBX\n.text:00401f68   415c                 POP         R12\n.text:00401f6a   415d                 POP         R13\n.text:00401f6c   5d                   POP         RBP\n.text:00401f6d   c3                   RET\n",
  "_ITM_deregisterTMCloneTable": "; undefined _ITM_deregisterTMCloneTable()\n; Parameters:\n; Stack variables:\n                                  _ITM_deregisterTMCloneTable:\nEXTERNAL:0040a0e8                      ??          ??\n",
  "vector": "; undefined __stdcall vector(initializer_list param_1, allocator * param_2)\n; Parameters:\n; param_1        initializer_list EDI\n; param_2        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n; local_40       undefined8     -0x40\n; local_48       undefined8     -0x48\n                                  vector:\n.text:00402270   55                   PUSH        RBP\n.text:00402271   4889e5               MOV         RBP,RSP\n.text:00402274   53                   PUSH        RBX\n.text:00402275   4883ec38             SUB         RSP,0x38\n.text:00402279   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:0040227d   4889f0               MOV         RAX,param_2\n.text:00402280   4889d6               MOV         param_2,RDX\n.text:00402283   4889f2               MOV         RDX,param_2\n.text:00402286   488945c0             MOV         qword ptr [RBP + local_48+0x8],RAX\n.text:0040228a   488955c8             MOV         qword ptr [RBP + local_40+0x8],RDX\n.text:0040228e   48894dd0             MOV         qword ptr [RBP + local_38+0x8],RCX\n.text:00402292   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402296   488b55d0             MOV         RDX,qword ptr [RBP + local_38+0x8]\n.text:0040229a   4889d6               MOV         param_2,RDX\n.text:0040229d   4889c7               MOV         param_1,RAX\n.text:004022a0   e8f3030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_Vector_base     ; undefined _Vector_base(_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * this, allocator * param_1)\n.text:004022a5   488d45c0             LEA         RAX\u003d\u003elocal_48,[RBP + -0x40]\n.text:004022a9   4889c7               MOV         param_1,RAX\n.text:004022ac   e86d040000           CALL        std::initializer_list\u003cint\u003e::end              ; undefined end(void)\n.text:004022b1   4889c3               MOV         RBX,RAX\n.text:004022b4   488d45c0             LEA         RAX\u003d\u003elocal_48,[RBP + -0x40]\n.text:004022b8   4889c7               MOV         param_1,RAX\n.text:004022bb   e84c040000           CALL        std::initializer_list\u003cint\u003e::begin            ; undefined begin(void)\n.text:004022c0   4889c1               MOV         RCX,RAX\n.text:004022c3   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004022c7   4889da               MOV         RDX,RBX\n.text:004022ca   4889ce               MOV         param_2,RCX\n.text:004022cd   4889c7               MOV         param_1,RAX\n                                  ; try { // try from 004022d0 to 004022d4 has its CatchHandler @ 004022d7\n                                  LAB_004022d0:\n.text:004022d0   e8af040000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::_M_range_initialize\u003cint_const*\u003e     ; void _M_range_initialize\u003cint_const*\u003e(int * param_1, int * param_2, forward_iterator_tag param_3)\n                                  ; } // end try from 004022d0 to 004022d4\n.text:004022d5   eb1a                 JMP         LAB_004022f1\n                                  ; catch() { ... } // from try @ 004022d0 with catch @ 004022d7\n                                  LAB_004022d7:\n.text:004022d7   4889c3               MOV         RBX,RAX\n.text:004022da   488b45d8             MOV         RAX,qword ptr [RBP + -0x28]\n.text:004022de   4889c7               MOV         RDI,RAX\n.text:004022e1   e8d8030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::~_Vector_base     ; undefined ~_Vector_base(_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * this)\n.text:004022e6   4889d8               MOV         RAX,RBX\n.text:004022e9   4889c7               MOV         RDI,RAX\n                                  LAB_004022ec:\n.text:004022ec   e89ff2ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  LAB_004022f1:\n.text:004022f1   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:004022f5   c9                   LEAVE\n.text:004022f6   c3                   RET\n; undefined __stdcall vector(initializer_list param_1, allocator * param_2)\n; Parameters:\n; param_1        initializer_list EDI\n; param_2        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n; local_40       undefined8     -0x40\n; local_48       undefined8     -0x48\n                                  vector:\n.text:00402330   55                   PUSH        RBP\n.text:00402331   4889e5               MOV         RBP,RSP\n.text:00402334   53                   PUSH        RBX\n.text:00402335   4883ec38             SUB         RSP,0x38\n.text:00402339   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:0040233d   4889f0               MOV         RAX,param_2\n.text:00402340   4889d6               MOV         param_2,RDX\n.text:00402343   4889f2               MOV         RDX,param_2\n.text:00402346   488945c0             MOV         qword ptr [RBP + local_48+0x8],RAX\n.text:0040234a   488955c8             MOV         qword ptr [RBP + local_40+0x8],RDX\n.text:0040234e   48894dd0             MOV         qword ptr [RBP + local_38+0x8],RCX\n.text:00402352   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402356   488b55d0             MOV         RDX,qword ptr [RBP + local_38+0x8]\n.text:0040235a   4889d6               MOV         param_2,RDX\n.text:0040235d   4889c7               MOV         param_1,RAX\n.text:00402360   e803050000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_base     ; undefined _Vector_base(_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, allocator * param_1)\n.text:00402365   488d45c0             LEA         RAX\u003d\u003elocal_48,[RBP + -0x40]\n.text:00402369   4889c7               MOV         param_1,RAX\n.text:0040236c   e873050000           CALL        std::initializer_list\u003cunsigned_char\u003e::end     ; undefined end(void)\n.text:00402371   4889c3               MOV         RBX,RAX\n.text:00402374   488d45c0             LEA         RAX\u003d\u003elocal_48,[RBP + -0x40]\n.text:00402378   4889c7               MOV         param_1,RAX\n.text:0040237b   e852050000           CALL        std::initializer_list\u003cunsigned_char\u003e::begin     ; undefined begin(void)\n.text:00402380   4889c1               MOV         RCX,RAX\n.text:00402383   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402387   4889da               MOV         RDX,RBX\n.text:0040238a   4889ce               MOV         param_2,RCX\n.text:0040238d   4889c7               MOV         param_1,RAX\n                                  ; try { // try from 00402390 to 00402394 has its CatchHandler @ 00402397\n                                  LAB_00402390:\n.text:00402390   e8b1050000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_range_initialize\u003cunsigned_char_const*\u003e     ; void _M_range_initialize\u003cunsigned_char_const*\u003e(uchar * param_1, uchar * param_2, forward_iterator_tag param_3)\n                                  ; } // end try from 00402390 to 00402394\n.text:00402395   eb1a                 JMP         LAB_004023b1\n                                  ; catch() { ... } // from try @ 00402390 with catch @ 00402397\n                                  LAB_00402397:\n.text:00402397   4889c3               MOV         RBX,RAX\n.text:0040239a   488b45d8             MOV         RAX,qword ptr [RBP + -0x28]\n.text:0040239e   4889c7               MOV         RDI,RAX\n.text:004023a1   e8e8040000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::~_Vector_base     ; undefined ~_Vector_base(_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this)\n.text:004023a6   4889d8               MOV         RAX,RBX\n.text:004023a9   4889c7               MOV         RDI,RAX\n                                  LAB_004023ac:\n.text:004023ac   e8dff1ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  LAB_004023b1:\n.text:004023b1   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:004023b5   c9                   LEAVE\n.text:004023b6   c3                   RET\n",
  "handle_static_init": "; void handle_static_init(int argc, char * * argv, char * * env)\n; Parameters:\n; argc           int            EDI\n; argv           char * *       RSI\n; env            char * *       RDX\n; Stack variables:\n; fn             _func_void_int_char_ptr_ptr_char_ptr_ptr * RAX\n                                  handle_static_init:\n.text:00401720   55                   PUSH        RBP\n.text:00401721   4889e5               MOV         RBP,RSP\n.text:00401724   4157                 PUSH        R15\n.text:00401726   4156                 PUSH        R14\n.text:00401728   4155                 PUSH        R13\n.text:0040172a   4154                 PUSH        R12\n.text:0040172c   53                   PUSH        RBX\n.text:0040172d   50                   PUSH        RAX\n.text:0040172e   b8a0914000           MOV         EAX,_DYNAMIC\n.text:00401733   4885c0               TEST        RAX,RAX\n.text:00401736   0f85e8000000         JNZ         LAB_00401824\n.text:0040173c   4989d6               MOV         R14,env\n.text:0040173f   4989f7               MOV         R15,argv\n.text:00401742   4189fc               MOV         R12D,argc\n.text:00401745   bf40184000           MOV         argc,finalizer\n.text:0040174a   e8d1fcffff           CALL        \u003cEXTERNAL\u003e::atexit                           ; int atexit(__func * __func)\n.text:0040174f   b876914000           MOV         EAX,__preinit_array_start\n.text:00401754   b976914000           MOV         ECX,__preinit_array_start\n.text:00401759   4829c1               SUB         RCX,RAX\n.text:0040175c   488d4107             LEA         RAX,[RCX + 0x7]\n.text:00401760   4885c9               TEST        RCX,RCX\n.text:00401763   4889ca               MOV         env,RCX\n.text:00401766   480f48d0             CMOVS       env,RAX\n.text:0040176a   48c1fa03             SAR         env,0x3\n.text:0040176e   7444                 JZ          LAB_004017b4\n.text:00401770   4885c9               TEST        RCX,RCX\n.text:00401773   480f49c1             CMOVNS      RAX,RCX\n.text:00401777   48c1f803             SAR         RAX,0x3\n.text:0040177b   4883f802             CMP         RAX,0x2\n.text:0040177f   41bd01000000         MOV         R13D,0x1\n.text:00401785   4c0f43e8             CMOVNC      R13,RAX\n.text:00401789   31db                 XOR         EBX,EBX\n.text:0040178b   eb0c                 JMP         LAB_00401799\n                                  LAB_00401790:\n.text:00401790   4883c301             ADD         RBX,0x1\n.text:00401794   4939dd               CMP         R13,RBX\n.text:00401797   741b                 JZ          LAB_004017b4\n                                  LAB_00401799:\n.text:00401799   488b04dd76914000     MOV         RAX,qword ptr [__preinit_array_start + RBX*0x8]\n.text:004017a1   4883f802             CMP         RAX,0x2\n.text:004017a5   72e9                 JC          LAB_00401790\n.text:004017a7   4489e7               MOV         argc,R12D\n.text:004017aa   4c89fe               MOV         argv,R15\n.text:004017ad   4c89f2               MOV         env,R14\n.text:004017b0   ffd0                 CALL        fn\n.text:004017b2   ebdc                 JMP         LAB_00401790\n                                  LAB_004017b4:\n.text:004017b4   e8bffbffff           CALL        _init                                        ; int _init(EVP_PKEY_CTX * ctx)\n.text:004017b9   b878914000           MOV         fn,__DT_INIT_ARRAY                           ; \u003d 00402184\n.text:004017be   b980914000           MOV         ECX,__CTOR_LIST__                            ; \u003d FFFFFFFFFFFFFFFFh\n.text:004017c3   4829c1               SUB         RCX,fn\n.text:004017c6   488d4107             LEA         fn,[RCX + 0x7]\n.text:004017ca   4885c9               TEST        RCX,RCX\n.text:004017cd   4889ca               MOV         env,RCX\n.text:004017d0   480f48d0             CMOVS       env,fn\n.text:004017d4   48c1fa03             SAR         env,0x3\n.text:004017d8   744a                 JZ          LAB_00401824\n.text:004017da   4885c9               TEST        RCX,RCX\n.text:004017dd   480f49c1             CMOVNS      fn,RCX\n.text:004017e1   48c1f803             SAR         fn,0x3\n.text:004017e5   4883f802             CMP         fn,0x2\n.text:004017e9   41bd01000000         MOV         R13D,0x1\n.text:004017ef   4c0f43e8             CMOVNC      R13,fn\n.text:004017f3   31db                 XOR         EBX,EBX\n.text:004017f5   eb12                 JMP         LAB_00401809\n                                  LAB_00401800:\n.text:00401800   4883c301             ADD         RBX,0x1\n.text:00401804   4939dd               CMP         R13,RBX\n.text:00401807   741b                 JZ          LAB_00401824\n                                  LAB_00401809:\n.text:00401809   488b04dd78914000     MOV         fn,qword ptr [-\u003e_GLOBAL__sub_I_fail_msgs + RBX*0x8]     ; \u003d 00402184, \u003d FFFFFFFFFFFFFFFFh\n.text:00401811   4883f802             CMP         fn,0x2\n.text:00401815   72e9                 JC          LAB_00401800\n.text:00401817   4489e7               MOV         argc,R12D\n.text:0040181a   4c89fe               MOV         argv,R15\n.text:0040181d   4c89f2               MOV         env,R14\n.text:00401820   ffd0                 CALL        fn\u003d\u003e_GLOBAL__sub_I_fail_msgs                 ; undefined _GLOBAL__sub_I_fail_msgs()\n.text:00401822   ebdc                 JMP         LAB_00401800\n                                  LAB_00401824:\n.text:00401824   4883c408             ADD         RSP,0x8\n.text:00401828   5b                   POP         RBX\n.text:00401829   415c                 POP         R12\n.text:0040182b   415d                 POP         R13\n.text:0040182d   415e                 POP         R14\n.text:0040182f   415f                 POP         R15\n.text:00401831   5d                   POP         RBP\n.text:00401832   c3                   RET\n",
  "_S_max_size": "; undefined __stdcall _S_max_size(allocator * param_1)\n; Parameters:\n; param_1        allocator *    RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  _S_max_size:\n.text:00402dec   55                   PUSH        RBP\n.text:00402ded   4889e5               MOV         RBP,RSP\n.text:00402df0   4883ec20             SUB         RSP,0x20\n.text:00402df4   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:00402df8   48b8ffffffffffffff1f     MOV         RAX,0x1fffffffffffffff\n.text:00402e02   488945f8             MOV         qword ptr [RBP + local_10+0x8],RAX\n.text:00402e06   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402e0a   4889c7               MOV         param_1,RAX\n.text:00402e0d   e8ef010000           CALL        std::allocator_traits\u003cstd::allocator\u003cint\u003e\u003e::max_size     ; undefined max_size(allocator * param_1)\n.text:00402e12   488945f0             MOV         qword ptr [RBP + local_18+0x8],RAX\n.text:00402e16   488d55f0             LEA         RDX\u003d\u003elocal_18,[RBP + -0x10]\n.text:00402e1a   488d45f8             LEA         RAX\u003d\u003elocal_10,[RBP + -0x8]\n.text:00402e1e   4889d6               MOV         RSI,RDX\n.text:00402e21   4889c7               MOV         param_1,RAX\n.text:00402e24   e8f2010000           CALL        std::min\u003cunsigned_long\u003e                      ; ulong * min\u003cunsigned_long\u003e(ulong * param_1, ulong * param_2)\n.text:00402e29   488b00               MOV         RAX,qword ptr [RAX]\n.text:00402e2c   c9                   LEAVE\n.text:00402e2d   c3                   RET\n; undefined __stdcall _S_max_size(allocator * param_1)\n; Parameters:\n; param_1        allocator *    RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  _S_max_size:\n.text:00402f10   55                   PUSH        RBP\n.text:00402f11   4889e5               MOV         RBP,RSP\n.text:00402f14   4883ec20             SUB         RSP,0x20\n.text:00402f18   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:00402f1c   48b8ffffffffffffff7f     MOV         RAX,0x7fffffffffffffff\n.text:00402f26   488945f8             MOV         qword ptr [RBP + local_10+0x8],RAX\n.text:00402f2a   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402f2e   4889c7               MOV         param_1,RAX\n.text:00402f31   e8d7010000           CALL        std::allocator_traits\u003cstd::allocator\u003cunsigned_char\u003e\u003e::max_size     ; undefined max_size(allocator * param_1)\n.text:00402f36   488945f0             MOV         qword ptr [RBP + local_18+0x8],RAX\n.text:00402f3a   488d55f0             LEA         RDX\u003d\u003elocal_18,[RBP + -0x10]\n.text:00402f3e   488d45f8             LEA         RAX\u003d\u003elocal_10,[RBP + -0x8]\n.text:00402f42   4889d6               MOV         RSI,RDX\n.text:00402f45   4889c7               MOV         param_1,RAX\n.text:00402f48   e8ce000000           CALL        std::min\u003cunsigned_long\u003e                      ; ulong * min\u003cunsigned_long\u003e(ulong * param_1, ulong * param_2)\n.text:00402f4d   488b00               MOV         RAX,qword ptr [RAX]\n.text:00402f50   c9                   LEAVE\n.text:00402f51   c3                   RET\n",
  "operator\u003c\u003c": "; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n; Parameters:\n; param_1        basic_ostream * RDI\n; param_2        char *         RSI\n; Stack variables:\n                                  operator\u003c\u003c:\n.plt:004014b0    ff257a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::operator\u003c\u003c]     ; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n.plt:004014b6    6811000000           PUSH        0x11\n.plt:004014bb    e9d0feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall operator\u003c\u003c(_func_basic_ostream_ptr_basic_ostream_ptr * param_1)\n; Parameters:\n; this           basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e * RDI\n; param_1        _func_basic_ostream_ptr_basic_ostream_ptr * RSI\n; Stack variables:\n                                  operator\u003c\u003c:\n.plt:004014e0    ff25627f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c]     ; undefined operator\u003c\u003c(basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e * this, _func_basic_ostream_ptr_basic_ostream_ptr * param_1)\n.plt:004014e6    6814000000           PUSH        0x14\n.plt:004014eb    e9a0feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n; Parameters:\n; param_1        basic_ostream * RDI\n; param_2        char *         RSI\n; Stack variables:\n                                  ; _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4\n                                  operator\u003c\u003c:\nEXTERNAL:0040a080                      ??          ??\n; undefined __thiscall operator\u003c\u003c(_func_basic_ostream_ptr_basic_ostream_ptr * param_1)\n; Parameters:\n; this           basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e * RDI\n; param_1        _func_basic_ostream_ptr_basic_ostream_ptr * RSI\n; Stack variables:\n                                  ; _ZNSolsEPFRSoS_E@GLIBCXX_3.4\n                                  operator\u003c\u003c:\nEXTERNAL:0040a098                      ??          ??\n",
  "_M_deallocate": "; undefined __thiscall _M_deallocate(int * param_1, ulong param_2)\n; Parameters:\n; this           _Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * RDI\n; param_1        int *          RSI\n; param_2        ulong          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  _M_deallocate:\n.text:00402a8e   55                   PUSH        RBP\n.text:00402a8f   4889e5               MOV         RBP,RSP\n.text:00402a92   4883ec20             SUB         RSP,0x20\n.text:00402a96   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402a9a   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402a9e   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_2\n.text:00402aa2   48837df000           CMP         qword ptr [RBP + local_18+0x8],0x0\n.text:00402aa7   7417                 JZ          LAB_00402ac0\n.text:00402aa9   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402aad   488b55e8             MOV         param_2,qword ptr [RBP + local_20+0x8]\n.text:00402ab1   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00402ab5   4889ce               MOV         param_1,RCX\n.text:00402ab8   4889c7               MOV         this,RAX\n.text:00402abb   e8fe020000           CALL        std::allocator_traits\u003cstd::allocator\u003cint\u003e\u003e::deallocate     ; undefined deallocate(allocator * param_1, int * param_2, ulong param_3)\n                                  LAB_00402ac0:\n.text:00402ac0   90                   NOP\n.text:00402ac1   c9                   LEAVE\n.text:00402ac2   c3                   RET\n; undefined __thiscall _M_deallocate(uchar * param_1, ulong param_2)\n; Parameters:\n; this           _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * RDI\n; param_1        uchar *        RSI\n; param_2        ulong          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  _M_deallocate:\n.text:00402bfa   55                   PUSH        RBP\n.text:00402bfb   4889e5               MOV         RBP,RSP\n.text:00402bfe   4883ec20             SUB         RSP,0x20\n.text:00402c02   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402c06   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402c0a   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_2\n.text:00402c0e   48837df000           CMP         qword ptr [RBP + local_18+0x8],0x0\n.text:00402c13   7417                 JZ          LAB_00402c2c\n.text:00402c15   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402c19   488b55e8             MOV         param_2,qword ptr [RBP + local_20+0x8]\n.text:00402c1d   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00402c21   4889ce               MOV         param_1,RCX\n.text:00402c24   4889c7               MOV         this,RAX\n.text:00402c27   e8b6020000           CALL        std::allocator_traits\u003cstd::allocator\u003cunsigned_char\u003e\u003e::deallocate     ; undefined deallocate(allocator * param_1, uchar * param_2, ulong param_3)\n                                  LAB_00402c2c:\n.text:00402c2c   90                   NOP\n.text:00402c2d   c9                   LEAVE\n.text:00402c2e   c3                   RET\n",
  "__copy_m\u003cint\u003e": "; int * __stdcall __copy_m\u003cint\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  __copy_m\u003cint\u003e:\n.text:00403491   55                   PUSH        RBP\n.text:00403492   4889e5               MOV         RBP,RSP\n.text:00403495   4883ec30             SUB         RSP,0x30\n.text:00403499   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:0040349d   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:004034a1   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:004034a5   488b45e0             MOV         RAX,qword ptr [RBP + local_28+0x8]\n.text:004034a9   482b45e8             SUB         RAX,qword ptr [RBP + local_20+0x8]\n.text:004034ad   48c1f802             SAR         RAX,0x2\n.text:004034b1   488945f8             MOV         qword ptr [RBP + local_10+0x8],RAX\n.text:004034b5   48837df800           CMP         qword ptr [RBP + local_10+0x8],0x0\n.text:004034ba   741f                 JZ          LAB_004034db\n.text:004034bc   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004034c0   488d148500000000     LEA         param_3,[RAX*0x4]\n.text:004034c8   488b4de8             MOV         RCX,qword ptr [RBP + local_20+0x8]\n.text:004034cc   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004034d0   4889ce               MOV         param_2,RCX\n.text:004034d3   4889c7               MOV         param_1,RAX\n.text:004034d6   e8c5dfffff           CALL        \u003cEXTERNAL\u003e::memmove                          ; void * memmove(void * __dest, void * __src, size_t __n)\n                                  LAB_004034db:\n.text:004034db   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004034df   488d148500000000     LEA         param_3,[RAX*0x4]\n.text:004034e7   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004034eb   4801d0               ADD         RAX,param_3\n.text:004034ee   c9                   LEAVE\n.text:004034ef   c3                   RET\n",
  "__uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e": "; uchar * __uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e(uchar * param_1, uchar * param_2, uchar * param_3, allocator * param_4)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; param_4        allocator *    RCX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n                                  __uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e:\n.text:00402cf1   55                   PUSH        RBP\n.text:00402cf2   4889e5               MOV         RBP,RSP\n.text:00402cf5   4883ec20             SUB         RSP,0x20\n.text:00402cf9   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402cfd   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402d01   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00402d05   48894de0             MOV         qword ptr [RBP + local_28+0x8],param_4\n.text:00402d09   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:00402d0d   488b4df0             MOV         param_4,qword ptr [RBP + local_18+0x8]\n.text:00402d11   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402d15   4889ce               MOV         param_2,param_4\n.text:00402d18   4889c7               MOV         param_1,RAX\n.text:00402d1b   e85c020000           CALL        std::uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e     ; uchar * uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:00402d20   c9                   LEAVE\n.text:00402d21   c3                   RET\n",
  "uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e": "; uchar * uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_9        undefined1     -0x9\n; local_a        undefined1     -0xa\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e:\n.text:00402f7c   55                   PUSH        RBP\n.text:00402f7d   4889e5               MOV         RBP,RSP\n.text:00402f80   4883ec30             SUB         RSP,0x30\n.text:00402f84   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:00402f88   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:00402f8c   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:00402f90   c645ff01             MOV         byte ptr [RBP + local_9+0x8],0x1\n.text:00402f94   c645fe01             MOV         byte ptr [RBP + local_a+0x8],0x1\n.text:00402f98   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:00402f9c   488b4de0             MOV         RCX,qword ptr [RBP + local_28+0x8]\n.text:00402fa0   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402fa4   4889ce               MOV         param_2,RCX\n.text:00402fa7   4889c7               MOV         param_1,RAX\n.text:00402faa   e8c1010000           CALL        std::__uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e     ; uchar * __uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:00402faf   c9                   LEAVE\n.text:00402fb0   c3                   RET\n",
  "~allocator": "; undefined __thiscall ~allocator(void)\n; Parameters:\n; this           allocator\u003cchar\u003e * RDI\n; Stack variables:\n                                  ~allocator:\n.plt:004013b0    ff25fa7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator]     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.plt:004013b6    6801000000           PUSH        0x1\n.plt:004013bb    e9d0ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall ~allocator(void)\n; Parameters:\n; this           allocator\u003cchar\u003e * RDI\n; Stack variables:\n                                  ~allocator:\n.plt:00401510    ff254a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator]     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.plt:00401516    6817000000           PUSH        0x17\n.plt:0040151b    e970feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall ~allocator(void)\n; Parameters:\n; this           allocator\u003cint\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~allocator:\n.text:00402254   55                   PUSH        RBP\n.text:00402255   4889e5               MOV         RBP,RSP\n.text:00402258   4883ec10             SUB         RSP,0x10\n.text:0040225c   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402260   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402264   4889c7               MOV         this,RAX\n.text:00402267   e804040000           CALL        std::__new_allocator\u003cint\u003e::~__new_allocator     ; undefined ~__new_allocator(__new_allocator\u003cint\u003e * this)\n.text:0040226c   90                   NOP\n.text:0040226d   c9                   LEAVE\n.text:0040226e   c3                   RET\n; undefined __thiscall ~allocator(void)\n; Parameters:\n; this           allocator\u003cunsigned_char\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~allocator:\n.text:00402314   55                   PUSH        RBP\n.text:00402315   4889e5               MOV         RBP,RSP\n.text:00402318   4883ec10             SUB         RSP,0x10\n.text:0040231c   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402320   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402324   4889c7               MOV         this,RAX\n.text:00402327   e814050000           CALL        std::__new_allocator\u003cunsigned_char\u003e::~__new_allocator     ; undefined ~__new_allocator(__new_allocator\u003cunsigned_char\u003e * this)\n.text:0040232c   90                   NOP\n.text:0040232d   c9                   LEAVE\n.text:0040232e   c3                   RET\n; undefined __thiscall ~allocator(void)\n; Parameters:\n; this           allocator\u003cchar\u003e * RDI\n; Stack variables:\n                                  ; _ZNSaIcED2Ev@GLIBCXX_3.4\n                                  ~allocator:\nEXTERNAL:0040a008                      ??          ??\n; undefined __thiscall ~allocator(void)\n; Parameters:\n; this           allocator\u003cchar\u003e * RDI\n; Stack variables:\n                                  ; _ZNSaIcED1Ev@GLIBCXX_3.4\n                                  ~allocator:\nEXTERNAL:0040a0b0                      ??          ??\n",
  "memcpy": "; void * memcpy(void * __dest, void * __src, size_t __n)\n; Parameters:\n; __dest         void *         RDI\n; __src          void *         RSI\n; __n            size_t         RDX\n; Stack variables:\n                                  memcpy:\n.plt:00401540    ff25327f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::memcpy]             ; void * memcpy(void * __dest, void * __src, size_t __n)\n.plt:00401546    681a000000           PUSH        0x1a\n.plt:0040154b    e940feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; void * memcpy(void * __dest, void * __src, size_t __n)\n; Parameters:\n; __dest         void *         RDI\n; __src          void *         RSI\n; __n            size_t         RDX\n; Stack variables:\n                                  ; memcpy@FBSD_1.0\n                                  memcpy:\nEXTERNAL:0040a0c8                      ??          ??\n",
  "basic_string\u003cstd::allocator\u003cchar\u003e\u003e": "; undefined __thiscall basic_string\u003cstd::allocator\u003cchar\u003e\u003e(char * param_1, allocator * param_2)\n; Parameters:\n; this           basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * RDI\n; param_1        char *         RSI\n; param_2        allocator *    RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n; local_40       undefined8     -0x40\n                                  basic_string\u003cstd::allocator\u003cchar\u003e\u003e:\n.text:0040247c   55                   PUSH        RBP\n.text:0040247d   4889e5               MOV         RBP,RSP\n.text:00402480   53                   PUSH        RBX\n.text:00402481   4883ec38             SUB         RSP,0x38\n.text:00402485   48897dd8             MOV         qword ptr [RBP + local_30+0x8],this\n.text:00402489   488975d0             MOV         qword ptr [RBP + local_38+0x8],param_1\n.text:0040248d   488955c8             MOV         qword ptr [RBP + local_40+0x8],param_2\n.text:00402491   488b5dd8             MOV         RBX,qword ptr [RBP + local_30+0x8]\n.text:00402495   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402499   4889c7               MOV         this,RAX\n.text:0040249c   e8dfefffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_local_data     ; undefined _M_local_data(void)\n.text:004024a1   4889c1               MOV         RCX,RAX\n.text:004024a4   488b45c8             MOV         RAX,qword ptr [RBP + local_40+0x8]\n.text:004024a8   4889c2               MOV         param_2,RAX\n.text:004024ab   4889ce               MOV         param_1,RCX\n.text:004024ae   4889df               MOV         this,RBX\n.text:004024b1   e83af0ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_Alloc_hider::_Alloc_hider     ; undefined _Alloc_hider(_Alloc_hider * this, char * param_1, allocator * param_2)\n.text:004024b6   48837dd000           CMP         qword ptr [RBP + local_38+0x8],0x0\n.text:004024bb   750a                 JNZ         LAB_004024c7\n.text:004024bd   bfd0364000           MOV         this,s_basic_string:_construction_from_n_004036d0     ; \u003d \"basic_string: construction from null is not valid\"\n                                  ; try { // try from 004024c2 to 004024f4 has its CatchHandler @ 004024f7\n                                  LAB_004024c2:\n.text:004024c2   e889efffff           CALL        \u003cEXTERNAL\u003e::std::__throw_logic_error         ; undefined __throw_logic_error(char * param_1)\n                                  LAB_004024c7:\n.text:004024c7   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:004024cb   4889c7               MOV         this,RAX\n.text:004024ce   e8d1fcffff           CALL        std::char_traits\u003cchar\u003e::length               ; undefined length(char * param_1)\n.text:004024d3   488b55d0             MOV         param_2,qword ptr [RBP + local_38+0x8]\n.text:004024d7   4801d0               ADD         RAX,param_2\n.text:004024da   488945e8             MOV         qword ptr [RBP + local_20+0x8],RAX\n.text:004024de   488b55e8             MOV         param_2,qword ptr [RBP + local_20+0x8]\n.text:004024e2   488b4dd0             MOV         RCX,qword ptr [RBP + local_38+0x8]\n.text:004024e6   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004024ea   4889ce               MOV         param_1,RCX\n.text:004024ed   4889c7               MOV         this,RAX\n.text:004024f0   e887000000           CALL        std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_construct\u003cchar_const*\u003e     ; void _M_construct\u003cchar_const*\u003e(char * param_1, char * param_2, forward_iterator_tag param_3)\n                                  ; } // end try from 004024c2 to 004024f4\n.text:004024f5   eb1a                 JMP         LAB_00402511\n                                  ; catch() { ... } // from try @ 004024c2 with catch @ 004024f7\n                                  LAB_004024f7:\n.text:004024f7   4889c3               MOV         RBX,RAX\n.text:004024fa   488b45d8             MOV         RAX,qword ptr [RBP + -0x28]\n.text:004024fe   4889c7               MOV         RDI,RAX\n.text:00402501   e816fdffff           CALL        std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_Alloc_hider::~_Alloc_hider     ; undefined ~_Alloc_hider(_Alloc_hider * this)\n.text:00402506   4889d8               MOV         RAX,RBX\n.text:00402509   4889c7               MOV         RDI,RAX\n                                  LAB_0040250c:\n.text:0040250c   e87ff0ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  LAB_00402511:\n.text:00402511   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402515   c9                   LEAVE\n.text:00402516   c3                   RET\n",
  "__destroy\u003cunsigned_char*\u003e": "; void __stdcall __destroy\u003cunsigned_char*\u003e(uchar * param_1, uchar * param_2)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __destroy\u003cunsigned_char*\u003e:\n.text:00402fb1   55                   PUSH        RBP\n.text:00402fb2   4889e5               MOV         RBP,RSP\n.text:00402fb5   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402fb9   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402fbd   90                   NOP\n.text:00402fbe   5d                   POP         RBP\n.text:00402fbf   c3                   RET\n",
  "_M_create": "; undefined _M_create(ulong * param_1, ulong param_2)\n; Parameters:\n; param_1        ulong *        RDI\n; param_2        ulong          RSI\n; Stack variables:\n                                  _M_create:\n.plt:004015b0    ff25fa7e0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_create]     ; undefined _M_create(ulong * param_1, ulong param_2)\n.plt:004015b6    6821000000           PUSH        0x21\n.plt:004015bb    e9d0fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_create(ulong * param_1, ulong param_2)\n; Parameters:\n; param_1        ulong *        RDI\n; param_2        ulong          RSI\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21\n                                  _M_create:\nEXTERNAL:0040a100                      ??          ??\n",
  "__niter_base\u003cint*\u003e": "; int * __niter_base\u003cint*\u003e(int * param_1)\n; Parameters:\n; param_1        int *          RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __niter_base\u003cint*\u003e:\n.text:0040338f   55                   PUSH        RBP\n.text:00403390   4889e5               MOV         RBP,RSP\n.text:00403393   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403397   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040339b   5d                   POP         RBP\n.text:0040339c   c3                   RET\n",
  "distance\u003cchar_const*\u003e": "; difference_type distance\u003cchar_const*\u003e(char * param_1, char * param_2)\n; Parameters:\n; param_1        char *         RDI\n; param_2        char *         RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  distance\u003cchar_const*\u003e:\n.text:00402a2a   55                   PUSH        RBP\n.text:00402a2b   4889e5               MOV         RBP,RSP\n.text:00402a2e   4883ec10             SUB         RSP,0x10\n.text:00402a32   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402a36   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402a3a   488d45f8             LEA         RAX\u003d\u003elocal_10,[RBP + -0x8]\n.text:00402a3e   4889c7               MOV         param_1,RAX\n.text:00402a41   e802030000           CALL        std::__iterator_category\u003cchar_const*\u003e        ; iterator_category __iterator_category\u003cchar_const*\u003e(char * * param_1)\n.text:00402a46   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402a4a   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402a4e   4889d6               MOV         param_2,RDX\n.text:00402a51   4889c7               MOV         param_1,RAX\n.text:00402a54   e8fa020000           CALL        std::__distance\u003cchar_const*\u003e                 ; difference_type __distance\u003cchar_const*\u003e(char * param_1, char * param_2, random_access_iterator_tag param_3)\n.text:00402a59   c9                   LEAVE\n.text:00402a5a   c3                   RET\n",
  "__distance\u003cchar_const*\u003e": "; difference_type __distance\u003cchar_const*\u003e(char * param_1, char * param_2, random_access_iterator_tag param_3)\n; Parameters:\n; param_1        char *         RDI\n; param_2        char *         RSI\n; param_3        random_access_iterator_tag EDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __distance\u003cchar_const*\u003e:\n.text:00402d53   55                   PUSH        RBP\n.text:00402d54   4889e5               MOV         RBP,RSP\n.text:00402d57   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402d5b   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402d5f   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00402d63   482b45f8             SUB         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402d67   5d                   POP         RBP\n.text:00402d68   c3                   RET\n",
  "_init": "; int __stdcall _init(EVP_PKEY_CTX * ctx)\n; Parameters:\n; ctx            EVP_PKEY_CTX * RDI\n; Stack variables:\n                                  _init:\n.init:00401378   4883ec08             SUB         RSP,0x8                                      ; crti.S:16\n.init:0040137c   e80f060000           CALL        frame_dummy                                  ; undefined frame_dummy()\n.init:00401381   e85a220000           CALL        __do_global_ctors_aux                        ; undefined __do_global_ctors_aux()\n.init:00401386   4883c408             ADD         RSP,0x8\n.init:0040138a   c3                   RET\n",
  "distance\u003cint_const*\u003e": "; difference_type distance\u003cint_const*\u003e(int * param_1, int * param_2)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  distance\u003cint_const*\u003e:\n.text:00402753   55                   PUSH        RBP\n.text:00402754   4889e5               MOV         RBP,RSP\n.text:00402757   4883ec10             SUB         RSP,0x10\n.text:0040275b   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:0040275f   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402763   488d45f8             LEA         RAX\u003d\u003elocal_10,[RBP + -0x8]\n.text:00402767   4889c7               MOV         param_1,RAX\n.text:0040276a   e867030000           CALL        std::__iterator_category\u003cint_const*\u003e         ; iterator_category __iterator_category\u003cint_const*\u003e(int * * param_1)\n.text:0040276f   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402773   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402777   4889d6               MOV         param_2,RDX\n.text:0040277a   4889c7               MOV         param_1,RAX\n.text:0040277d   e85f030000           CALL        std::__distance\u003cint_const*\u003e                  ; difference_type __distance\u003cint_const*\u003e(int * param_1, int * param_2, random_access_iterator_tag param_3)\n.text:00402782   c9                   LEAVE\n.text:00402783   c3                   RET\n",
  "_Destroy\u003cunsigned_char*,unsigned_char\u003e": "; void _Destroy\u003cunsigned_char*,unsigned_char\u003e(uchar * param_1, uchar * param_2, allocator * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        allocator *    RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  _Destroy\u003cunsigned_char*,unsigned_char\u003e:\n.text:00402a00   55                   PUSH        RBP\n.text:00402a01   4889e5               MOV         RBP,RSP\n.text:00402a04   4883ec20             SUB         RSP,0x20\n.text:00402a08   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402a0c   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402a10   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00402a14   488b55f0             MOV         param_3,qword ptr [RBP + local_18+0x8]\n.text:00402a18   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402a1c   4889d6               MOV         param_2,param_3\n.text:00402a1f   4889c7               MOV         param_1,RAX\n.text:00402a22   e8fb020000           CALL        std::_Destroy\u003cunsigned_char*\u003e                ; void _Destroy\u003cunsigned_char*\u003e(uchar * param_1, uchar * param_2)\n.text:00402a27   90                   NOP\n.text:00402a28   c9                   LEAVE\n.text:00402a29   c3                   RET\n",
  "__copy_move_a2\u003cfalse,int_const*,int*\u003e": "; int * __copy_move_a2\u003cfalse,int_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  __copy_move_a2\u003cfalse,int_const*,int*\u003e:\n.text:00403437   55                   PUSH        RBP\n.text:00403438   4889e5               MOV         RBP,RSP\n.text:0040343b   4883ec20             SUB         RSP,0x20\n.text:0040343f   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403443   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403447   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:0040344b   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:0040344f   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00403453   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403457   4889ce               MOV         param_2,RCX\n.text:0040345a   4889c7               MOV         param_1,RAX\n.text:0040345d   e82f000000           CALL        std::__copy_move\u003cfalse,true,std::random_access_iterator_tag\u003e::__copy_m\u003cint\u003e     ; int * __copy_m\u003cint\u003e(int * param_1, int * param_2, int * param_3)\n.text:00403462   c9                   LEAVE\n.text:00403463   c3                   RET\n",
  "main": "; undefined main()\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_38       undefined1     -0x38\n; local_39       undefined1     -0x39\n; local_68       undefined1     -0x68\n; local_6c       undefined4     -0x6c\n; local_78       undefined8     -0x78\n                                  main:\n.text:00401f6e   55                   PUSH        RBP\n.text:00401f6f   4889e5               MOV         RBP,RSP\n.text:00401f72   53                   PUSH        RBX\n.text:00401f73   4883ec68             SUB         RSP,0x68\n.text:00401f77   897d9c               MOV         dword ptr [RBP + local_6c+0x8],EDI\n.text:00401f7a   48897590             MOV         qword ptr [RBP + local_78+0x8],RSI\n.text:00401f7e   837d9c01             CMP         dword ptr [RBP + local_6c+0x8],0x1\n.text:00401f82   7f48                 JG          LAB_00401fcc\n.text:00401f84   bebb364000           MOV         ESI,s_Usage:_004036bb                        ; \u003d \"Usage: \"\n.text:00401f89   bfc09c4000           MOV         EDI,std::cout\n                                  LAB_00401f8e:\n.text:00401f8e   e81df5ffff           CALL        \u003cEXTERNAL\u003e::std::operator\u003c\u003c                  ; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n.text:00401f93   4889c2               MOV         RDX,RAX\n.text:00401f96   488b4590             MOV         RAX,qword ptr [RBP + local_78+0x8]\n.text:00401f9a   488b00               MOV         RAX,qword ptr [RAX]\n.text:00401f9d   4889c6               MOV         RSI,RAX\n.text:00401fa0   4889d7               MOV         RDI,RDX\n.text:00401fa3   e808f5ffff           CALL        \u003cEXTERNAL\u003e::std::operator\u003c\u003c                  ; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n.text:00401fa8   bec3364000           MOV         ESI,s__\u003cfood\u003e_004036c3                       ; \u003d \" \u003cfood\u003e\"\n.text:00401fad   4889c7               MOV         RDI,RAX\n.text:00401fb0   e8fbf4ffff           CALL        \u003cEXTERNAL\u003e::std::operator\u003c\u003c                  ; basic_ostream * operator\u003c\u003c(basic_ostream * param_1, char * param_2)\n.text:00401fb5   bef0134000           MOV         ESI,std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e\n.text:00401fba   4889c7               MOV         RDI,RAX\n.text:00401fbd   e81ef5ffff           CALL        \u003cEXTERNAL\u003e::std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c     ; undefined operator\u003c\u003c(basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e * this, _func_basic_ostream_ptr_basic_ostream_ptr * param_1)\n.text:00401fc2   b801000000           MOV         EAX,0x1\n.text:00401fc7   e9b9000000           JMP         LAB_00402085\n                                  LAB_00401fcc:\n.text:00401fcc   488d45cf             LEA         RAX\u003d\u003elocal_39,[RBP + -0x31]\n.text:00401fd0   4889c7               MOV         RDI,RAX\n.text:00401fd3   e8c8f5ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::allocator     ; undefined allocator(void)\n.text:00401fd8   488b4590             MOV         RAX,qword ptr [RBP + local_78+0x8]\n.text:00401fdc   4883c008             ADD         RAX,0x8\n.text:00401fe0   488b08               MOV         RCX,qword ptr [RAX]\n.text:00401fe3   488d55cf             LEA         RDX\u003d\u003elocal_39,[RBP + -0x31]\n.text:00401fe7   488d45a0             LEA         RAX\u003d\u003elocal_68,[RBP + -0x60]\n.text:00401feb   4889ce               MOV         RSI,RCX\n.text:00401fee   4889c7               MOV         RDI,RAX\n                                  ; try { // try from 00401ff1 to 00401ff5 has its CatchHandler @ 00402040\n                                  LAB_00401ff1:\n.text:00401ff1   e886040000           CALL        std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::basic_string\u003cstd::allocator\u003cchar\u003e\u003e     ; undefined basic_string\u003cstd::allocator\u003cchar\u003e\u003e(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this, char * param_1, allocator * param_2)\n                                  ; } // end try from 00401ff1 to 00401ff5\n.text:00401ff6   488d45cf             LEA         RAX\u003d\u003elocal_39,[RBP + -0x31]\n.text:00401ffa   4889c7               MOV         RDI,RAX\n.text:00401ffd   e80ef5ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.text:00402002   488d55a0             LEA         RDX\u003d\u003elocal_68,[RBP + -0x60]\n.text:00402006   488d45d0             LEA         RAX\u003d\u003elocal_38,[RBP + -0x30]\n.text:0040200a   4889d6               MOV         RSI,RDX\n.text:0040200d   4889c7               MOV         RDI,RAX\n                                  ; try { // try from 00402010 to 00402014 has its CatchHandler @ 0040206b\n                                  LAB_00402010:\n.text:00402010   e8cbf3ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::basic_string     ; undefined basic_string(basic_string * param_1)\n                                  ; } // end try from 00402010 to 00402014\n.text:00402015   488d45d0             LEA         RAX\u003d\u003elocal_38,[RBP + -0x30]\n.text:00402019   4889c7               MOV         RDI,RAX\n                                  ; try { // try from 0040201c to 00402020 has its CatchHandler @ 0040205a\n                                  LAB_0040201c:\n.text:0040201c   e885f9ffff           CALL        verify                                       ; undefined verify(basic_string param_1)\n                                  ; } // end try from 0040201c to 00402020\n.text:00402021   488d45d0             LEA         RAX\u003d\u003elocal_38,[RBP + -0x30]\n.text:00402025   4889c7               MOV         RDI,RAX\n.text:00402028   e8e3f3ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.text:0040202d   488d45a0             LEA         RAX\u003d\u003elocal_68,[RBP + -0x60]\n.text:00402031   4889c7               MOV         RDI,RAX\n.text:00402034   e8d7f3ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.text:00402039   b800000000           MOV         EAX,0x0\n.text:0040203e   eb45                 JMP         LAB_00402085\n                                  ; catch() { ... } // from try @ 00401ff1 with catch @ 00402040\n                                  LAB_00402040:\n.text:00402040   4889c3               MOV         RBX,RAX\n.text:00402043   488d45cf             LEA         RAX,[RBP + -0x31]\n.text:00402047   4889c7               MOV         RDI,RAX\n.text:0040204a   e8c1f4ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.text:0040204f   4889d8               MOV         RAX,RBX\n.text:00402052   4889c7               MOV         RDI,RAX\n                                  LAB_00402055:\n.text:00402055   e836f5ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  ; catch() { ... } // from try @ 0040201c with catch @ 0040205a\n                                  LAB_0040205a:\n.text:0040205a   4889c3               MOV         RBX,RAX\n.text:0040205d   488d45d0             LEA         RAX,[RBP + -0x30]\n.text:00402061   4889c7               MOV         RDI,RAX\n.text:00402064   e8a7f3ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.text:00402069   eb03                 JMP         LAB_0040206e\n                                  ; catch() { ... } // from try @ 00402010 with catch @ 0040206b\n                                  LAB_0040206b:\n.text:0040206b   4889c3               MOV         RBX,RAX\n                                  LAB_0040206e:\n.text:0040206e   488d45a0             LEA         RAX,[RBP + -0x60]\n.text:00402072   4889c7               MOV         RDI,RAX\n.text:00402075   e896f3ffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string     ; undefined ~basic_string(basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e * this)\n.text:0040207a   4889d8               MOV         RAX,RBX\n.text:0040207d   4889c7               MOV         RDI,RAX\n.text:00402080   e80bf5ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  LAB_00402085:\n.text:00402085   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402089   c9                   LEAVE\n.text:0040208a   c3                   RET\n",
  "__new_allocator": "; undefined __new_allocator(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __new_allocator:\n.text:00402664   55                   PUSH        RBP\n.text:00402665   4889e5               MOV         RBP,RSP\n.text:00402668   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:0040266c   90                   NOP\n.text:0040266d   5d                   POP         RBP\n.text:0040266e   c3                   RET\n; undefined __new_allocator(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __new_allocator:\n.text:00402834   55                   PUSH        RBP\n.text:00402835   4889e5               MOV         RBP,RSP\n.text:00402838   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:0040283c   90                   NOP\n.text:0040283d   5d                   POP         RBP\n.text:0040283e   c3                   RET\n; undefined __stdcall __new_allocator(__new_allocator * param_1)\n; Parameters:\n; param_1        __new_allocator * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __new_allocator:\n.text:00402fc0   55                   PUSH        RBP\n.text:00402fc1   4889e5               MOV         RBP,RSP\n.text:00402fc4   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402fc8   488975f0             MOV         qword ptr [RBP + local_18+0x8],RSI\n.text:00402fcc   90                   NOP\n.text:00402fcd   5d                   POP         RBP\n.text:00402fce   c3                   RET\n; undefined __stdcall __new_allocator(__new_allocator * param_1)\n; Parameters:\n; param_1        __new_allocator * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __new_allocator:\n.text:004030d4   55                   PUSH        RBP\n.text:004030d5   4889e5               MOV         RBP,RSP\n.text:004030d8   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004030dc   488975f0             MOV         qword ptr [RBP + local_18+0x8],RSI\n.text:004030e0   90                   NOP\n.text:004030e1   5d                   POP         RBP\n.text:004030e2   c3                   RET\n",
  "_Alloc_hider": "; undefined __thiscall _Alloc_hider(char * param_1, allocator * param_2)\n; Parameters:\n; this           _Alloc_hider * RDI\n; param_1        char *         RSI\n; param_2        allocator *    RDX\n; Stack variables:\n                                  _Alloc_hider:\n.plt:004014f0    ff255a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_Alloc_hider::_Alloc_hider]     ; undefined _Alloc_hider(_Alloc_hider * this, char * param_1, allocator * param_2)\n.plt:004014f6    6815000000           PUSH        0x15\n.plt:004014fb    e990feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __thiscall _Alloc_hider(char * param_1, allocator * param_2)\n; Parameters:\n; this           _Alloc_hider * RDI\n; param_1        char *         RSI\n; param_2        allocator *    RDX\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21\n                                  _Alloc_hider:\nEXTERNAL:0040a0a0                      ??          ??\n",
  "~_Alloc_hider": "; undefined __thiscall ~_Alloc_hider(void)\n; Parameters:\n; this           _Alloc_hider * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~_Alloc_hider:\n.text:0040221c   55                   PUSH        RBP\n.text:0040221d   4889e5               MOV         RBP,RSP\n.text:00402220   4883ec10             SUB         RSP,0x10\n.text:00402224   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402228   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040222c   4889c7               MOV         this,RAX\n.text:0040222f   e87cf1ffff           CALL        \u003cEXTERNAL\u003e::std::allocator\u003cchar\u003e::~allocator     ; undefined ~allocator(allocator\u003cchar\u003e * this)\n.text:00402234   90                   NOP\n.text:00402235   c9                   LEAVE\n.text:00402236   c3                   RET\n",
  "_Vector_base": "; undefined __thiscall _Vector_base(allocator * param_1)\n; Parameters:\n; this           _Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * RDI\n; param_1        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _Vector_base:\n.text:00402698   55                   PUSH        RBP\n.text:00402699   4889e5               MOV         RBP,RSP\n.text:0040269c   4883ec10             SUB         RSP,0x10\n.text:004026a0   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:004026a4   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:004026a8   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004026ac   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:004026b0   4889d6               MOV         param_1,RDX\n.text:004026b3   4889c7               MOV         this,RAX\n.text:004026b6   e8a1030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_Vector_impl::_Vector_impl     ; undefined _Vector_impl(_Vector_impl * this, allocator * param_1)\n.text:004026bb   90                   NOP\n.text:004026bc   c9                   LEAVE\n.text:004026bd   c3                   RET\n; undefined __thiscall _Vector_base(allocator * param_1)\n; Parameters:\n; this           _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * RDI\n; param_1        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _Vector_base:\n.text:00402868   55                   PUSH        RBP\n.text:00402869   4889e5               MOV         RBP,RSP\n.text:0040286c   4883ec10             SUB         RSP,0x10\n.text:00402870   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402874   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402878   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040287c   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402880   4889d6               MOV         param_1,RDX\n.text:00402883   4889c7               MOV         this,RAX\n.text:00402886   e83d030000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_impl::_Vector_impl     ; undefined _Vector_impl(_Vector_impl * this, allocator * param_1)\n.text:0040288b   90                   NOP\n.text:0040288c   c9                   LEAVE\n.text:0040288d   c3                   RET\n",
  "__uninitialized_copy_a\u003cint_const*,int*,int\u003e": "; int * __uninitialized_copy_a\u003cint_const*,int*,int\u003e(int * param_1, int * param_2, int * param_3, allocator * param_4)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; param_4        allocator *    RCX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n                                  __uninitialized_copy_a\u003cint_const*,int*,int\u003e:\n.text:00402b97   55                   PUSH        RBP\n.text:00402b98   4889e5               MOV         RBP,RSP\n.text:00402b9b   4883ec20             SUB         RSP,0x20\n.text:00402b9f   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402ba3   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402ba7   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00402bab   48894de0             MOV         qword ptr [RBP + local_28+0x8],param_4\n.text:00402baf   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:00402bb3   488b4df0             MOV         param_4,qword ptr [RBP + local_18+0x8]\n.text:00402bb7   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402bbb   4889ce               MOV         param_2,param_4\n.text:00402bbe   4889c7               MOV         param_1,RAX\n.text:00402bc1   e892020000           CALL        std::uninitialized_copy\u003cint_const*,int*\u003e     ; int * uninitialized_copy\u003cint_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n.text:00402bc6   c9                   LEAVE\n.text:00402bc7   c3                   RET\n",
  "strlen": "; size_t strlen(char * __s)\n; Parameters:\n; __s            char *         RDI\n; Stack variables:\n                                  strlen:\n.plt:004013c0    ff25f27f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::strlen]             ; size_t strlen(char * __s)\n.plt:004013c6    6802000000           PUSH        0x2\n.plt:004013cb    e9c0ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; size_t strlen(char * __s)\n; Parameters:\n; __s            char *         RDI\n; Stack variables:\n                                  ; strlen@FBSD_1.0\n                                  strlen:\nEXTERNAL:0040a010                      ??          ??\n",
  "srand": "; void srand(uint __seed)\n; Parameters:\n; __seed         uint           EDI\n; Stack variables:\n                                  srand:\n.plt:00401460    ff25a27f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::srand]              ; void srand(uint __seed)\n.plt:00401466    680c000000           PUSH        0xc\n.plt:0040146b    e920ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; void srand(uint __seed)\n; Parameters:\n; __seed         uint           EDI\n; Stack variables:\n                                  ; srand@FBSD_1.6\n                                  srand:\nEXTERNAL:0040a058                      ??          ??\n",
  "__uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e": "; uchar * __stdcall __uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  __uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e:\n.text:00403170   55                   PUSH        RBP\n.text:00403171   4889e5               MOV         RBP,RSP\n.text:00403174   4883ec20             SUB         RSP,0x20\n.text:00403178   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:0040317c   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403180   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00403184   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:00403188   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:0040318c   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403190   4889ce               MOV         param_2,RCX\n.text:00403193   4889c7               MOV         param_1,RAX\n.text:00403196   e8ab000000           CALL        std::copy\u003cunsigned_char_const*,unsigned_char*\u003e     ; uchar * copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:0040319b   c9                   LEAVE\n.text:0040319c   c3                   RET\n",
  "__copy_move_a\u003cfalse,int_const*,int*\u003e": "; int * __copy_move_a\u003cfalse,int_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  __copy_move_a\u003cfalse,int_const*,int*\u003e:\n.text:0040329f   55                   PUSH        RBP\n.text:004032a0   4889e5               MOV         RBP,RSP\n.text:004032a3   4154                 PUSH        R12\n.text:004032a5   53                   PUSH        RBX\n.text:004032a6   4883ec20             SUB         RSP,0x20\n.text:004032aa   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:004032ae   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:004032b2   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:004032b6   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004032ba   4889c7               MOV         param_1,RAX\n.text:004032bd   e8cd000000           CALL        std::__niter_base\u003cint*\u003e                      ; int * __niter_base\u003cint*\u003e(int * param_1)\n.text:004032c2   4989c4               MOV         R12,RAX\n.text:004032c5   488b45e0             MOV         RAX,qword ptr [RBP + local_28+0x8]\n.text:004032c9   4889c7               MOV         param_1,RAX\n.text:004032cc   e8b0000000           CALL        std::__niter_base\u003cint_const*\u003e                ; int * __niter_base\u003cint_const*\u003e(int * param_1)\n.text:004032d1   4889c3               MOV         RBX,RAX\n.text:004032d4   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:004032d8   4889c7               MOV         param_1,RAX\n.text:004032db   e8a1000000           CALL        std::__niter_base\u003cint_const*\u003e                ; int * __niter_base\u003cint_const*\u003e(int * param_1)\n.text:004032e0   4c89e2               MOV         param_3,R12\n.text:004032e3   4889de               MOV         param_2,RBX\n.text:004032e6   4889c7               MOV         param_1,RAX\n.text:004032e9   e8af000000           CALL        std::__copy_move_a1\u003cfalse,int_const*,int*\u003e     ; int * __copy_move_a1\u003cfalse,int_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n.text:004032ee   4889c2               MOV         param_3,RAX\n.text:004032f1   488d45d8             LEA         RAX\u003d\u003elocal_30,[RBP + -0x28]\n.text:004032f5   4889d6               MOV         param_2,param_3\n.text:004032f8   4889c7               MOV         param_1,RAX\n.text:004032fb   e8ca000000           CALL        std::__niter_wrap\u003cint*\u003e                      ; int * __niter_wrap\u003cint*\u003e(int * * param_1, int * param_2)\n.text:00403300   4883c420             ADD         RSP,0x20\n.text:00403304   5b                   POP         RBX\n.text:00403305   415c                 POP         R12\n.text:00403307   5d                   POP         RBP\n.text:00403308   c3                   RET\n",
  "_M_local_data": "; undefined _M_local_data(void)\n; Parameters:\n; Stack variables:\n                                  _M_local_data:\n.plt:00401480    ff25927f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_local_data]     ; undefined _M_local_data(void)\n.plt:00401486    680e000000           PUSH        0xe\n.plt:0040148b    e900ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_local_data(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21\n                                  _M_local_data:\nEXTERNAL:0040a068                      ??          ??\n",
  "copy\u003cint_const*,int*\u003e": "; int * copy\u003cint_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  copy\u003cint_const*,int*\u003e:\n.text:004031cc   55                   PUSH        RBP\n.text:004031cd   4889e5               MOV         RBP,RSP\n.text:004031d0   53                   PUSH        RBX\n.text:004031d1   4883ec28             SUB         RSP,0x28\n.text:004031d5   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:004031d9   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:004031dd   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:004031e1   488b45e0             MOV         RAX,qword ptr [RBP + local_28+0x8]\n.text:004031e5   4889c7               MOV         param_1,RAX\n.text:004031e8   e8a4000000           CALL        std::__miter_base\u003cint_const*\u003e                ; int * __miter_base\u003cint_const*\u003e(int * param_1)\n.text:004031ed   4889c3               MOV         RBX,RAX\n.text:004031f0   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:004031f4   4889c7               MOV         param_1,RAX\n.text:004031f7   e895000000           CALL        std::__miter_base\u003cint_const*\u003e                ; int * __miter_base\u003cint_const*\u003e(int * param_1)\n.text:004031fc   4889c1               MOV         RCX,RAX\n.text:004031ff   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00403203   4889c2               MOV         param_3,RAX\n.text:00403206   4889de               MOV         param_2,RBX\n.text:00403209   4889cf               MOV         param_1,RCX\n.text:0040320c   e88e000000           CALL        std::__copy_move_a\u003cfalse,int_const*,int*\u003e     ; int * __copy_move_a\u003cfalse,int_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n.text:00403211   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00403215   c9                   LEAVE\n.text:00403216   c3                   RET\n",
  "~_Vector_base": "; undefined __thiscall ~_Vector_base(void)\n; Parameters:\n; this           _Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~_Vector_base:\n.text:004026be   55                   PUSH        RBP\n.text:004026bf   4889e5               MOV         RBP,RSP\n.text:004026c2   4883ec10             SUB         RSP,0x10\n.text:004026c6   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:004026ca   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004026ce   488b5010             MOV         RDX,qword ptr [RAX + 0x10]\n.text:004026d2   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004026d6   488b00               MOV         RAX,qword ptr [RAX]\n.text:004026d9   4829c2               SUB         RDX,RAX\n.text:004026dc   4889d0               MOV         RAX,RDX\n.text:004026df   48c1f802             SAR         RAX,0x2\n.text:004026e3   4889c2               MOV         RDX,RAX\n.text:004026e6   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004026ea   488b08               MOV         RCX,qword ptr [RAX]\n.text:004026ed   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004026f1   4889ce               MOV         RSI,RCX\n.text:004026f4   4889c7               MOV         this,RAX\n.text:004026f7   e892030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_deallocate     ; undefined _M_deallocate(_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * this, int * param_1, ulong param_2)\n.text:004026fc   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402700   4889c7               MOV         this,RAX\n.text:00402703   e874ffffff           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_Vector_impl::~_Vector_impl     ; undefined ~_Vector_impl(_Vector_impl * this)\n.text:00402708   90                   NOP\n.text:00402709   c9                   LEAVE\n.text:0040270a   c3                   RET\n; undefined __thiscall ~_Vector_base(void)\n; Parameters:\n; this           _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~_Vector_base:\n.text:0040288e   55                   PUSH        RBP\n.text:0040288f   4889e5               MOV         RBP,RSP\n.text:00402892   4883ec10             SUB         RSP,0x10\n.text:00402896   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:0040289a   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040289e   488b5010             MOV         RDX,qword ptr [RAX + 0x10]\n.text:004028a2   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004028a6   488b00               MOV         RAX,qword ptr [RAX]\n.text:004028a9   4829c2               SUB         RDX,RAX\n.text:004028ac   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004028b0   488b08               MOV         RCX,qword ptr [RAX]\n.text:004028b3   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004028b7   4889ce               MOV         RSI,RCX\n.text:004028ba   4889c7               MOV         this,RAX\n.text:004028bd   e838030000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_deallocate     ; undefined _M_deallocate(_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * this, uchar * param_1, ulong param_2)\n.text:004028c2   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004028c6   4889c7               MOV         this,RAX\n.text:004028c9   e87effffff           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_impl::~_Vector_impl     ; undefined ~_Vector_impl(_Vector_impl * this)\n.text:004028ce   90                   NOP\n.text:004028cf   c9                   LEAVE\n.text:004028d0   c3                   RET\n",
  "__copy_m\u003cunsigned_char\u003e": "; uchar * __stdcall __copy_m\u003cunsigned_char\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  __copy_m\u003cunsigned_char\u003e:\n.text:004034f0   55                   PUSH        RBP\n.text:004034f1   4889e5               MOV         RBP,RSP\n.text:004034f4   4883ec30             SUB         RSP,0x30\n.text:004034f8   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:004034fc   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:00403500   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:00403504   488b45e0             MOV         RAX,qword ptr [RBP + local_28+0x8]\n.text:00403508   482b45e8             SUB         RAX,qword ptr [RBP + local_20+0x8]\n.text:0040350c   488945f8             MOV         qword ptr [RBP + local_10+0x8],RAX\n.text:00403510   48837df800           CMP         qword ptr [RBP + local_10+0x8],0x0\n.text:00403515   7417                 JZ          LAB_0040352e\n.text:00403517   488b55f8             MOV         param_3,qword ptr [RBP + local_10+0x8]\n.text:0040351b   488b4de8             MOV         RCX,qword ptr [RBP + local_20+0x8]\n.text:0040351f   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00403523   4889ce               MOV         param_2,RCX\n.text:00403526   4889c7               MOV         param_1,RAX\n.text:00403529   e872dfffff           CALL        \u003cEXTERNAL\u003e::memmove                          ; void * memmove(void * __dest, void * __src, size_t __n)\n                                  LAB_0040352e:\n.text:0040352e   488b55f8             MOV         param_3,qword ptr [RBP + local_10+0x8]\n.text:00403532   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00403536   4801d0               ADD         RAX,param_3\n.text:00403539   c9                   LEAVE\n.text:0040353a   c3                   RET\n",
  "~__new_allocator": "; undefined __thiscall ~__new_allocator(void)\n; Parameters:\n; this           __new_allocator\u003cint\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~__new_allocator:\n.text:00402670   55                   PUSH        RBP\n.text:00402671   4889e5               MOV         RBP,RSP\n.text:00402674   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402678   90                   NOP\n.text:00402679   5d                   POP         RBP\n.text:0040267a   c3                   RET\n; undefined __thiscall ~__new_allocator(void)\n; Parameters:\n; this           __new_allocator\u003cunsigned_char\u003e * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  ~__new_allocator:\n.text:00402840   55                   PUSH        RBP\n.text:00402841   4889e5               MOV         RBP,RSP\n.text:00402844   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402848   90                   NOP\n.text:00402849   5d                   POP         RBP\n.text:0040284a   c3                   RET\n",
  "__iterator_category\u003cint_const*\u003e": "; iterator_category __iterator_category\u003cint_const*\u003e(int * * param_1)\n; Parameters:\n; param_1        int * *        RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __iterator_category\u003cint_const*\u003e:\n.text:00402ad6   55                   PUSH        RBP\n.text:00402ad7   4889e5               MOV         RBP,RSP\n.text:00402ada   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402ade   90                   NOP\n.text:00402adf   5d                   POP         RBP\n.text:00402ae0   c3                   RET\n",
  "_Destroy\u003cint*\u003e": "; void _Destroy\u003cint*\u003e(int * param_1, int * param_2)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _Destroy\u003cint*\u003e:\n.text:004035aa   55                   PUSH        RBP\n.text:004035ab   4889e5               MOV         RBP,RSP\n.text:004035ae   4883ec10             SUB         RSP,0x10\n.text:004035b2   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004035b6   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:004035ba   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:004035be   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004035c2   4889d6               MOV         param_2,RDX\n.text:004035c5   4889c7               MOV         param_1,RAX\n.text:004035c8   e803000000           CALL        std::_Destroy_aux\u003ctrue\u003e::__destroy\u003cint*\u003e     ; void __destroy\u003cint*\u003e(int * param_1, int * param_2)\n.text:004035cd   90                   NOP\n.text:004035ce   c9                   LEAVE\n.text:004035cf   c3                   RET\n",
  "operator.new": "; void * operator.new(ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  operator.new:\n.plt:004014c0    ff25727f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::operator.new]       ; void * operator.new(ulong param_1)\n.plt:004014c6    6812000000           PUSH        0x12\n.plt:004014cb    e9c0feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; void * operator.new(ulong param_1)\n; Parameters:\n; param_1        ulong          RDI\n; Stack variables:\n                                  ; _Znwm@GLIBCXX_3.4\n                                  operator.new:\nEXTERNAL:0040a088                      ??          ??\n",
  "_M_dispose": "; undefined _M_dispose(void)\n; Parameters:\n; Stack variables:\n                                  _M_dispose:\n.plt:00401550    ff252a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_dispose]     ; undefined _M_dispose(void)\n.plt:00401556    681b000000           PUSH        0x1b\n.plt:0040155b    e930feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _M_dispose(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21\n                                  _M_dispose:\nEXTERNAL:0040a0d0                      ??          ??\n",
  "_M_range_initialize\u003cint_const*\u003e": "; void __stdcall _M_range_initialize\u003cint_const*\u003e(int * param_1, int * param_2, forward_iterator_tag param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        forward_iterator_tag EDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n; local_40       undefined8     -0x40\n                                  _M_range_initialize\u003cint_const*\u003e:\n.text:00402784   55                   PUSH        RBP\n.text:00402785   4889e5               MOV         RBP,RSP\n.text:00402788   53                   PUSH        RBX\n.text:00402789   4883ec38             SUB         RSP,0x38\n.text:0040278d   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:00402791   488975d0             MOV         qword ptr [RBP + local_38+0x8],param_2\n.text:00402795   488955c8             MOV         qword ptr [RBP + local_40+0x8],param_3\n.text:00402799   488b55c8             MOV         param_3,qword ptr [RBP + local_40+0x8]\n.text:0040279d   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:004027a1   4889d6               MOV         param_2,param_3\n.text:004027a4   4889c7               MOV         param_1,RAX\n.text:004027a7   e8a7ffffff           CALL        std::distance\u003cint_const*\u003e                    ; difference_type distance\u003cint_const*\u003e(int * param_1, int * param_2)\n.text:004027ac   488945e8             MOV         qword ptr [RBP + local_20+0x8],RAX\n.text:004027b0   488b5dd8             MOV         RBX,qword ptr [RBP + local_30+0x8]\n.text:004027b4   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004027b8   4889c7               MOV         param_1,RAX\n.text:004027bb   e896030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator     ; undefined _M_get_Tp_allocator(void)\n.text:004027c0   4889c2               MOV         param_3,RAX\n.text:004027c3   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:004027c7   4889d6               MOV         param_2,param_3\n.text:004027ca   4889c7               MOV         param_1,RAX\n.text:004027cd   e829030000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::_S_check_init_len     ; undefined _S_check_init_len(ulong param_1, allocator * param_2)\n.text:004027d2   4889c6               MOV         param_2,RAX\n.text:004027d5   4889df               MOV         param_1,RBX\n.text:004027d8   e887030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_allocate     ; undefined _M_allocate(_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * this, ulong param_1)\n.text:004027dd   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:004027e1   488902               MOV         qword ptr [param_3],RAX\n.text:004027e4   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004027e8   488b00               MOV         RAX,qword ptr [RAX]\n.text:004027eb   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:004027ef   48c1e202             SHL         param_3,0x2\n.text:004027f3   4801c2               ADD         param_3,RAX\n.text:004027f6   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004027fa   48895010             MOV         qword ptr [RAX + 0x10],param_3\n.text:004027fe   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402802   4889c7               MOV         param_1,RAX\n.text:00402805   e84c030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator     ; undefined _M_get_Tp_allocator(void)\n.text:0040280a   4889c1               MOV         RCX,RAX\n.text:0040280d   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402811   488b10               MOV         param_3,qword ptr [RAX]\n.text:00402814   488b75c8             MOV         param_2,qword ptr [RBP + local_40+0x8]\n.text:00402818   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:0040281c   4889c7               MOV         param_1,RAX\n.text:0040281f   e873030000           CALL        std::__uninitialized_copy_a\u003cint_const*,int*,int\u003e     ; int * __uninitialized_copy_a\u003cint_const*,int*,int\u003e(int * param_1, int * param_2, int * param_3, allocator * param_4)\n.text:00402824   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:00402828   48894208             MOV         qword ptr [param_3 + 0x8],RAX\n.text:0040282c   90                   NOP\n.text:0040282d   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402831   c9                   LEAVE\n.text:00402832   c3                   RET\n",
  "uninitialized_copy\u003cint_const*,int*\u003e": "; int * uninitialized_copy\u003cint_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_9        undefined1     -0x9\n; local_a        undefined1     -0xa\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  uninitialized_copy\u003cint_const*,int*\u003e:\n.text:00402e58   55                   PUSH        RBP\n.text:00402e59   4889e5               MOV         RBP,RSP\n.text:00402e5c   4883ec30             SUB         RSP,0x30\n.text:00402e60   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:00402e64   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:00402e68   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:00402e6c   c645ff01             MOV         byte ptr [RBP + local_9+0x8],0x1\n.text:00402e70   c645fe01             MOV         byte ptr [RBP + local_a+0x8],0x1\n.text:00402e74   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:00402e78   488b4de0             MOV         RCX,qword ptr [RBP + local_28+0x8]\n.text:00402e7c   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402e80   4889ce               MOV         param_2,RCX\n.text:00402e83   4889c7               MOV         param_1,RAX\n.text:00402e86   e81c020000           CALL        std::__uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cint_const*,int*\u003e     ; int * __uninit_copy\u003cint_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n.text:00402e8b   c9                   LEAVE\n.text:00402e8c   c3                   RET\n",
  "__copy_move_a1\u003cfalse,int_const*,int*\u003e": "; int * __copy_move_a1\u003cfalse,int_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        int *          RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  __copy_move_a1\u003cfalse,int_const*,int*\u003e:\n.text:0040339d   55                   PUSH        RBP\n.text:0040339e   4889e5               MOV         RBP,RSP\n.text:004033a1   4883ec20             SUB         RSP,0x20\n.text:004033a5   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004033a9   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:004033ad   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:004033b1   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:004033b5   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:004033b9   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004033bd   4889ce               MOV         param_2,RCX\n.text:004033c0   4889c7               MOV         param_1,RAX\n.text:004033c3   e86f000000           CALL        std::__copy_move_a2\u003cfalse,int_const*,int*\u003e     ; int * __copy_move_a2\u003cfalse,int_const*,int*\u003e(int * param_1, int * param_2, int * param_3)\n.text:004033c8   c9                   LEAVE\n.text:004033c9   c3                   RET\n",
  "operator.delete": "; void operator.delete(void * param_1, ulong param_2)\n; Parameters:\n; param_1        void *         RDI\n; param_2        ulong          RSI\n; Stack variables:\n                                  operator.delete:\n.plt:004014d0    ff256a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::operator.delete]     ; void operator.delete(void * param_1, ulong param_2)\n.plt:004014d6    6813000000           PUSH        0x13\n.plt:004014db    e9b0feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; void operator.delete(void * param_1, ulong param_2)\n; Parameters:\n; param_1        void *         RDI\n; param_2        ulong          RSI\n; Stack variables:\n                                  ; _ZdlPvm@CXXABI_1.3.9\n                                  operator.delete:\nEXTERNAL:0040a090                      ??          ??\n",
  "eq": "; undefined __stdcall eq(char * param_1, char * param_2)\n; Parameters:\n; param_1        char *         RDI\n; param_2        char *         RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  eq:\n.text:00402517   55                   PUSH        RBP\n.text:00402518   4889e5               MOV         RBP,RSP\n.text:0040251b   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:0040251f   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402523   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402527   0fb610               MOVZX       EDX,byte ptr [RAX]\n.text:0040252a   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:0040252e   0fb600               MOVZX       EAX,byte ptr [RAX]\n.text:00402531   38c2                 CMP         DL,AL\n.text:00402533   0f94c0               SETZ        AL\n.text:00402536   5d                   POP         RBP\n.text:00402537   c3                   RET\n",
  "__static_initialization_and_destruction_0": "; undefined __stdcall __static_initialization_and_destruction_0(int param_1, int param_2)\n; Parameters:\n; param_1        int            EDI\n; param_2        int            ESI\n; Stack variables:\n; local_29       undefined1     -0x29\n; local_36d8     undefined1     -0x36d8\n; local_36dc     undefined4     -0x36dc\n; local_36e0     undefined4     -0x36e0\n                                  __static_initialization_and_destruction_0:\n.text:0040208b   55                   PUSH        RBP\n.text:0040208c   4889e5               MOV         RBP,RSP\n.text:0040208f   4155                 PUSH        R13\n.text:00402091   4154                 PUSH        R12\n.text:00402093   53                   PUSH        RBX\n.text:00402094   4881ecc8360000       SUB         RSP,0x36c8\n.text:0040209b   89bd2cc9ffff         MOV         dword ptr [RBP + local_36dc+0x8],param_1\n.text:004020a1   89b528c9ffff         MOV         dword ptr [RBP + local_36e0+0x8],param_2\n.text:004020a7   83bd2cc9ffff01       CMP         dword ptr [RBP + local_36dc+0x8],0x1\n.text:004020ae   0f85c2000000         JNZ         LAB_00402176\n.text:004020b4   81bd28c9ffffffff0000     CMP         dword ptr [RBP + local_36e0+0x8],0xffff\n.text:004020be   0f85b2000000         JNZ         LAB_00402176\n.text:004020c4   bf089e4000           MOV         param_1,std::__ioinit\n                                  LAB_004020c9:\n.text:004020c9   e892f4ffff           CALL        \u003cEXTERNAL\u003e::std::ios_base::Init::Init        ; undefined Init(Init * this)\n.text:004020ce   bae8944000           MOV         EDX,__dso_handle\n.text:004020d3   be089e4000           MOV         param_2,std::__ioinit\n.text:004020d8   bf00164000           MOV         param_1,std::ios_base::Init::~Init\n.text:004020dd   e8def4ffff           CALL        \u003cEXTERNAL\u003e::__cxa_atexit                     ; undefined __cxa_atexit()\n.text:004020e2   488d8530c9ffff       LEA         RAX\u003d\u003elocal_36d8,[RBP + -0x36d0]\n.text:004020e9   b940374000           MOV         ECX,DAT_00403740                             ; \u003d 3Ch    \u003c\n.text:004020ee   baa4360000           MOV         EDX,0x36a4\n.text:004020f3   4889ce               MOV         param_2\u003d\u003eDAT_00403740,RCX                    ; \u003d 3Ch    \u003c\n.text:004020f6   4889c7               MOV         param_1,RAX\n.text:004020f9   e842f4ffff           CALL        \u003cEXTERNAL\u003e::memcpy                           ; void * memcpy(void * __dest, void * __src, size_t __n)\n.text:004020fe   488d8530c9ffff       LEA         RAX\u003d\u003elocal_36d8,[RBP + -0x36d0]\n.text:00402105   4989c4               MOV         R12,RAX\n.text:00402108   41bda90d0000         MOV         R13D,0xda9\n.text:0040210e   488d45df             LEA         RAX\u003d\u003elocal_29,[RBP + -0x21]\n.text:00402112   4889c7               MOV         param_1,RAX\n.text:00402115   e81e010000           CALL        std::allocator\u003cint\u003e::allocator               ; undefined allocator(void)\n.text:0040211a   488d45df             LEA         RAX\u003d\u003elocal_29,[RBP + -0x21]\n.text:0040211e   4c89e6               MOV         param_2,R12\n.text:00402121   4c89ef               MOV         param_1,R13\n.text:00402124   4c89e1               MOV         RCX,R12\n.text:00402127   4c89eb               MOV         RBX,R13\n.text:0040212a   4889da               MOV         RDX,RBX\n.text:0040212d   4889c1               MOV         RCX,RAX\n.text:00402130   bff09d4000           MOV         param_1,data\n                                  ; try { // try from 00402135 to 00402139 has its CatchHandler @ 0040215c\n                                  LAB_00402135:\n.text:00402135   e836010000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::vector     ; undefined vector(initializer_list param_1, allocator * param_2)\n                                  ; } // end try from 00402135 to 00402139\n.text:0040213a   488d45df             LEA         RAX\u003d\u003elocal_29,[RBP + -0x21]\n.text:0040213e   4889c7               MOV         param_1,RAX\n.text:00402141   e80e010000           CALL        std::allocator\u003cint\u003e::~allocator              ; undefined ~allocator(allocator\u003cint\u003e * this)\n.text:00402146   bae8944000           MOV         EDX,__dso_handle\n.text:0040214b   bef09d4000           MOV         param_2,data\n.text:00402150   bf3c354000           MOV         param_1,std::vector\u003cint,std::allocator\u003cint\u003e\u003e::~vector\n.text:00402155   e866f4ffff           CALL        \u003cEXTERNAL\u003e::__cxa_atexit                     ; undefined __cxa_atexit()\n.text:0040215a   eb1a                 JMP         LAB_00402176\n                                  ; catch() { ... } // from try @ 00402135 with catch @ 0040215c\n                                  LAB_0040215c:\n.text:0040215c   4889c3               MOV         RBX,RAX\n.text:0040215f   488d45df             LEA         RAX,[RBP + -0x21]\n.text:00402163   4889c7               MOV         RDI,RAX\n.text:00402166   e8e9000000           CALL        std::allocator\u003cint\u003e::~allocator              ; undefined ~allocator(allocator\u003cint\u003e * this)\n.text:0040216b   4889d8               MOV         RAX,RBX\n.text:0040216e   4889c7               MOV         RDI,RAX\n                                  LAB_00402171:\n.text:00402171   e81af4ffff           CALL        \u003cEXTERNAL\u003e::_Unwind_Resume                   ; undefined _Unwind_Resume()\n                                  LAB_00402176:\n.text:00402176   4881c4c8360000       ADD         RSP,0x36c8\n.text:0040217d   5b                   POP         RBX\n.text:0040217e   415c                 POP         R12\n.text:00402180   415d                 POP         R13\n.text:00402182   5d                   POP         RBP\n.text:00402183   c3                   RET\n",
  "max_size": "; undefined __stdcall max_size(allocator * param_1)\n; Parameters:\n; param_1        allocator *    RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  max_size:\n.text:00403001   55                   PUSH        RBP\n.text:00403002   4889e5               MOV         RBP,RSP\n.text:00403005   4883ec10             SUB         RSP,0x10\n.text:00403009   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:0040300d   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403011   4889c7               MOV         param_1,RAX\n.text:00403014   e885010000           CALL        std::__new_allocator\u003cint\u003e::max_size          ; undefined max_size(void)\n.text:00403019   c9                   LEAVE\n.text:0040301a   c3                   RET\n; undefined __stdcall max_size(allocator * param_1)\n; Parameters:\n; param_1        allocator *    RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  max_size:\n.text:0040310d   55                   PUSH        RBP\n.text:0040310e   4889e5               MOV         RBP,RSP\n.text:00403111   4883ec10             SUB         RSP,0x10\n.text:00403115   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403119   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040311d   4889c7               MOV         param_1,RAX\n.text:00403120   e8f3000000           CALL        std::__new_allocator\u003cunsigned_char\u003e::max_size     ; undefined max_size(void)\n.text:00403125   c9                   LEAVE\n.text:00403126   c3                   RET\n; undefined max_size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  max_size:\n.text:0040319e   55                   PUSH        RBP\n.text:0040319f   4889e5               MOV         RBP,RSP\n.text:004031a2   4883ec10             SUB         RSP,0x10\n.text:004031a6   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:004031aa   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004031ae   4889c7               MOV         RDI,RAX\n.text:004031b1   e802000000           CALL        std::__new_allocator\u003cint\u003e::_M_max_size       ; undefined _M_max_size(void)\n.text:004031b6   c9                   LEAVE\n.text:004031b7   c3                   RET\n; undefined max_size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  max_size:\n.text:00403218   55                   PUSH        RBP\n.text:00403219   4889e5               MOV         RBP,RSP\n.text:0040321c   4883ec10             SUB         RSP,0x10\n.text:00403220   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00403224   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403228   4889c7               MOV         RDI,RAX\n.text:0040322b   e802000000           CALL        std::__new_allocator\u003cunsigned_char\u003e::_M_max_size     ; undefined _M_max_size(void)\n.text:00403230   c9                   LEAVE\n.text:00403231   c3                   RET\n",
  "memmove": "; void * memmove(void * __dest, void * __src, size_t __n)\n; Parameters:\n; __dest         void *         RDI\n; __src          void *         RSI\n; __n            size_t         RDX\n; Stack variables:\n                                  memmove:\n.plt:004014a0    ff25827f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::memmove]            ; void * memmove(void * __dest, void * __src, size_t __n)\n.plt:004014a6    6810000000           PUSH        0x10\n.plt:004014ab    e9e0feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; void * memmove(void * __dest, void * __src, size_t __n)\n; Parameters:\n; __dest         void *         RDI\n; __src          void *         RSI\n; __n            size_t         RDX\n; Stack variables:\n                                  ; memmove@FBSD_1.0\n                                  memmove:\nEXTERNAL:0040a078                      ??          ??\n",
  "__do_global_ctors_aux": "; undefined __do_global_ctors_aux()\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __do_global_ctors_aux:\n.text:004035e0   488b05995b0000       MOV         RAX,qword ptr [__CTOR_LIST__]                ; \u003d FFFFFFFFFFFFFFFFh\n.text:004035e7   4883f8ff             CMP         RAX,-0x1\n.text:004035eb   7433                 JZ          LAB_00403620\n.text:004035ed   55                   PUSH        RBP\n.text:004035ee   4889e5               MOV         RBP,RSP\n.text:004035f1   53                   PUSH        RBX\n.text:004035f2   488d1d875b0000       LEA         RBX,[__CTOR_LIST__]                          ; \u003d FFFFFFFFFFFFFFFFh\n.text:004035f9   4883ec08             SUB         RSP,0x8\n.text:004035fd   0f1f00               NOP         dword ptr [RAX]\n                                  LAB_00403600:\n.text:00403600   ffd0                 CALL        RAX\u003d\u003e_GLOBAL__sub_I_fail_msgs                ; undefined _GLOBAL__sub_I_fail_msgs()\n.text:00403602   488b43f8             MOV         RAX\u003d\u003e_GLOBAL__sub_I_fail_msgs,qword ptr [RBX + -0x8]\u003d\u003e-\u003e_GLOBAL__sub_I_fail_msgs     ; \u003d 00402184\n.text:00403606   4883eb08             SUB         RBX,0x8\n.text:0040360a   4883f8ff             CMP         RAX,-0x1\n.text:0040360e   75f0                 JNZ         LAB_00403600\n.text:00403610   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00403614   c9                   LEAVE\n.text:00403615   c3                   RET\n                                  LAB_00403620:\n.text:00403620   c3                   RET\n",
  "~Init": "; undefined __thiscall ~Init(void)\n; Parameters:\n; this           Init *         RDI\n; Stack variables:\n                                  ~Init:\n.plt:00401600    ff25d27e0000         JMP         qword ptr [DAT_004094d8]                     ; -\u003e ~Init\n.plt:00401606    6826000000           PUSH        0x26\n.plt:0040160b    e980fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n",
  "_Vector_impl": "; undefined __thiscall _Vector_impl(allocator * param_1)\n; Parameters:\n; this           _Vector_impl * RDI\n; param_1        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _Vector_impl:\n.text:00402a5c   55                   PUSH        RBP\n.text:00402a5d   4889e5               MOV         RBP,RSP\n.text:00402a60   4883ec10             SUB         RSP,0x10\n.text:00402a64   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402a68   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402a6c   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402a70   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402a74   4889d6               MOV         param_1,RDX\n.text:00402a77   4889c7               MOV         this,RAX\n.text:00402a7a   e8eb020000           CALL        std::allocator\u003cint\u003e::allocator               ; undefined allocator(allocator * param_1)\n.text:00402a7f   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402a83   4889c7               MOV         this,RAX\n.text:00402a86   e805030000           CALL        std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_Vector_impl_data::_Vector_impl_data     ; undefined _Vector_impl_data(_Vector_impl_data * this)\n.text:00402a8b   90                   NOP\n.text:00402a8c   c9                   LEAVE\n.text:00402a8d   c3                   RET\n; undefined __thiscall _Vector_impl(allocator * param_1)\n; Parameters:\n; this           _Vector_impl * RDI\n; param_1        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _Vector_impl:\n.text:00402bc8   55                   PUSH        RBP\n.text:00402bc9   4889e5               MOV         RBP,RSP\n.text:00402bcc   4883ec10             SUB         RSP,0x10\n.text:00402bd0   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402bd4   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402bd8   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402bdc   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402be0   4889d6               MOV         param_1,RDX\n.text:00402be3   4889c7               MOV         this,RAX\n.text:00402be6   e8a3020000           CALL        std::allocator\u003cunsigned_char\u003e::allocator     ; undefined allocator(allocator * param_1)\n.text:00402beb   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402bef   4889c7               MOV         this,RAX\n.text:00402bf2   e8bd020000           CALL        std::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_impl_data::_Vector_impl_data     ; undefined _Vector_impl_data(_Vector_impl_data * this)\n.text:00402bf7   90                   NOP\n.text:00402bf8   c9                   LEAVE\n.text:00402bf9   c3                   RET\n",
  "__gthread_trigger": "; undefined __gthread_trigger(void)\n; Parameters:\n; Stack variables:\n                                  __gthread_trigger:\n.text:00401995   55                   PUSH        RBP\n.text:00401996   4889e5               MOV         RBP,RSP\n.text:00401999   c7055d7b000001000000     MOV         dword ptr [__gthread_active],0x1             ; \u003d FFFFFFFFh\n.text:004019a3   90                   NOP\n.text:004019a4   5d                   POP         RBP\n.text:004019a5   c3                   RET\n",
  "__niter_wrap\u003cint*\u003e": "; int * __niter_wrap\u003cint*\u003e(int * * param_1, int * param_2)\n; Parameters:\n; param_1        int * *        RDI\n; param_2        int *          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __niter_wrap\u003cint*\u003e:\n.text:004033ca   55                   PUSH        RBP\n.text:004033cb   4889e5               MOV         RBP,RSP\n.text:004033ce   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004033d2   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:004033d6   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:004033da   5d                   POP         RBP\n.text:004033db   c3                   RET\n",
  "_init_tls": "; undefined _init_tls()\n; Parameters:\n; Stack variables:\n                                  _init_tls:\n.plt:00401500    ff25527f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::_init_tls]          ; undefined _init_tls()\n.plt:00401506    6816000000           PUSH        0x16\n.plt:0040150b    e980feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _init_tls()\n; Parameters:\n; Stack variables:\n                                  ; _init_tls@FBSD_1.0\n                                  _init_tls:\nEXTERNAL:0040a0a8                      ??          ??\n",
  "distance\u003cunsigned_char_const*\u003e": "; difference_type distance\u003cunsigned_char_const*\u003e(uchar * param_1, uchar * param_2)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  distance\u003cunsigned_char_const*\u003e:\n.text:00402915   55                   PUSH        RBP\n.text:00402916   4889e5               MOV         RBP,RSP\n.text:00402919   4883ec10             SUB         RSP,0x10\n.text:0040291d   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402921   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402925   488d45f8             LEA         RAX\u003d\u003elocal_10,[RBP + -0x8]\n.text:00402929   4889c7               MOV         param_1,RAX\n.text:0040292c   e811030000           CALL        std::__iterator_category\u003cunsigned_char_const*\u003e     ; iterator_category __iterator_category\u003cunsigned_char_const*\u003e(uchar * * param_1)\n.text:00402931   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402935   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402939   4889d6               MOV         param_2,RDX\n.text:0040293c   4889c7               MOV         param_1,RAX\n.text:0040293f   e809030000           CALL        std::__distance\u003cunsigned_char_const*\u003e        ; difference_type __distance\u003cunsigned_char_const*\u003e(uchar * param_1, uchar * param_2, random_access_iterator_tag param_3)\n.text:00402944   c9                   LEAVE\n.text:00402945   c3                   RET\n",
  "__throw_bad_array_new_length": "; undefined __throw_bad_array_new_length(void)\n; Parameters:\n; Stack variables:\n                                  __throw_bad_array_new_length:\n.plt:00401470    ff259a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__throw_bad_array_new_length]     ; undefined __throw_bad_array_new_length(void)\n.plt:00401476    680d000000           PUSH        0xd\n.plt:0040147b    e910ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __throw_bad_array_new_length(void)\n; Parameters:\n; Stack variables:\n                                  ; _ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29\n                                  __throw_bad_array_new_length:\nEXTERNAL:0040a060                      ??          ??\n",
  "_start": "; void _start(char * * ap, _func_void * cleanup)\n; Parameters:\n; ap             char * *       RDI\n; cleanup        _func_void *   RSI\n; Stack variables:\n; argc           int            R15D\n; env            char * *       RBX\n; argv           char * *       R14\n; r              Elf_Rela *     R13\n; cpu_feature    uint32_t       EDI\n; cpu_feature2   uint32_t       ESI\n; cpu_stdext_feature2 uint32_t       ECX\n; cpu_stdext_feature uint32_t       EBX\n; where          Elf_Addr *     R12\n; target         Elf_Addr       RAX\n; local_38       undefined8     -0x38\n                                  _start:\n.text:00401610   55                   PUSH        RBP\n.text:00401611   4889e5               MOV         RBP,RSP\n.text:00401614   4157                 PUSH        R15\n.text:00401616   4156                 PUSH        R14\n.text:00401618   4155                 PUSH        R13\n.text:0040161a   4154                 PUSH        R12\n.text:0040161c   53                   PUSH        RBX\n.text:0040161d   50                   PUSH        RAX\n.text:0040161e   4989fe               MOV         R14,ap\n.text:00401621   4c8b3f               MOV         R15,qword ptr [ap]\n.text:00401624   4963c7               MOVSXD      RAX,R15D\n.text:00401627   488d1cc7             LEA         RBX,[ap + RAX*0x8]\n.text:0040162b   4883c310             ADD         RBX,0x10\n.text:0040162f   48833d9987000000     CMP         qword ptr [environ],0x0                      ; \u003d 00000000\n.text:00401637   7507                 JNZ         LAB_00401640\n.text:00401639   48891d90870000       MOV         qword ptr [environ],env                      ; \u003d 00000000\n                                  LAB_00401640:\n.text:00401640   4983c608             ADD         R14,0x8\n.text:00401644   4585ff               TEST        argc,argc\n.text:00401647   7e2f                 JLE         LAB_00401678\n.text:00401649   498b06               MOV         RAX,qword ptr [argv]\n.text:0040164c   4885c0               TEST        RAX,RAX\n.text:0040164f   7427                 JZ          LAB_00401678\n.text:00401651   662e0f1f840000000000     NOP         word ptr CS:[RAX + RAX*0x1]\n.text:0040165b   0f1f440000           NOP         dword ptr [RAX + RAX*0x1]\n                                  LAB_00401660:\n.text:00401660   488905797e0000       MOV         qword ptr [__progname],RAX                   ; \u003d 00403640\n                                  LAB_00401667:\n.text:00401667   4883c001             ADD         RAX,0x1\n.text:0040166b   0fb648ff             MOVZX       ECX,byte ptr [RAX + -0x1]\n.text:0040166f   80f92f               CMP         CL,0x2f\n.text:00401672   74ec                 JZ          LAB_00401660\n.text:00401674   84c9                 TEST        CL,CL\n.text:00401676   75ef                 JNZ         LAB_00401667\n                                  LAB_00401678:\n.text:00401678   b8a0914000           MOV         EAX,_DYNAMIC\n.text:0040167d   4885c0               TEST        RAX,RAX\n.text:00401680   740a                 JZ          LAB_0040168c\n.text:00401682   4889f7               MOV         ap,cleanup\n.text:00401685   e896fdffff           CALL        \u003cEXTERNAL\u003e::atexit                           ; int atexit(__func * __func)\n.text:0040168a   eb68                 JMP         LAB_004016f4\n                                  LAB_0040168c:\n.text:0040168c   48895dd0             MOV         qword ptr [RBP + local_38+0x8],env\n.text:00401690   41bd78134000         MOV         R13D,_init\n.text:00401696   eb0c                 JMP         LAB_004016a4\n                                  LAB_004016a0:\n.text:004016a0   4983c518             ADD         r,0x18\n                                  LAB_004016a4:\n.text:004016a4   4981fd78134000       CMP         r,_init\n.text:004016ab   733e                 JNC         LAB_004016eb\n.text:004016ad   b801000000           MOV         EAX,0x1\n.text:004016b2   0fa2                 CPUID\n.text:004016b4   89d7                 MOV         ap,EDX\n.text:004016b6   89ce                 MOV         cleanup,ECX\n.text:004016b8   31c0                 XOR         EAX,EAX\n.text:004016ba   0fa2                 CPUID\n.text:004016bc   bb00000000           MOV         env,0x0\n.text:004016c1   b900000000           MOV         ECX,0x0\n.text:004016c6   83f807               CMP         EAX,0x7\n.text:004016c9   7209                 JC          LAB_004016d4\n.text:004016cb   31c9                 XOR         ECX,ECX\n.text:004016cd   b807000000           MOV         EAX,0x7\n.text:004016d2   0fa2                 CPUID\n                                  LAB_004016d4:\n.text:004016d4   41837d0825           CMP         dword ptr [R13 + r-\u003er_info]\u003d\u003eLAB_0040137c+4,0x25\n.text:004016d9   75c5                 JNZ         LAB_004016a0\n.text:004016db   4d8b6500             MOV         R12,qword ptr [r-\u003er_offset]\u003d\u003e_init\n.text:004016df   89da                 MOV         EDX,cpu_stdext_feature\n.text:004016e1   41ff5510             CALL        qword ptr [R13 + r-\u003er_addend]\u003d\u003eLAB_00401386+2\n.text:004016e5   49890424             MOV         qword ptr [where]\u003d\u003eDAT_60fe808ec8348,RAX\n.text:004016e9   ebb5                 JMP         LAB_004016a0\n                                  LAB_004016eb:\n.text:004016eb   e810feffff           CALL        \u003cEXTERNAL\u003e::_init_tls                        ; undefined _init_tls()\n.text:004016f0   488b5dd0             MOV         cpu_stdext_feature,qword ptr [RBP + local_38+0x8]\n                                  LAB_004016f4:\n.text:004016f4   4489ff               MOV         cpu_feature,argc\n.text:004016f7   4c89f6               MOV         cpu_feature2,argv\n.text:004016fa   4889da               MOV         RDX,cpu_stdext_feature\n.text:004016fd   e81e000000           CALL        handle_static_init                           ; void handle_static_init(int argc, char * * argv, char * * env)\n.text:00401702   4489ff               MOV         cpu_feature,argc\n.text:00401705   4c89f6               MOV         cpu_feature2,argv\n.text:00401708   4889da               MOV         RDX,cpu_stdext_feature\n.text:0040170b   e85e080000           CALL        main                                         ; undefined main()\n.text:00401710   89c7                 MOV         cpu_feature,target\n.text:00401712   e8b9feffff           CALL        \u003cEXTERNAL\u003e::exit                             ; void exit(int __status)\n.text:00401717   660f1f840000000000     NOP         word ptr [RAX + RAX*0x1]\n",
  "__copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e": "; uchar * __copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  __copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e:\n.text:004033f8   55                   PUSH        RBP\n.text:004033f9   4889e5               MOV         RBP,RSP\n.text:004033fc   4883ec20             SUB         RSP,0x20\n.text:00403400   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403404   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403408   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:0040340c   488b55e8             MOV         param_3,qword ptr [RBP + local_20+0x8]\n.text:00403410   488b4df0             MOV         RCX,qword ptr [RBP + local_18+0x8]\n.text:00403414   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00403418   4889ce               MOV         param_2,RCX\n.text:0040341b   4889c7               MOV         param_1,RAX\n.text:0040341e   e841000000           CALL        std::__copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e     ; uchar * __copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:00403423   c9                   LEAVE\n.text:00403424   c3                   RET\n",
  "_Destroy\u003cint*,int\u003e": "; void _Destroy\u003cint*,int\u003e(int * param_1, int * param_2, allocator * param_3)\n; Parameters:\n; param_1        int *          RDI\n; param_2        int *          RSI\n; param_3        allocator *    RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n                                  _Destroy\u003cint*,int\u003e:\n.text:00403580   55                   PUSH        RBP\n.text:00403581   4889e5               MOV         RBP,RSP\n.text:00403584   4883ec20             SUB         RSP,0x20\n.text:00403588   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:0040358c   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00403590   488955e8             MOV         qword ptr [RBP + local_20+0x8],param_3\n.text:00403594   488b55f0             MOV         param_3,qword ptr [RBP + local_18+0x8]\n.text:00403598   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040359c   4889d6               MOV         param_2,param_3\n.text:0040359f   4889c7               MOV         param_1,RAX\n.text:004035a2   e803000000           CALL        std::_Destroy\u003cint*\u003e                          ; void _Destroy\u003cint*\u003e(int * param_1, int * param_2)\n.text:004035a7   90                   NOP\n.text:004035a8   c9                   LEAVE\n.text:004035a9   c3                   RET\n",
  "atexit": "; int atexit(__func * __func)\n; Parameters:\n; __func         __func *       RDI\n; Stack variables:\n                                  atexit:\n.plt:00401420    ff25c27f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::atexit]             ; int atexit(__func * __func)\n.plt:00401426    6808000000           PUSH        0x8\n.plt:0040142b    e960ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; int atexit(__func * __func)\n; Parameters:\n; __func         __func *       RDI\n; Stack variables:\n                                  ; atexit@FBSD_1.0\n                                  atexit:\nEXTERNAL:0040a038                      ??          ??\n",
  "__iterator_category\u003cunsigned_char_const*\u003e": "; iterator_category __iterator_category\u003cunsigned_char_const*\u003e(uchar * * param_1)\n; Parameters:\n; param_1        uchar * *      RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __iterator_category\u003cunsigned_char_const*\u003e:\n.text:00402c42   55                   PUSH        RBP\n.text:00402c43   4889e5               MOV         RBP,RSP\n.text:00402c46   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402c4a   90                   NOP\n.text:00402c4b   5d                   POP         RBP\n.text:00402c4c   c3                   RET\n",
  "_Vector_impl_data": "; undefined __thiscall _Vector_impl_data(void)\n; Parameters:\n; this           _Vector_impl_data * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _Vector_impl_data:\n.text:00402d90   55                   PUSH        RBP\n.text:00402d91   4889e5               MOV         RBP,RSP\n.text:00402d94   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402d98   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402d9c   48c70000000000       MOV         qword ptr [RAX],0x0\n.text:00402da3   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402da7   48c7400800000000     MOV         qword ptr [RAX + 0x8],0x0\n.text:00402daf   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402db3   48c7401000000000     MOV         qword ptr [RAX + 0x10],0x0\n.text:00402dbb   90                   NOP\n.text:00402dbc   5d                   POP         RBP\n.text:00402dbd   c3                   RET\n; undefined __thiscall _Vector_impl_data(void)\n; Parameters:\n; this           _Vector_impl_data * RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _Vector_impl_data:\n.text:00402eb4   55                   PUSH        RBP\n.text:00402eb5   4889e5               MOV         RBP,RSP\n.text:00402eb8   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402ebc   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402ec0   48c70000000000       MOV         qword ptr [RAX],0x0\n.text:00402ec7   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402ecb   48c7400800000000     MOV         qword ptr [RAX + 0x8],0x0\n.text:00402ed3   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402ed7   48c7401000000000     MOV         qword ptr [RAX + 0x10],0x0\n.text:00402edf   90                   NOP\n.text:00402ee0   5d                   POP         RBP\n.text:00402ee1   c3                   RET\n",
  "allocator\u003cchar\u003e_\u003e*)": "; undefined allocator\u003cchar\u003e_\u003e*)()\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  allocator\u003cchar\u003e_\u003e*):\n.text:00402538   55                   PUSH        RBP\n.text:00402539   4889e5               MOV         RBP,RSP\n.text:0040253c   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402540   488975f0             MOV         qword ptr [RBP + local_18+0x8],RSI\n.text:00402544   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402548   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:0040254c   488910               MOV         qword ptr [RAX],RDX\n.text:0040254f   90                   NOP\n.text:00402550   5d                   POP         RBP\n.text:00402551   c3                   RET\n",
  "_Destroy\u003cunsigned_char*\u003e": "; void _Destroy\u003cunsigned_char*\u003e(uchar * param_1, uchar * param_2)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _Destroy\u003cunsigned_char*\u003e:\n.text:00402d22   55                   PUSH        RBP\n.text:00402d23   4889e5               MOV         RBP,RSP\n.text:00402d26   4883ec10             SUB         RSP,0x10\n.text:00402d2a   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402d2e   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402d32   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402d36   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402d3a   4889d6               MOV         param_2,RDX\n.text:00402d3d   4889c7               MOV         param_1,RAX\n.text:00402d40   e86c020000           CALL        std::_Destroy_aux\u003ctrue\u003e::__destroy\u003cunsigned_char*\u003e     ; void __destroy\u003cunsigned_char*\u003e(uchar * param_1, uchar * param_2)\n.text:00402d45   90                   NOP\n.text:00402d46   c9                   LEAVE\n.text:00402d47   c3                   RET\n",
  "_GLOBAL__sub_I_fail_msgs": "; undefined _GLOBAL__sub_I_fail_msgs()\n; Parameters:\n; Stack variables:\n                                  _GLOBAL__sub_I_fail_msgs:\n.text:00402184   55                   PUSH        RBP\n.text:00402185   4889e5               MOV         RBP,RSP\n.text:00402188   beffff0000           MOV         ESI,0xffff\n.text:0040218d   bf01000000           MOV         EDI,0x1\n.text:00402192   e8f4feffff           CALL        __static_initialization_and_destruction_0     ; undefined __static_initialization_and_destruction_0(int param_1, int param_2)\n.text:00402197   5d                   POP         RBP\n.text:00402198   c3                   RET\n",
  "end": "; undefined end(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n                                  end:\n.text:0040271e   55                   PUSH        RBP\n.text:0040271f   4889e5               MOV         RBP,RSP\n.text:00402722   53                   PUSH        RBX\n.text:00402723   4883ec18             SUB         RSP,0x18\n.text:00402727   48897de8             MOV         qword ptr [RBP + local_20+0x8],RDI\n.text:0040272b   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:0040272f   4889c7               MOV         RDI,RAX\n.text:00402732   e8d5ffffff           CALL        std::initializer_list\u003cint\u003e::begin            ; undefined begin(void)\n.text:00402737   4889c3               MOV         RBX,RAX\n.text:0040273a   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:0040273e   4889c7               MOV         RDI,RAX\n.text:00402741   e87e030000           CALL        std::initializer_list\u003cint\u003e::size             ; undefined size(void)\n.text:00402746   48c1e002             SHL         RAX,0x2\n.text:0040274a   4801d8               ADD         RAX,RBX\n.text:0040274d   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402751   c9                   LEAVE\n.text:00402752   c3                   RET\n; undefined end(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n                                  end:\n.text:004028e4   55                   PUSH        RBP\n.text:004028e5   4889e5               MOV         RBP,RSP\n.text:004028e8   53                   PUSH        RBX\n.text:004028e9   4883ec18             SUB         RSP,0x18\n.text:004028ed   48897de8             MOV         qword ptr [RBP + local_20+0x8],RDI\n.text:004028f1   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:004028f5   4889c7               MOV         RDI,RAX\n.text:004028f8   e8d5ffffff           CALL        std::initializer_list\u003cunsigned_char\u003e::begin     ; undefined begin(void)\n.text:004028fd   4889c3               MOV         RBX,RAX\n.text:00402900   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:00402904   4889c7               MOV         RDI,RAX\n.text:00402907   e824030000           CALL        std::initializer_list\u003cunsigned_char\u003e::size     ; undefined size(void)\n.text:0040290c   4801d8               ADD         RAX,RBX\n.text:0040290f   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402913   c9                   LEAVE\n.text:00402914   c3                   RET\n",
  "__cxa_atexit": "; undefined __cxa_atexit()\n; Parameters:\n; Stack variables:\n                                  __cxa_atexit:\n.plt:004015c0    ff25f27e0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::__cxa_atexit]       ; undefined __cxa_atexit()\n.plt:004015c6    6822000000           PUSH        0x22\n.plt:004015cb    e9c0fdffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __cxa_atexit()\n; Parameters:\n; Stack variables:\n                                  ; __cxa_atexit@FBSD_1.0\n                                  __cxa_atexit:\nEXTERNAL:0040a108                      ??          ??\n",
  "__miter_base\u003cint_const*\u003e": "; int * __miter_base\u003cint_const*\u003e(int * param_1)\n; Parameters:\n; param_1        int *          RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __miter_base\u003cint_const*\u003e:\n.text:00403291   55                   PUSH        RBP\n.text:00403292   4889e5               MOV         RBP,RSP\n.text:00403295   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403299   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040329d   5d                   POP         RBP\n.text:0040329e   c3                   RET\n",
  "_M_max_size": "; undefined _M_max_size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _M_max_size:\n.text:004031b8   55                   PUSH        RBP\n.text:004031b9   4889e5               MOV         RBP,RSP\n.text:004031bc   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:004031c0   48b8ffffffffffffff1f     MOV         RAX,0x1fffffffffffffff\n.text:004031ca   5d                   POP         RBP\n.text:004031cb   c3                   RET\n; undefined _M_max_size(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _M_max_size:\n.text:00403232   55                   PUSH        RBP\n.text:00403233   4889e5               MOV         RBP,RSP\n.text:00403236   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:0040323a   48b8ffffffffffffff7f     MOV         RAX,0x7fffffffffffffff\n.text:00403244   5d                   POP         RBP\n.text:00403245   c3                   RET\n",
  "_S_copy_chars": "; undefined _S_copy_chars(char * param_1, char * param_2, char * param_3)\n; Parameters:\n; param_1        char *         RDI\n; param_2        char *         RSI\n; param_3        char *         RDX\n; Stack variables:\n                                  _S_copy_chars:\n.plt:00401530    ff253a7f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_S_copy_chars]     ; undefined _S_copy_chars(char * param_1, char * param_2, char * param_3)\n.plt:00401536    6819000000           PUSH        0x19\n.plt:0040153b    e950feffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined _S_copy_chars(char * param_1, char * param_2, char * param_3)\n; Parameters:\n; param_1        char *         RDI\n; param_2        char *         RSI\n; param_3        char *         RDX\n; Stack variables:\n                                  ; _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21\n                                  _S_copy_chars:\nEXTERNAL:0040a0c0                      ??          ??\n",
  "register_tm_clones": "; undefined register_tm_clones()\n; Parameters:\n; Stack variables:\n                                  register_tm_clones:\n.text:004018d0   488d3dc9830000       LEA         RDI,[__TMC_END__]\n.text:004018d7   488d35c2830000       LEA         RSI,[__TMC_END__]\n.text:004018de   4829fe               SUB         RSI,RDI\n.text:004018e1   4889f0               MOV         RAX,RSI\n.text:004018e4   48c1ee3f             SHR         RSI,0x3f\n.text:004018e8   48c1f803             SAR         RAX,0x3\n.text:004018ec   4801c6               ADD         RSI,RAX\n.text:004018ef   48d1fe               SAR         RSI,0x1\n.text:004018f2   7414                 JZ          LAB_00401908\n.text:004018f4   488b058d7a0000       MOV         RAX\u003d\u003e\u003cEXTERNAL\u003e::_ITM_registerTMCloneTable,qword ptr [-\u003e\u003cEXTERNAL\u003e::_ITM_registerTMCloneTable]     ; \u003d ??, \u003d 0040a110\n.text:004018fb   4885c0               TEST        RAX,RAX\n.text:004018fe   7408                 JZ          LAB_00401908\n.text:00401900   ffe0                 JMP         RAX\u003d\u003e\u003cEXTERNAL\u003e::_ITM_registerTMCloneTable     ; undefined _ITM_registerTMCloneTable()\n                                  LAB_00401908:\n.text:00401908   c3                   RET\n",
  "__throw_length_error": "; undefined __throw_length_error(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n                                  __throw_length_error:\n.plt:00401400    ff25d27f0000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::std::__throw_length_error]     ; undefined __throw_length_error(char * param_1)\n.plt:00401406    6806000000           PUSH        0x6\n.plt:0040140b    e980ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; undefined __throw_length_error(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n                                  ; _ZSt20__throw_length_errorPKc@GLIBCXX_3.4\n                                  __throw_length_error:\nEXTERNAL:0040a028                      ??          ??\n",
  "__niter_base\u003cint_const*\u003e": "; int * __niter_base\u003cint_const*\u003e(int * param_1)\n; Parameters:\n; param_1        int *          RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  __niter_base\u003cint_const*\u003e:\n.text:00403381   55                   PUSH        RBP\n.text:00403382   4889e5               MOV         RBP,RSP\n.text:00403385   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00403389   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040338d   5d                   POP         RBP\n.text:0040338e   c3                   RET\n",
  "length": "; undefined __stdcall length(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  length:\n.text:004021a4   55                   PUSH        RBP\n.text:004021a5   4889e5               MOV         RBP,RSP\n.text:004021a8   4883ec10             SUB         RSP,0x10\n.text:004021ac   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:004021b0   e8e4ffffff           CALL        std::__is_constant_evaluated                 ; undefined __is_constant_evaluated(void)\n.text:004021b5   84c0                 TEST        AL,AL\n.text:004021b7   740e                 JZ          LAB_004021c7\n.text:004021b9   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004021bd   4889c7               MOV         param_1,RAX\n.text:004021c0   e811000000           CALL        __gnu_cxx::char_traits\u003cchar\u003e::length         ; undefined length(char * param_1)\n.text:004021c5   eb0d                 JMP         LAB_004021d4\n                                  LAB_004021c7:\n.text:004021c7   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004021cb   4889c7               MOV         param_1,RAX\n.text:004021ce   e8edf1ffff           CALL        \u003cEXTERNAL\u003e::strlen                           ; size_t strlen(char * __s)\n.text:004021d3   90                   NOP\n                                  LAB_004021d4:\n.text:004021d4   c9                   LEAVE\n.text:004021d5   c3                   RET\n; undefined __stdcall length(char * param_1)\n; Parameters:\n; param_1        char *         RDI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_11       undefined1     -0x11\n; local_20       undefined8     -0x20\n                                  length:\n.text:004021d6   55                   PUSH        RBP\n.text:004021d7   4889e5               MOV         RBP,RSP\n.text:004021da   4883ec20             SUB         RSP,0x20\n.text:004021de   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:004021e2   48c745f800000000     MOV         qword ptr [RBP + local_10+0x8],0x0\n.text:004021ea   eb05                 JMP         LAB_004021f1\n                                  LAB_004021ec:\n.text:004021ec   488345f801           ADD         qword ptr [RBP + local_10+0x8],0x1\n                                  LAB_004021f1:\n.text:004021f1   c645f700             MOV         byte ptr [RBP + local_11+0x8],0x0\n.text:004021f5   488b55e8             MOV         RDX,qword ptr [RBP + local_20+0x8]\n.text:004021f9   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004021fd   4801c2               ADD         RDX,RAX\n.text:00402200   488d45f7             LEA         RAX\u003d\u003elocal_11,[RBP + -0x9]\n.text:00402204   4889c6               MOV         RSI,RAX\n.text:00402207   4889d7               MOV         param_1,RDX\n.text:0040220a   e808030000           CALL        __gnu_cxx::char_traits\u003cchar\u003e::eq             ; undefined eq(char * param_1, char * param_2)\n.text:0040220f   83f001               XOR         EAX,0x1\n.text:00402212   84c0                 TEST        AL,AL\n.text:00402214   75d6                 JNZ         LAB_004021ec\n.text:00402216   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:0040221a   c9                   LEAVE\n.text:0040221b   c3                   RET\n",
  "__distance\u003cunsigned_char_const*\u003e": "; difference_type __distance\u003cunsigned_char_const*\u003e(uchar * param_1, uchar * param_2, random_access_iterator_tag param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        random_access_iterator_tag EDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  __distance\u003cunsigned_char_const*\u003e:\n.text:00402c4d   55                   PUSH        RBP\n.text:00402c4e   4889e5               MOV         RBP,RSP\n.text:00402c51   48897df8             MOV         qword ptr [RBP + local_10+0x8],param_1\n.text:00402c55   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_2\n.text:00402c59   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:00402c5d   482b45f8             SUB         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402c61   5d                   POP         RBP\n.text:00402c62   c3                   RET\n",
  "_S_check_init_len": "; undefined __stdcall _S_check_init_len(ulong param_1, allocator * param_2)\n; Parameters:\n; param_1        ulong          RDI\n; param_2        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_19       undefined1     -0x19\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n                                  _S_check_init_len:\n.text:00402afb   55                   PUSH        RBP\n.text:00402afc   4889e5               MOV         RBP,RSP\n.text:00402aff   53                   PUSH        RBX\n.text:00402b00   4883ec28             SUB         RSP,0x28\n.text:00402b04   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:00402b08   488975d0             MOV         qword ptr [RBP + local_38+0x8],param_2\n.text:00402b0c   488b55d0             MOV         RDX,qword ptr [RBP + local_38+0x8]\n.text:00402b10   488d45ef             LEA         RAX\u003d\u003elocal_19,[RBP + -0x11]\n.text:00402b14   4889d6               MOV         param_2,RDX\n.text:00402b17   4889c7               MOV         param_1,RAX\n.text:00402b1a   e84b020000           CALL        std::allocator\u003cint\u003e::allocator               ; undefined allocator(allocator * param_1)\n.text:00402b1f   488d45ef             LEA         RAX\u003d\u003elocal_19,[RBP + -0x11]\n.text:00402b23   4889c7               MOV         param_1,RAX\n.text:00402b26   e8c1020000           CALL        std::vector\u003cint,std::allocator\u003cint\u003e\u003e::_S_max_size     ; undefined _S_max_size(allocator * param_1)\n.text:00402b2b   483b45d8             CMP         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402b2f   0f92c3               SETC        BL\n.text:00402b32   488d45ef             LEA         RAX\u003d\u003elocal_19,[RBP + -0x11]\n.text:00402b36   4889c7               MOV         param_1,RAX\n.text:00402b39   e816f7ffff           CALL        std::allocator\u003cint\u003e::~allocator              ; undefined ~allocator(allocator\u003cint\u003e * this)\n.text:00402b3e   84db                 TEST        BL,BL\n.text:00402b40   740a                 JZ          LAB_00402b4c\n.text:00402b42   bf08374000           MOV         param_1,s_cannot_create_std::vector_larger_00403708     ; \u003d \"cannot create std::vector larger than max_size()\"\n.text:00402b47   e8b4e8ffff           CALL        \u003cEXTERNAL\u003e::std::__throw_length_error        ; undefined __throw_length_error(char * param_1)\n                                  LAB_00402b4c:\n.text:00402b4c   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402b50   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402b54   c9                   LEAVE\n.text:00402b55   c3                   RET\n; undefined __stdcall _S_check_init_len(ulong param_1, allocator * param_2)\n; Parameters:\n; param_1        ulong          RDI\n; param_2        allocator *    RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_19       undefined1     -0x19\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n                                  _S_check_init_len:\n.text:00402c63   55                   PUSH        RBP\n.text:00402c64   4889e5               MOV         RBP,RSP\n.text:00402c67   53                   PUSH        RBX\n.text:00402c68   4883ec28             SUB         RSP,0x28\n.text:00402c6c   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:00402c70   488975d0             MOV         qword ptr [RBP + local_38+0x8],param_2\n.text:00402c74   488b55d0             MOV         RDX,qword ptr [RBP + local_38+0x8]\n.text:00402c78   488d45ef             LEA         RAX\u003d\u003elocal_19,[RBP + -0x11]\n.text:00402c7c   4889d6               MOV         param_2,RDX\n.text:00402c7f   4889c7               MOV         param_1,RAX\n.text:00402c82   e807020000           CALL        std::allocator\u003cunsigned_char\u003e::allocator     ; undefined allocator(allocator * param_1)\n.text:00402c87   488d45ef             LEA         RAX\u003d\u003elocal_19,[RBP + -0x11]\n.text:00402c8b   4889c7               MOV         param_1,RAX\n.text:00402c8e   e87d020000           CALL        std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_S_max_size     ; undefined _S_max_size(allocator * param_1)\n.text:00402c93   483b45d8             CMP         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402c97   0f92c3               SETC        BL\n.text:00402c9a   488d45ef             LEA         RAX\u003d\u003elocal_19,[RBP + -0x11]\n.text:00402c9e   4889c7               MOV         param_1,RAX\n.text:00402ca1   e86ef6ffff           CALL        std::allocator\u003cunsigned_char\u003e::~allocator     ; undefined ~allocator(allocator\u003cunsigned_char\u003e * this)\n.text:00402ca6   84db                 TEST        BL,BL\n.text:00402ca8   740a                 JZ          LAB_00402cb4\n.text:00402caa   bf08374000           MOV         param_1,s_cannot_create_std::vector_larger_00403708     ; \u003d \"cannot create std::vector larger than max_size()\"\n.text:00402caf   e84ce7ffff           CALL        \u003cEXTERNAL\u003e::std::__throw_length_error        ; undefined __throw_length_error(char * param_1)\n                                  LAB_00402cb4:\n.text:00402cb4   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:00402cb8   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:00402cbc   c9                   LEAVE\n.text:00402cbd   c3                   RET\n",
  "_M_allocate": "; undefined __thiscall _M_allocate(ulong param_1)\n; Parameters:\n; this           _Vector_base\u003cint,std::allocator\u003cint\u003e\u003e * RDI\n; param_1        ulong          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _M_allocate:\n.text:00402b64   55                   PUSH        RBP\n.text:00402b65   4889e5               MOV         RBP,RSP\n.text:00402b68   4883ec10             SUB         RSP,0x10\n.text:00402b6c   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402b70   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402b74   48837df000           CMP         qword ptr [RBP + local_18+0x8],0x0\n.text:00402b79   7415                 JZ          LAB_00402b90\n.text:00402b7b   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402b7f   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402b83   4889d6               MOV         param_1,RDX\n.text:00402b86   4889c7               MOV         this,RAX\n.text:00402b89   e8a0020000           CALL        std::allocator_traits\u003cstd::allocator\u003cint\u003e\u003e::allocate     ; undefined allocate(allocator * param_1, ulong param_2)\n.text:00402b8e   eb05                 JMP         LAB_00402b95\n                                  LAB_00402b90:\n.text:00402b90   b800000000           MOV         EAX,0x0\n                                  LAB_00402b95:\n.text:00402b95   c9                   LEAVE\n.text:00402b96   c3                   RET\n; undefined __thiscall _M_allocate(ulong param_1)\n; Parameters:\n; this           _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e * RDI\n; param_1        ulong          RSI\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n                                  _M_allocate:\n.text:00402cbe   55                   PUSH        RBP\n.text:00402cbf   4889e5               MOV         RBP,RSP\n.text:00402cc2   4883ec10             SUB         RSP,0x10\n.text:00402cc6   48897df8             MOV         qword ptr [RBP + local_10+0x8],this\n.text:00402cca   488975f0             MOV         qword ptr [RBP + local_18+0x8],param_1\n.text:00402cce   48837df000           CMP         qword ptr [RBP + local_18+0x8],0x0\n.text:00402cd3   7415                 JZ          LAB_00402cea\n.text:00402cd5   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402cd9   488b55f0             MOV         RDX,qword ptr [RBP + local_18+0x8]\n.text:00402cdd   4889d6               MOV         param_1,RDX\n.text:00402ce0   4889c7               MOV         this,RAX\n.text:00402ce3   e86a020000           CALL        std::allocator_traits\u003cstd::allocator\u003cunsigned_char\u003e\u003e::allocate     ; undefined allocate(allocator * param_1, ulong param_2)\n.text:00402ce8   eb05                 JMP         LAB_00402cef\n                                  LAB_00402cea:\n.text:00402cea   b800000000           MOV         EAX,0x0\n                                  LAB_00402cef:\n.text:00402cef   c9                   LEAVE\n.text:00402cf0   c3                   RET\n",
  "copy\u003cunsigned_char_const*,unsigned_char*\u003e": "; uchar * copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n; Parameters:\n; param_1        uchar *        RDI\n; param_2        uchar *        RSI\n; param_3        uchar *        RDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_20       undefined8     -0x20\n; local_28       undefined8     -0x28\n; local_30       undefined8     -0x30\n                                  copy\u003cunsigned_char_const*,unsigned_char*\u003e:\n.text:00403246   55                   PUSH        RBP\n.text:00403247   4889e5               MOV         RBP,RSP\n.text:0040324a   53                   PUSH        RBX\n.text:0040324b   4883ec28             SUB         RSP,0x28\n.text:0040324f   48897de8             MOV         qword ptr [RBP + local_20+0x8],param_1\n.text:00403253   488975e0             MOV         qword ptr [RBP + local_28+0x8],param_2\n.text:00403257   488955d8             MOV         qword ptr [RBP + local_30+0x8],param_3\n.text:0040325b   488b45e0             MOV         RAX,qword ptr [RBP + local_28+0x8]\n.text:0040325f   4889c7               MOV         param_1,RAX\n.text:00403262   e8a2000000           CALL        std::__miter_base\u003cunsigned_char_const*\u003e      ; uchar * __miter_base\u003cunsigned_char_const*\u003e(uchar * param_1)\n.text:00403267   4889c3               MOV         RBX,RAX\n.text:0040326a   488b45e8             MOV         RAX,qword ptr [RBP + local_20+0x8]\n.text:0040326e   4889c7               MOV         param_1,RAX\n.text:00403271   e893000000           CALL        std::__miter_base\u003cunsigned_char_const*\u003e      ; uchar * __miter_base\u003cunsigned_char_const*\u003e(uchar * param_1)\n.text:00403276   4889c1               MOV         RCX,RAX\n.text:00403279   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:0040327d   4889c2               MOV         param_3,RAX\n.text:00403280   4889de               MOV         param_2,RBX\n.text:00403283   4889cf               MOV         param_1,RCX\n.text:00403286   e88c000000           CALL        std::__copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e     ; uchar * __copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(uchar * param_1, uchar * param_2, uchar * param_3)\n.text:0040328b   488b5df8             MOV         RBX,qword ptr [RBP + local_10+0x8]\n.text:0040328f   c9                   LEAVE\n.text:00403290   c3                   RET\n",
  "_M_get_Tp_allocator": "; undefined _M_get_Tp_allocator(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _M_get_Tp_allocator:\n.text:004029f2   55                   PUSH        RBP\n.text:004029f3   4889e5               MOV         RBP,RSP\n.text:004029f6   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:004029fa   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004029fe   5d                   POP         RBP\n.text:004029ff   c3                   RET\n; undefined _M_get_Tp_allocator(void)\n; Parameters:\n; Stack variables:\n; local_10       undefined8     -0x10\n                                  _M_get_Tp_allocator:\n.text:00402b56   55                   PUSH        RBP\n.text:00402b57   4889e5               MOV         RBP,RSP\n.text:00402b5a   48897df8             MOV         qword ptr [RBP + local_10+0x8],RDI\n.text:00402b5e   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:00402b62   5d                   POP         RBP\n.text:00402b63   c3                   RET\n",
  "__do_global_dtors_aux": "; undefined __do_global_dtors_aux()\n; Parameters:\n; Stack variables:\n                                  __do_global_dtors_aux:\n.text:00401910   803dc184000000       CMP         byte ptr [completed.1],0x0\n.text:00401917   7567                 JNZ         LAB_00401980\n.text:00401919   55                   PUSH        RBP\n.text:0040191a   488d056f780000       LEA         RAX,[__DTOR_LIST__]                          ; \u003d FFh\n.text:00401921   4889e5               MOV         RBP,RSP\n.text:00401924   4154                 PUSH        R12\n.text:00401926   4989c4               MOV         R12,RAX\n.text:00401929   53                   PUSH        RBX\n.text:0040192a   488d1d67780000       LEA         RBX,[__DTOR_END__]\n.text:00401931   4829c3               SUB         RBX,RAX\n.text:00401934   488b05a5840000       MOV         RAX,qword ptr [dtor_idx.0]\n.text:0040193b   48c1fb03             SAR         RBX,0x3\n.text:0040193f   4883eb01             SUB         RBX,0x1\n.text:00401943   4839d8               CMP         RAX,RBX\n.text:00401946   7323                 JNC         LAB_0040196b\n.text:00401948   0f1f840000000000     NOP         dword ptr [RAX + RAX*0x1]\n                                  LAB_00401950:\n.text:00401950   4883c001             ADD         RAX,0x1\n.text:00401954   48890585840000       MOV         qword ptr [dtor_idx.0],RAX\n.text:0040195b   41ff14c4             CALL        qword ptr [R12 + RAX*0x8]\n.text:0040195f   488b057a840000       MOV         RAX,qword ptr [dtor_idx.0]\n.text:00401966   4839d8               CMP         RAX,RBX\n.text:00401969   72e5                 JC          LAB_00401950\n                                  LAB_0040196b:\n.text:0040196b   e830ffffff           CALL        deregister_tm_clones                         ; undefined deregister_tm_clones()\n.text:00401970   5b                   POP         RBX\n.text:00401971   415c                 POP         R12\n.text:00401973   c6055e84000001       MOV         byte ptr [completed.1],0x1\n.text:0040197a   5d                   POP         RBP\n.text:0040197b   c3                   RET\n                                  LAB_00401980:\n.text:00401980   c3                   RET\n",
  "_M_construct\u003cchar_const*\u003e": "; void __stdcall _M_construct\u003cchar_const*\u003e(char * param_1, char * param_2, forward_iterator_tag param_3)\n; Parameters:\n; param_1        char *         RDI\n; param_2        char *         RSI\n; param_3        forward_iterator_tag EDX\n; Stack variables:\n; local_10       undefined8     -0x10\n; local_18       undefined8     -0x18\n; local_20       undefined8     -0x20\n; local_30       undefined8     -0x30\n; local_38       undefined8     -0x38\n; local_40       undefined8     -0x40\n                                  _M_construct\u003cchar_const*\u003e:\n.text:0040257c   55                   PUSH        RBP\n.text:0040257d   4889e5               MOV         RBP,RSP\n.text:00402580   4883ec40             SUB         RSP,0x40\n.text:00402584   48897dd8             MOV         qword ptr [RBP + local_30+0x8],param_1\n.text:00402588   488975d0             MOV         qword ptr [RBP + local_38+0x8],param_2\n.text:0040258c   488955c8             MOV         qword ptr [RBP + local_40+0x8],param_3\n.text:00402590   488b55c8             MOV         param_3,qword ptr [RBP + local_40+0x8]\n.text:00402594   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:00402598   4889d6               MOV         param_2,param_3\n.text:0040259b   4889c7               MOV         param_1,RAX\n.text:0040259e   e887040000           CALL        std::distance\u003cchar_const*\u003e                   ; difference_type distance\u003cchar_const*\u003e(char * param_1, char * param_2)\n.text:004025a3   488945f0             MOV         qword ptr [RBP + local_18+0x8],RAX\n.text:004025a7   488b45f0             MOV         RAX,qword ptr [RBP + local_18+0x8]\n.text:004025ab   4883f80f             CMP         RAX,0xf\n.text:004025af   763f                 JBE         LAB_004025f0\n.text:004025b1   488d4df0             LEA         RCX\u003d\u003elocal_18,[RBP + -0x10]\n.text:004025b5   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004025b9   ba00000000           MOV         param_3,0x0\n.text:004025be   4889ce               MOV         param_2,RCX\n.text:004025c1   4889c7               MOV         param_1,RAX\n.text:004025c4   e8e7efffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_create     ; undefined _M_create(ulong * param_1, ulong param_2)\n.text:004025c9   4889c2               MOV         param_3,RAX\n.text:004025cc   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004025d0   4889d6               MOV         param_2,param_3\n.text:004025d3   4889c7               MOV         param_1,RAX\n.text:004025d6   e8b5eeffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_data     ; undefined _M_data(char * param_1)\n.text:004025db   488b55f0             MOV         param_3,qword ptr [RBP + local_18+0x8]\n.text:004025df   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004025e3   4889d6               MOV         param_2,param_3\n.text:004025e6   4889c7               MOV         param_1,RAX\n.text:004025e9   e8f2efffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_capacity     ; undefined _M_capacity(ulong param_1)\n.text:004025ee   eb15                 JMP         LAB_00402605\n                                  LAB_004025f0:\n.text:004025f0   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:004025f4   488945f8             MOV         qword ptr [RBP + local_10+0x8],RAX\n.text:004025f8   488b45f8             MOV         RAX,qword ptr [RBP + local_10+0x8]\n.text:004025fc   4889c7               MOV         param_1,RAX\n.text:004025ff   e87ceeffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_local_data     ; undefined _M_local_data(void)\n.text:00402604   90                   NOP\n                                  LAB_00402605:\n.text:00402605   488b55d8             MOV         param_3,qword ptr [RBP + local_30+0x8]\n.text:00402609   488d45e8             LEA         RAX\u003d\u003elocal_20,[RBP + -0x18]\n.text:0040260d   4889d6               MOV         param_2,param_3\n.text:00402610   4889c7               MOV         param_1,RAX\n.text:00402613   e820ffffff           CALL        std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_construct\u003cchar_const*\u003e(char_const*,char_const*,std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e_\u003e*)     ; undefined allocator\u003cchar\u003e_\u003e*)()\n.text:00402618   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:0040261c   4889c7               MOV         param_1,RAX\n.text:0040261f   e8fceeffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_data     ; undefined _M_data(void)\n.text:00402624   4889c1               MOV         RCX,RAX\n.text:00402627   488b55c8             MOV         param_3,qword ptr [RBP + local_40+0x8]\n.text:0040262b   488b45d0             MOV         RAX,qword ptr [RBP + local_38+0x8]\n.text:0040262f   4889c6               MOV         param_2,RAX\n.text:00402632   4889cf               MOV         param_1,RCX\n.text:00402635   e8f6eeffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_S_copy_chars     ; undefined _S_copy_chars(char * param_1, char * param_2, char * param_3)\n.text:0040263a   48c745e800000000     MOV         qword ptr [RBP + local_20+0x8],0x0\n.text:00402642   488b55f0             MOV         param_3,qword ptr [RBP + local_18+0x8]\n.text:00402646   488b45d8             MOV         RAX,qword ptr [RBP + local_30+0x8]\n.text:0040264a   4889d6               MOV         param_2,param_3\n.text:0040264d   4889c7               MOV         param_1,RAX\n.text:00402650   e8dbedffff           CALL        \u003cEXTERNAL\u003e::std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_set_length     ; undefined _M_set_length(ulong param_1)\n.text:00402655   488d45e8             LEA         RAX\u003d\u003elocal_20,[RBP + -0x18]\n.text:00402659   4889c7               MOV         param_1,RAX\n.text:0040265c   e8f1feffff           CALL        std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_construct\u003cchar_const*\u003e(char_const*,char_const*,std::forward_iterator_tag)::_Guard::~_Guard     ; undefined ~_Guard(_Guard * this)\n.text:00402661   c9                   LEAVE\n.text:00402662   c3                   RET\n",
  "_fini": "; undefined _fini()\n; Parameters:\n; Stack variables:\n                                  _fini:\n.fini:00403624   4883ec08             SUB         RSP,0x8                                      ; crti.S:23\n.fini:00403628   e8e3e2ffff           CALL        __do_global_dtors_aux                        ; undefined __do_global_dtors_aux()\n.fini:0040362d   4883c408             ADD         RSP,0x8\n.fini:00403631   c3                   RET\n",
  "time": "; time_t time(time_t * __timer)\n; Parameters:\n; __timer        time_t *       RDI\n; Stack variables:\n                                  time:\n.plt:004013a0    ff2502800000         JMP         qword ptr [-\u003e\u003cEXTERNAL\u003e::time]               ; time_t time(time_t * __timer)\n.plt:004013a6    6800000000           PUSH        0x0\n.plt:004013ab    e9e0ffffff           JMP         FUN_00401390                                 ; undefined FUN_00401390()\n; time_t time(time_t * __timer)\n; Parameters:\n; __timer        time_t *       RDI\n; Stack variables:\n                                  ; time@FBSD_1.0\n                                  time:\nEXTERNAL:0040a000                      ??          ??\n"
}