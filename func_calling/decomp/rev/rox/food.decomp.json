{
  "_M_set_length": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_set_length\n               (ulong param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "min\u003cunsigned_long\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned long const\u0026 std::min\u003cunsigned long\u003e(unsigned long const\u0026, unsigned long const\u0026) */\n\nulong * std::min\u003cunsigned_long\u003e(ulong *param_1,ulong *param_2)\n\n{\n  if (*param_2 \u003c *param_1) {\n    param_1 \u003d param_2;\n  }\n  return param_1;\n}\n\n",
  "deallocate": "\n/* std::__new_allocator\u003cunsigned char\u003e::deallocate(unsigned char*, unsigned long) */\n\nvoid __thiscall\nstd::__new_allocator\u003cunsigned_char\u003e::deallocate\n          (__new_allocator\u003cunsigned_char\u003e *this,uchar *param_1,ulong param_2)\n\n{\n  operator_delete(param_1,param_2);\n  return;\n}\n\n",
  "__miter_base\u003cunsigned_char_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char const* std::__miter_base\u003cunsigned char const*\u003e(unsigned char const*) */\n\nuchar * std::__miter_base\u003cunsigned_char_const*\u003e(uchar *param_1)\n\n{\n  return param_1;\n}\n\n",
  "~_Guard": "\n/* ~_Guard() */\n\nvoid __thiscall\nstd::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n_M_construct\u003cchar_const*\u003e(char_const*,char_const*,std::forward_iterator_tag)::_Guard::~_Guard\n          (_Guard *this)\n\n{\n  if (*(long *)this !\u003d 0) {\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_dispose();\n  }\n  return;\n}\n\n",
  "__niter_base\u003cunsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::__niter_base\u003cunsigned char*\u003e(unsigned char*) */\n\nuchar * std::__niter_base\u003cunsigned_char*\u003e(uchar *param_1)\n\n{\n  return param_1;\n}\n\n",
  "__distance\u003cint_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cint const*\u003e::difference_type std::__distance\u003cint const*\u003e(int const*, int\n   const*, std::random_access_iterator_tag) */\n\ndifference_type\nstd::__distance\u003cint_const*\u003e(int *param_1,int *param_2,random_access_iterator_tag param_3)\n\n{\n  return (difference_type)((long)param_2 - (long)param_1 \u003e\u003e 2);\n}\n\n",
  "rand": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rand(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* rand@FBSD_1.6 */\n  halt_baddata();\n}\n\n",
  "__gxx_personality_v0": "\n/* WARNING: Switch with 1 destination removed at 0x00401580 */\n\nvoid __gxx_personality_v0(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
  "Init": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __thiscall std::ios_base::Init::Init(Init *this)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "allocator": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::allocator\u003cchar\u003e::allocator(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSaIcEC1Ev@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "__iterator_category\u003cchar_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cchar const*\u003e::iterator_category std::__iterator_category\u003cchar const*\u003e(char\n   const* const\u0026) */\n\niterator_category std::__iterator_category\u003cchar_const*\u003e(char **param_1)\n\n{\n  iterator_category in_EAX;\n  \n  return in_EAX;\n}\n\n",
  "frame_dummy": "\n/* WARNING: Removing unreachable block (ram,0x004018f4) */\n/* WARNING: Removing unreachable block (ram,0x00401900) */\n\nvoid frame_dummy(void)\n\n{\n  return;\n}\n\n",
  "_Unwind_Resume": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _Unwind_Resume(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _Unwind_Resume@GCC_3.0 */\n  halt_baddata();\n}\n\n",
  "_ITM_registerTMCloneTable": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
  "finalizer": "\n/* WARNING: Removing unreachable block (ram,0x0040185d) */\n/* WARNING: Removing unreachable block (ram,0x00401872) */\n/* WARNING: Removing unreachable block (ram,0x00401885) */\n/* WARNING: Removing unreachable block (ram,0x00401897) */\n/* WARNING: Removing unreachable block (ram,0x00401880) */\n/* WARNING: Unknown calling convention */\n\nvoid finalizer(void)\n\n{\n  _func_void *fn;\n  size_t n;\n  \n  _fini();\n  return;\n}\n\n",
  "__uninit_copy\u003cint_const*,int*\u003e": "\n/* int* std::__uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cint const*, int*\u003e(int const*, int const*,\n   int*) */\n\nint * std::__uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cint_const*,int*\u003e\n                (int *param_1,int *param_2,int *param_3)\n\n{\n  int *piVar1;\n  \n  piVar1 \u003d copy\u003cint_const*,int*\u003e(param_1,param_2,param_3);\n  return piVar1;\n}\n\n",
  "__copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::__copy_move_a\u003cfalse, unsigned char const*, unsigned char*\u003e(unsigned char\n   const*, unsigned char const*, unsigned char*) */\n\nuchar * std::__copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  uchar *puVar1;\n  uchar *puVar2;\n  uchar *puVar3;\n  uchar *local_30;\n  uchar *local_28;\n  uchar *local_20;\n  \n  local_30 \u003d param_3;\n  local_28 \u003d param_2;\n  local_20 \u003d param_1;\n  puVar1 \u003d __niter_base\u003cunsigned_char*\u003e(param_3);\n  puVar2 \u003d __niter_base\u003cunsigned_char_const*\u003e(local_28);\n  puVar3 \u003d __niter_base\u003cunsigned_char_const*\u003e(local_20);\n  puVar1 \u003d __copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(puVar3,puVar2,puVar1);\n  puVar1 \u003d __niter_wrap\u003cunsigned_char*\u003e(\u0026local_30,puVar1);\n  return puVar1;\n}\n\n",
  "~vector": "\n/* std::vector\u003cint, std::allocator\u003cint\u003e \u003e::~vector() */\n\nvoid __thiscall std::vector\u003cint,std::allocator\u003cint\u003e\u003e::~vector(vector\u003cint,std::allocator\u003cint\u003e\u003e *this)\n\n{\n  allocator *paVar1;\n  \n  paVar1 \u003d (allocator *)_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator();\n  _Destroy\u003cint*,int\u003e(*(int **)this,*(int **)(this + 8),paVar1);\n  _Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::~_Vector_base\n            ((_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e *)this);\n  return;\n}\n\n",
  "__is_constant_evaluated": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::__is_constant_evaluated() */\n\nundefined8 std::__is_constant_evaluated(void)\n\n{\n  return 0;\n}\n\n",
  "__destroy\u003cint*\u003e": "\n/* void std::_Destroy_aux\u003ctrue\u003e::__destroy\u003cint*\u003e(int*, int*) */\n\nvoid std::_Destroy_aux\u003ctrue\u003e::__destroy\u003cint*\u003e(int *param_1,int *param_2)\n\n{\n  return;\n}\n\n",
  "exit": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "size": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "allocate": "\n/* std::__new_allocator\u003cunsigned char\u003e::allocate(unsigned long, void const*) */\n\nvoid std::__new_allocator\u003cunsigned_char\u003e::allocate(ulong param_1,void *param_2)\n\n{\n  void *pvVar1;\n  \n  pvVar1 \u003d (void *)_M_max_size();\n  if (pvVar1 \u003c param_2) {\n    std::__throw_bad_alloc();\n  }\n  operator_new((ulong)param_2);\n  return;\n}\n\n",
  "FUN_00401390": "\nvoid FUN_00401390(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_004093a0)();\n  return;\n}\n\n",
  "__copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::__copy_move_a2\u003cfalse, unsigned char const*, unsigned char*\u003e(unsigned char\n   const*, unsigned char const*, unsigned char*) */\n\nuchar * std::__copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  uchar *puVar1;\n  \n  puVar1 \u003d __copy_move\u003cfalse,true,std::random_access_iterator_tag\u003e::__copy_m\u003cunsigned_char\u003e\n                     (param_1,param_2,param_3);\n  return puVar1;\n}\n\n",
  "__throw_bad_alloc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__throw_bad_alloc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZSt17__throw_bad_allocv@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "begin": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::initializer_list\u003cunsigned char\u003e::begin() const */\n\nundefined8 std::initializer_list\u003cunsigned_char\u003e::begin(void)\n\n{\n  undefined8 *in_RDI;\n  \n  return *in_RDI;\n}\n\n",
  "__throw_logic_error": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__throw_logic_error(char *param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZSt19__throw_logic_errorPKc@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "_M_capacity": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_capacity\n               (ulong param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "operator[]": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::operator[]\n               (ulong param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@GLIBCXX_3.4.21 */\n  halt_baddata();\n}\n\n",
  "_M_data": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_data(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "~_Vector_impl": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::_Vector_impl::~_Vector_impl()\n    */\n\nvoid __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_impl::~_Vector_impl\n          (_Vector_impl *this)\n\n{\n  allocator\u003cunsigned_char\u003e::~allocator((allocator\u003cunsigned_char\u003e *)this);\n  return;\n}\n\n",
  "~basic_string": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __thiscall\nstd::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string\n          (basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e *this)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21 */\n  halt_baddata();\n}\n\n",
  "basic_string": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::basic_string\n               (basic_string *param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "deregister_tm_clones": "\n/* WARNING: Removing unreachable block (ram,0x004018b3) */\n/* WARNING: Removing unreachable block (ram,0x004018bf) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n",
  "_M_range_initialize\u003cunsigned_char_const*\u003e": "\n/* void std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::_M_range_initialize\u003cunsigned\n   char const*\u003e(unsigned char const*, unsigned char const*, std::forward_iterator_tag) */\n\nvoid std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::\n     _M_range_initialize\u003cunsigned_char_const*\u003e\n               (uchar *param_1,uchar *param_2,forward_iterator_tag param_3)\n\n{\n  difference_type dVar1;\n  undefined4 extraout_var;\n  allocator *paVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  uchar *puVar5;\n  undefined4 in_register_00000014;\n  \n  dVar1 \u003d distance\u003cunsigned_char_const*\u003e(param_2,(uchar *)CONCAT44(in_register_00000014,param_3));\n  paVar2 \u003d (allocator *)\n           _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_get_Tp_allocator();\n  uVar3 \u003d _S_check_init_len(CONCAT44(extraout_var,dVar1),paVar2);\n  uVar4 \u003d _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_allocate\n                    ((_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *)param_1,uVar3);\n  *(undefined8 *)param_1 \u003d uVar4;\n  *(ulong *)(param_1 + 0x10) \u003d *(long *)param_1 + CONCAT44(extraout_var,dVar1);\n  paVar2 \u003d (allocator *)\n           _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_get_Tp_allocator();\n  puVar5 \u003d __uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e\n                     (param_2,(uchar *)CONCAT44(in_register_00000014,param_3),*(uchar **)param_1,\n                      paVar2);\n  *(uchar **)(param_1 + 8) \u003d puVar5;\n  return;\n}\n\n",
  "endl\u003cchar,std::char_traits\u003cchar\u003e\u003e": "\n/* WARNING: Switch with 1 destination removed at 0x004013f0 */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::basic_ostream\u003cchar, std::char_traits\u003cchar\u003e \u003e\u0026 std::endl\u003cchar, std::char_traits\u003cchar\u003e\n   \u003e(std::basic_ostream\u003cchar, std::char_traits\u003cchar\u003e \u003e\u0026) */\n\nbasic_ostream * std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e(basic_ostream *param_1)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
  "__niter_base\u003cunsigned_char_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char const* std::__niter_base\u003cunsigned char const*\u003e(unsigned char const*) */\n\nuchar * std::__niter_base\u003cunsigned_char_const*\u003e(uchar *param_1)\n\n{\n  return param_1;\n}\n\n",
  "__niter_wrap\u003cunsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::__niter_wrap\u003cunsigned char*\u003e(unsigned char* const\u0026, unsigned char*) */\n\nuchar * std::__niter_wrap\u003cunsigned_char*\u003e(uchar **param_1,uchar *param_2)\n\n{\n  return param_2;\n}\n\n",
  "verify": "\n/* verify(std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e) */\n\nvoid verify(basic_string param_1)\n\n{\n  byte bVar1;\n  byte bVar2;\n  char cVar3;\n  undefined4 uVar4;\n  int iVar5;\n  ulong uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  byte *pbVar9;\n  time_t tVar10;\n  char *pcVar11;\n  basic_ostream *pbVar12;\n  ulong uVar13;\n  undefined4 in_register_0000003c;\n  basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e local_d8 [32];\n  vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e local_b8 [32];\n  allocator local_98;\n  undefined local_97;\n  undefined local_96;\n  undefined local_95;\n  undefined local_94;\n  undefined local_93;\n  undefined local_92;\n  undefined local_91;\n  undefined local_90;\n  undefined local_8f;\n  undefined local_8e;\n  undefined local_8d;\n  undefined local_8c;\n  undefined local_8b;\n  undefined local_8a;\n  undefined local_89;\n  undefined local_88;\n  undefined local_87;\n  undefined local_86;\n  undefined local_85;\n  undefined local_84;\n  undefined local_83;\n  undefined local_82;\n  undefined local_81;\n  undefined local_80;\n  undefined local_7f;\n  undefined local_7e;\n  undefined local_7d;\n  undefined local_7c;\n  undefined local_7b;\n  undefined local_7a;\n  undefined local_79;\n  undefined local_78;\n  undefined local_77;\n  undefined local_76;\n  undefined local_75;\n  undefined local_74;\n  undefined local_73;\n  undefined local_72;\n  undefined local_71;\n  undefined local_70;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_6d;\n  undefined local_6c;\n  undefined local_6b;\n  undefined local_6a;\n  undefined local_69;\n  undefined local_68;\n  undefined local_67;\n  undefined local_66;\n  undefined local_65;\n  undefined local_64;\n  undefined local_63;\n  undefined local_62;\n  undefined local_61;\n  undefined local_60;\n  undefined local_5f;\n  undefined local_5e;\n  undefined local_5d;\n  undefined local_5c;\n  undefined local_5b;\n  undefined local_5a;\n  undefined local_59;\n  undefined local_58;\n  undefined local_57;\n  undefined local_56;\n  undefined local_55;\n  undefined local_54;\n  undefined local_53;\n  undefined local_52;\n  undefined local_51;\n  undefined local_50;\n  undefined local_4f;\n  allocator\u003cunsigned_char\u003e local_42;\n  allocator local_41;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  \n  local_98 \u003d (allocator)0x3f;\n  local_97 \u003d 0x42;\n  local_96 \u003d 0x38;\n  local_95 \u003d 0x5f;\n  local_94 \u003d 0x7a;\n  local_93 \u003d 0x57;\n  local_92 \u003d 0x71;\n  local_91 \u003d 0x74;\n  local_90 \u003d 0x66;\n  local_8f \u003d 0x44;\n  local_8e \u003d 0x47;\n  local_8d \u003d 0x32;\n  local_8c \u003d 0x3d;\n  local_8b \u003d 0x16;\n  local_8a \u003d 99;\n  local_89 \u003d 0x1f;\n  local_88 \u003d 0x12;\n  local_87 \u003d 0x1a;\n  local_86 \u003d 0x12;\n  local_85 \u003d 0x5c;\n  local_84 \u003d 0x2a;\n  local_83 \u003d 3;\n  local_82 \u003d 100;\n  local_81 \u003d 0x1c;\n  local_80 \u003d 0x15;\n  local_7f \u003d 0x40;\n  local_7e \u003d 1;\n  local_7d \u003d 0x3f;\n  local_7c \u003d 0x4c;\n  local_7b \u003d 2;\n  local_7a \u003d 0x3a;\n  local_79 \u003d 0x30;\n  local_78 \u003d 0x1d;\n  local_77 \u003d 0x7c;\n  local_76 \u003d 0x69;\n  local_75 \u003d 0x4d;\n  local_74 \u003d 0x19;\n  local_73 \u003d 0x5f;\n  local_72 \u003d 0x48;\n  local_71 \u003d 0x5e;\n  local_70 \u003d 0x20;\n  local_6f \u003d 3;\n  local_6e \u003d 0x17;\n  local_6d \u003d 9;\n  local_6c \u003d 0x52;\n  local_6b \u003d 0x6b;\n  local_6a \u003d 0x4c;\n  local_69 \u003d 0x65;\n  local_68 \u003d 0x6f;\n  local_67 \u003d 0x48;\n  local_66 \u003d 6;\n  local_65 \u003d 0x5b;\n  local_64 \u003d 0x2b;\n  local_63 \u003d 0x28;\n  local_62 \u003d 0x40;\n  local_61 \u003d 0x2e;\n  local_60 \u003d 0x4e;\n  local_5f \u003d 0xb;\n  local_5e \u003d 0x16;\n  local_5d \u003d 0x31;\n  local_5c \u003d 0x30;\n  local_5b \u003d 0x56;\n  local_5a \u003d 0x21;\n  local_59 \u003d 0x6e;\n  local_58 \u003d 0x2d;\n  local_57 \u003d 0x30;\n  local_56 \u003d 0x4b;\n  local_55 \u003d 0x1c;\n  local_54 \u003d 0x10;\n  local_53 \u003d 4;\n  local_52 \u003d 0x3f;\n  local_51 \u003d 0x18;\n  local_50 \u003d 0x41;\n  local_4f \u003d 0x34;\n  std::allocator\u003cunsigned_char\u003e::allocator();\n                    /* try { // try from 00401b54 to 00401b58 has its CatchHandler @ 00401f04 */\n  std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::vector\n            ((initializer_list)local_b8,\u0026local_98);\n  std::allocator\u003cunsigned_char\u003e::~allocator(\u0026local_42);\n  local_2c \u003d 0;\n  while( true ) {\n    uVar13 \u003d (ulong)local_2c;\n    uVar6 \u003d std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size();\n    if (uVar6 \u003c\u003d uVar13) break;\n    pbVar9 \u003d (byte *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                               (local_b8,(long)local_2c);\n    bVar2 \u003d *pbVar9;\n                    /* try { // try from 00401b9e to 00401c8b has its CatchHandler @ 00401f43 */\n    pbVar9 \u003d (byte *)std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n                     operator[](CONCAT44(in_register_0000003c,param_1));\n    bVar1 \u003d *pbVar9;\n    pbVar9 \u003d (byte *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                               (local_b8,(long)local_2c);\n    *pbVar9 \u003d bVar1 ^ bVar2;\n    local_2c \u003d local_2c + 1;\n  }\n  local_30 \u003d 0;\n  while( true ) {\n    uVar13 \u003d (ulong)local_30;\n    uVar6 \u003d std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::size();\n    if (uVar6 \u003c\u003d uVar13) break;\n    pbVar9 \u003d (byte *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                               (local_b8,(long)local_30);\n    bVar2 \u003d *pbVar9;\n    iVar5 \u003d local_30 * 10;\n    uVar6 \u003d std::vector\u003cint,std::allocator\u003cint\u003e\u003e::size();\n    piVar7 \u003d (int *)std::vector\u003cint,std::allocator\u003cint\u003e\u003e::operator[]\n                              ((vector\u003cint,std::allocator\u003cint\u003e\u003e *)data,\n                               (ulong)(long)(iVar5 + 0xc) % uVar6);\n    iVar5 \u003d *piVar7;\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size();\n    pcVar11 \u003d (char *)std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n                      operator[](CONCAT44(in_register_0000003c,param_1));\n    cVar3 \u003d *pcVar11;\n    uVar6 \u003d std::vector\u003cint,std::allocator\u003cint\u003e\u003e::size();\n    puVar8 \u003d (undefined4 *)\n             std::vector\u003cint,std::allocator\u003cint\u003e\u003e::operator[]\n                       ((vector\u003cint,std::allocator\u003cint\u003e\u003e *)data,(ulong)(long)(cVar3 + iVar5) % uVar6\n                       );\n    uVar4 \u003d *puVar8;\n    pbVar9 \u003d (byte *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                               (local_b8,(long)local_30);\n    *pbVar9 \u003d (byte)uVar4 ^ bVar2;\n    local_30 \u003d local_30 + 1;\n  }\n  local_34 \u003d 5;\n  while( true ) {\n    uVar13 \u003d (ulong)local_34;\n    uVar6 \u003d std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::size();\n    if (uVar6 \u003c\u003d uVar13) break;\n    for (local_38 \u003d 0; local_38 \u003c 300; local_38 \u003d local_38 + 1) {\n      pbVar9 \u003d (byte *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                                 (local_b8,(long)local_34);\n      bVar2 \u003d *pbVar9;\n      iVar5 \u003d local_38 \u003c\u003c 5;\n      pcVar11 \u003d (char *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                                  (local_b8,(long)(local_34 + -5));\n      cVar3 \u003d *pcVar11;\n      pbVar9 \u003d (byte *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                                 (local_b8,(long)local_34);\n      *pbVar9 \u003d cVar3 \u003d\u003d \u0027n\u0027 ^ bVar2 ^ (byte)iVar5;\n    }\n    local_34 \u003d local_34 + 1;\n  }\n  std::allocator\u003cchar\u003e::allocator();\n                    /* try { // try from 00401ddb to 00401ddf has its CatchHandler @ 00401f1e */\n  std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n  basic_string\u003cstd::allocator\u003cchar\u003e\u003e\n            (local_d8,\"flag{ph3w...u finaLly g0t it! jump into cell wHen U g3t t0 the next cha11}\",\n             \u0026local_41);\n  std::allocator\u003cchar\u003e::~allocator((allocator\u003cchar\u003e *)\u0026local_41);\n  tVar10 \u003d time((time_t *)0x0);\n  srand((uint)tVar10);\n  local_3c \u003d 0;\n  do {\n    uVar13 \u003d (ulong)local_3c;\n    uVar6 \u003d std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::size();\n    if (uVar6 \u003c\u003d uVar13) {\n      pbVar12 \u003d std::operator\u003c\u003c((basic_ostream *)std::cout,\"You are worthy!\");\n      std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c\n                ((basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e *)pbVar12,\n                 std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e);\nLAB_00401ee4:\n      std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string\n                (local_d8);\n      std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::~vector(local_b8);\n      return;\n    }\n                    /* try { // try from 00401e1c to 00401ee2 has its CatchHandler @ 00401f2f */\n    pcVar11 \u003d (char *)std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n                      operator[]((ulong)local_d8);\n    cVar3 \u003d *pcVar11;\n    pcVar11 \u003d (char *)std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::operator[]\n                                (local_b8,(long)local_3c);\n    if (cVar3 !\u003d *pcVar11) {\n      local_40 \u003d rand();\n      pbVar12 \u003d std::operator\u003c\u003c((basic_ostream *)std::cout,fail_msgs + (long)(local_40 % 6) * 0x80);\n      std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c\n                ((basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e *)pbVar12,\n                 std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e);\n      goto LAB_00401ee4;\n    }\n    local_3c \u003d local_3c + 1;\n  } while( true );\n}\n\n",
  "_ITM_deregisterTMCloneTable": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
  "vector": "\n/* std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::vector(std::initializer_list\u003cunsigned\n   char\u003e, std::allocator\u003cunsigned char\u003e const\u0026) */\n\nvoid std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::vector\n               (initializer_list param_1,allocator *param_2)\n\n{\n  forward_iterator_tag fVar1;\n  uchar *puVar2;\n  allocator *in_RCX;\n  undefined4 in_register_0000003c;\n  \n  _Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_base\n            ((_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *)\n             CONCAT44(in_register_0000003c,param_1),in_RCX);\n  fVar1 \u003d initializer_list\u003cunsigned_char\u003e::end();\n  puVar2 \u003d (uchar *)initializer_list\u003cunsigned_char\u003e::begin();\n                    /* try { // try from 00402390 to 00402394 has its CatchHandler @ 00402397 */\n  _M_range_initialize\u003cunsigned_char_const*\u003e\n            ((uchar *)(_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *)\n                      CONCAT44(in_register_0000003c,param_1),puVar2,fVar1);\n  return;\n}\n\n",
  "handle_static_init": "\n/* WARNING: Removing unreachable block (ram,0x0040173c) */\n/* WARNING: Removing unreachable block (ram,0x00401766) */\n/* WARNING: Removing unreachable block (ram,0x0040176a) */\n/* WARNING: Removing unreachable block (ram,0x00401770) */\n/* WARNING: Removing unreachable block (ram,0x00401773) */\n/* WARNING: Removing unreachable block (ram,0x00401777) */\n/* WARNING: Removing unreachable block (ram,0x00401785) */\n/* WARNING: Removing unreachable block (ram,0x00401789) */\n/* WARNING: Removing unreachable block (ram,0x00401799) */\n/* WARNING: Removing unreachable block (ram,0x004017a7) */\n/* WARNING: Removing unreachable block (ram,0x00401790) */\n/* WARNING: Removing unreachable block (ram,0x004017b4) */\n/* WARNING: Removing unreachable block (ram,0x004017d0) */\n/* WARNING: Removing unreachable block (ram,0x004017d4) */\n/* WARNING: Removing unreachable block (ram,0x004017da) */\n/* WARNING: Removing unreachable block (ram,0x004017dd) */\n/* WARNING: Removing unreachable block (ram,0x004017e1) */\n/* WARNING: Removing unreachable block (ram,0x004017ef) */\n/* WARNING: Removing unreachable block (ram,0x004017f3) */\n/* WARNING: Removing unreachable block (ram,0x00401809) */\n/* WARNING: Removing unreachable block (ram,0x00401817) */\n/* WARNING: Removing unreachable block (ram,0x00401800) */\n/* WARNING: Unknown calling convention */\n\nvoid handle_static_init(int argc,char **argv,char **env)\n\n{\n  _func_void_int_char_ptr_ptr_char_ptr_ptr *fn;\n  \n  return;\n}\n\n",
  "_S_max_size": "\n/* std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::_S_max_size(std::allocator\u003cunsigned\n   char\u003e const\u0026) */\n\nulong std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_S_max_size(allocator *param_1)\n\n{\n  ulong *puVar1;\n  ulong local_18;\n  ulong local_10;\n  \n  local_10 \u003d 0x7fffffffffffffff;\n  local_18 \u003d allocator_traits\u003cstd::allocator\u003cunsigned_char\u003e\u003e::max_size(param_1);\n  puVar1 \u003d min\u003cunsigned_long\u003e(\u0026local_10,\u0026local_18);\n  return *puVar1;\n}\n\n",
  "operator\u003c\u003c": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __thiscall\nstd::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c\n          (basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e *this,\n          _func_basic_ostream_ptr_basic_ostream_ptr *param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSolsEPFRSoS_E@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "_M_deallocate": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::_M_deallocate(unsigned char*,\n   unsigned long) */\n\nvoid __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_deallocate\n          (_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *this,uchar *param_1,\n          ulong param_2)\n\n{\n  if (param_1 !\u003d (uchar *)0x0) {\n    allocator_traits\u003cstd::allocator\u003cunsigned_char\u003e\u003e::deallocate((allocator *)this,param_1,param_2);\n  }\n  return;\n}\n\n",
  "__copy_m\u003cint\u003e": "\n/* int* std::__copy_move\u003cfalse, true, std::random_access_iterator_tag\u003e::__copy_m\u003cint\u003e(int const*,\n   int const*, int*) */\n\nint * std::__copy_move\u003cfalse,true,std::random_access_iterator_tag\u003e::__copy_m\u003cint\u003e\n                (int *param_1,int *param_2,int *param_3)\n\n{\n  long lVar1;\n  \n  lVar1 \u003d (long)param_2 - (long)param_1 \u003e\u003e 2;\n  if (lVar1 !\u003d 0) {\n    memmove(param_3,param_1,lVar1 * 4);\n  }\n  return param_3 + lVar1;\n}\n\n",
  "__uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::__uninitialized_copy_a\u003cunsigned char const*, unsigned char*, unsigned\n   char\u003e(unsigned char const*, unsigned char const*, unsigned char*, std::allocator\u003cunsigned char\u003e\u0026)\n    */\n\nuchar * std::__uninitialized_copy_a\u003cunsigned_char_const*,unsigned_char*,unsigned_char\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3,allocator *param_4)\n\n{\n  uchar *puVar1;\n  \n  puVar1 \u003d uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e(param_1,param_2,param_3);\n  return puVar1;\n}\n\n",
  "uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::uninitialized_copy\u003cunsigned char const*, unsigned char*\u003e(unsigned char\n   const*, unsigned char const*, unsigned char*) */\n\nuchar * std::uninitialized_copy\u003cunsigned_char_const*,unsigned_char*\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  uchar *puVar1;\n  \n  puVar1 \u003d __uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e\n                     (param_1,param_2,param_3);\n  return puVar1;\n}\n\n",
  "~allocator": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __thiscall std::allocator\u003cchar\u003e::~allocator(allocator\u003cchar\u003e *this)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSaIcED1Ev@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "memcpy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "basic_string\u003cstd::allocator\u003cchar\u003e\u003e": "\n/* std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e\n   \u003e::basic_string\u003cstd::allocator\u003cchar\u003e \u003e(char const*, std::allocator\u003cchar\u003e const\u0026) */\n\nvoid __thiscall\nstd::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\nbasic_string\u003cstd::allocator\u003cchar\u003e\u003e\n          (basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e *this,char *param_1,\n          allocator *param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  \n  pcVar2 \u003d (char *)std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n                   _M_local_data();\n  std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_Alloc_hider::\n  _Alloc_hider((_Alloc_hider *)this,pcVar2,param_2);\n  if (param_1 \u003d\u003d (char *)0x0) {\n                    /* try { // try from 004024c2 to 004024f4 has its CatchHandler @ 004024f7 */\n    std::__throw_logic_error(\"basic_string: construction from null is not valid\");\n  }\n  iVar1 \u003d char_traits\u003cchar\u003e::length(param_1);\n  _M_construct\u003cchar_const*\u003e((char *)this,param_1,iVar1 + (int)param_1);\n  return;\n}\n\n",
  "__destroy\u003cunsigned_char*\u003e": "\n/* void std::_Destroy_aux\u003ctrue\u003e::__destroy\u003cunsigned char*\u003e(unsigned char*, unsigned char*) */\n\nvoid std::_Destroy_aux\u003ctrue\u003e::__destroy\u003cunsigned_char*\u003e(uchar *param_1,uchar *param_2)\n\n{\n  return;\n}\n\n",
  "_M_create": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_create\n               (ulong *param_1,ulong param_2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "__niter_base\u003cint*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::__niter_base\u003cint*\u003e(int*) */\n\nint * std::__niter_base\u003cint*\u003e(int *param_1)\n\n{\n  return param_1;\n}\n\n",
  "distance\u003cchar_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cchar const*\u003e::difference_type std::distance\u003cchar const*\u003e(char const*, char\n   const*) */\n\ndifference_type std::distance\u003cchar_const*\u003e(char *param_1,char *param_2)\n\n{\n  difference_type dVar1;\n  char *local_10;\n  \n  local_10 \u003d param_1;\n  __iterator_category\u003cchar_const*\u003e(\u0026local_10);\n  dVar1 \u003d __distance\u003cchar_const*\u003e(local_10,param_2,(random_access_iterator_tag)param_2);\n  return dVar1;\n}\n\n",
  "__distance\u003cchar_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cchar const*\u003e::difference_type std::__distance\u003cchar const*\u003e(char const*, char\n   const*, std::random_access_iterator_tag) */\n\ndifference_type\nstd::__distance\u003cchar_const*\u003e(char *param_1,char *param_2,random_access_iterator_tag param_3)\n\n{\n  return (int)param_2 - (int)param_1;\n}\n\n",
  "_init": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  int iVar1;\n  \n  frame_dummy();\n  iVar1 \u003d __do_global_ctors_aux();\n  return iVar1;\n}\n\n",
  "distance\u003cint_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cint const*\u003e::difference_type std::distance\u003cint const*\u003e(int const*, int\n   const*) */\n\ndifference_type std::distance\u003cint_const*\u003e(int *param_1,int *param_2)\n\n{\n  difference_type dVar1;\n  int *local_10;\n  \n  local_10 \u003d param_1;\n  __iterator_category\u003cint_const*\u003e(\u0026local_10);\n  dVar1 \u003d __distance\u003cint_const*\u003e(local_10,param_2,(random_access_iterator_tag)param_2);\n  return dVar1;\n}\n\n",
  "_Destroy\u003cunsigned_char*,unsigned_char\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* void std::_Destroy\u003cunsigned char*, unsigned char\u003e(unsigned char*, unsigned char*,\n   std::allocator\u003cunsigned char\u003e\u0026) */\n\nvoid std::_Destroy\u003cunsigned_char*,unsigned_char\u003e(uchar *param_1,uchar *param_2,allocator *param_3)\n\n{\n  _Destroy\u003cunsigned_char*\u003e(param_1,param_2);\n  return;\n}\n\n",
  "__copy_move_a2\u003cfalse,int_const*,int*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::__copy_move_a2\u003cfalse, int const*, int*\u003e(int const*, int const*, int*) */\n\nint * std::__copy_move_a2\u003cfalse,int_const*,int*\u003e(int *param_1,int *param_2,int *param_3)\n\n{\n  int *piVar1;\n  \n  piVar1 \u003d __copy_move\u003cfalse,true,std::random_access_iterator_tag\u003e::__copy_m\u003cint\u003e\n                     (param_1,param_2,param_3);\n  return piVar1;\n}\n\n",
  "main": "\nbool main(int param_1,char **param_2)\n\n{\n  basic_ostream *pbVar1;\n  basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e local_68 [47];\n  allocator local_39;\n  basic_string local_38 [10];\n  \n  if (param_1 \u003c 2) {\n    pbVar1 \u003d std::operator\u003c\u003c((basic_ostream *)std::cout,\"Usage: \");\n    pbVar1 \u003d std::operator\u003c\u003c(pbVar1,*param_2);\n    pbVar1 \u003d std::operator\u003c\u003c(pbVar1,\" \u003cfood\u003e\");\n    std::basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e::operator\u003c\u003c\n              ((basic_ostream\u003cchar,std::char_traits\u003cchar\u003e\u003e *)pbVar1,\n               std::endl\u003cchar,std::char_traits\u003cchar\u003e\u003e);\n  }\n  else {\n    std::allocator\u003cchar\u003e::allocator();\n                    /* try { // try from 00401ff1 to 00401ff5 has its CatchHandler @ 00402040 */\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n    basic_string\u003cstd::allocator\u003cchar\u003e\u003e(local_68,param_2[1],\u0026local_39);\n    std::allocator\u003cchar\u003e::~allocator((allocator\u003cchar\u003e *)\u0026local_39);\n                    /* try { // try from 00402010 to 00402014 has its CatchHandler @ 0040206b */\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::basic_string\n              (local_38);\n                    /* try { // try from 0040201c to 00402020 has its CatchHandler @ 0040205a */\n    verify((basic_string)local_38);\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string\n              ((basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e *)local_38);\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::~basic_string\n              (local_68);\n  }\n  return param_1 \u003c 2;\n}\n\n",
  "__new_allocator": "\n/* std::__new_allocator\u003cunsigned char\u003e::__new_allocator(std::__new_allocator\u003cunsigned char\u003e const\u0026)\n    */\n\nvoid std::__new_allocator\u003cunsigned_char\u003e::__new_allocator(__new_allocator *param_1)\n\n{\n  return;\n}\n\n",
  "_Alloc_hider": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __thiscall\nstd::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_Alloc_hider::\n_Alloc_hider(_Alloc_hider *this,char *param_1,allocator *param_2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "~_Alloc_hider": "\n/* std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e\n   \u003e::_Alloc_hider::~_Alloc_hider() */\n\nvoid __thiscall\nstd::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_Alloc_hider::\n~_Alloc_hider(_Alloc_hider *this)\n\n{\n  std::allocator\u003cchar\u003e::~allocator((allocator\u003cchar\u003e *)this);\n  return;\n}\n\n",
  "_Vector_base": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e\n   \u003e::_Vector_base(std::allocator\u003cunsigned char\u003e const\u0026) */\n\nvoid __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_base\n          (_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *this,allocator *param_1)\n\n{\n  _Vector_impl::_Vector_impl((_Vector_impl *)this,param_1);\n  return;\n}\n\n",
  "__uninitialized_copy_a\u003cint_const*,int*,int\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::__uninitialized_copy_a\u003cint const*, int*, int\u003e(int const*, int const*, int*,\n   std::allocator\u003cint\u003e\u0026) */\n\nint * std::__uninitialized_copy_a\u003cint_const*,int*,int\u003e\n                (int *param_1,int *param_2,int *param_3,allocator *param_4)\n\n{\n  int *piVar1;\n  \n  piVar1 \u003d uninitialized_copy\u003cint_const*,int*\u003e(param_1,param_2,param_3);\n  return piVar1;\n}\n\n",
  "strlen": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "srand": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid srand(uint __seed)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* srand@FBSD_1.6 */\n  halt_baddata();\n}\n\n",
  "__uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e": "\n/* unsigned char* std::__uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cunsigned char const*, unsigned\n   char*\u003e(unsigned char const*, unsigned char const*, unsigned char*) */\n\nuchar * std::__uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cunsigned_char_const*,unsigned_char*\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  uchar *puVar1;\n  \n  puVar1 \u003d copy\u003cunsigned_char_const*,unsigned_char*\u003e(param_1,param_2,param_3);\n  return puVar1;\n}\n\n",
  "__copy_move_a\u003cfalse,int_const*,int*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::__copy_move_a\u003cfalse, int const*, int*\u003e(int const*, int const*, int*) */\n\nint * std::__copy_move_a\u003cfalse,int_const*,int*\u003e(int *param_1,int *param_2,int *param_3)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int *piVar3;\n  int *local_30;\n  int *local_28;\n  int *local_20;\n  \n  local_30 \u003d param_3;\n  local_28 \u003d param_2;\n  local_20 \u003d param_1;\n  piVar1 \u003d __niter_base\u003cint*\u003e(param_3);\n  piVar2 \u003d __niter_base\u003cint_const*\u003e(local_28);\n  piVar3 \u003d __niter_base\u003cint_const*\u003e(local_20);\n  piVar1 \u003d __copy_move_a1\u003cfalse,int_const*,int*\u003e(piVar3,piVar2,piVar1);\n  piVar1 \u003d __niter_wrap\u003cint*\u003e(\u0026local_30,piVar1);\n  return piVar1;\n}\n\n",
  "_M_local_data": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_local_data\n               (void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "copy\u003cint_const*,int*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::copy\u003cint const*, int*\u003e(int const*, int const*, int*) */\n\nint * std::copy\u003cint_const*,int*\u003e(int *param_1,int *param_2,int *param_3)\n\n{\n  int *piVar1;\n  int *piVar2;\n  \n  piVar1 \u003d __miter_base\u003cint_const*\u003e(param_2);\n  piVar2 \u003d __miter_base\u003cint_const*\u003e(param_1);\n  piVar1 \u003d __copy_move_a\u003cfalse,int_const*,int*\u003e(piVar2,piVar1,param_3);\n  return piVar1;\n}\n\n",
  "~_Vector_base": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::~_Vector_base() */\n\nvoid __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::~_Vector_base\n          (_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *this)\n\n{\n  _M_deallocate(this,*(uchar **)this,*(long *)(this + 0x10) - *(long *)this);\n  _Vector_impl::~_Vector_impl((_Vector_impl *)this);\n  return;\n}\n\n",
  "__copy_m\u003cunsigned_char\u003e": "\n/* unsigned char* std::__copy_move\u003cfalse, true, std::random_access_iterator_tag\u003e::__copy_m\u003cunsigned\n   char\u003e(unsigned char const*, unsigned char const*, unsigned char*) */\n\nuchar * std::__copy_move\u003cfalse,true,std::random_access_iterator_tag\u003e::__copy_m\u003cunsigned_char\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  size_t __n;\n  \n  __n \u003d (long)param_2 - (long)param_1;\n  if (__n !\u003d 0) {\n    memmove(param_3,param_1,__n);\n  }\n  return param_3 + __n;\n}\n\n",
  "~__new_allocator": "\n/* std::__new_allocator\u003cunsigned char\u003e::~__new_allocator() */\n\nvoid __thiscall\nstd::__new_allocator\u003cunsigned_char\u003e::~__new_allocator(__new_allocator\u003cunsigned_char\u003e *this)\n\n{\n  return;\n}\n\n",
  "__iterator_category\u003cint_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cint const*\u003e::iterator_category std::__iterator_category\u003cint const*\u003e(int\n   const* const\u0026) */\n\niterator_category std::__iterator_category\u003cint_const*\u003e(int **param_1)\n\n{\n  iterator_category in_EAX;\n  \n  return in_EAX;\n}\n\n",
  "_Destroy\u003cint*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* void std::_Destroy\u003cint*\u003e(int*, int*) */\n\nvoid std::_Destroy\u003cint*\u003e(int *param_1,int *param_2)\n\n{\n  _Destroy_aux\u003ctrue\u003e::__destroy\u003cint*\u003e(param_1,param_2);\n  return;\n}\n\n",
  "operator.new": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * operator_new(ulong param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _Znwm@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "_M_dispose": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_dispose(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "_M_range_initialize\u003cint_const*\u003e": "\n/* void std::vector\u003cint, std::allocator\u003cint\u003e \u003e::_M_range_initialize\u003cint const*\u003e(int const*, int\n   const*, std::forward_iterator_tag) */\n\nvoid std::vector\u003cint,std::allocator\u003cint\u003e\u003e::_M_range_initialize\u003cint_const*\u003e\n               (int *param_1,int *param_2,forward_iterator_tag param_3)\n\n{\n  difference_type dVar1;\n  undefined4 extraout_var;\n  allocator *paVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  undefined4 in_register_00000014;\n  \n  dVar1 \u003d distance\u003cint_const*\u003e(param_2,(int *)CONCAT44(in_register_00000014,param_3));\n  paVar2 \u003d (allocator *)_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator();\n  uVar3 \u003d _S_check_init_len(CONCAT44(extraout_var,dVar1),paVar2);\n  uVar4 \u003d _Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_allocate\n                    ((_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e *)param_1,uVar3);\n  *(undefined8 *)param_1 \u003d uVar4;\n  *(ulong *)(param_1 + 4) \u003d CONCAT44(extraout_var,dVar1) * 4 + *(long *)param_1;\n  paVar2 \u003d (allocator *)_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator();\n  piVar5 \u003d __uninitialized_copy_a\u003cint_const*,int*,int\u003e\n                     (param_2,(int *)CONCAT44(in_register_00000014,param_3),*(int **)param_1,paVar2)\n  ;\n  *(int **)(param_1 + 2) \u003d piVar5;\n  return;\n}\n\n",
  "uninitialized_copy\u003cint_const*,int*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::uninitialized_copy\u003cint const*, int*\u003e(int const*, int const*, int*) */\n\nint * std::uninitialized_copy\u003cint_const*,int*\u003e(int *param_1,int *param_2,int *param_3)\n\n{\n  int *piVar1;\n  \n  piVar1 \u003d __uninitialized_copy\u003ctrue\u003e::__uninit_copy\u003cint_const*,int*\u003e(param_1,param_2,param_3);\n  return piVar1;\n}\n\n",
  "__copy_move_a1\u003cfalse,int_const*,int*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::__copy_move_a1\u003cfalse, int const*, int*\u003e(int const*, int const*, int*) */\n\nint * std::__copy_move_a1\u003cfalse,int_const*,int*\u003e(int *param_1,int *param_2,int *param_3)\n\n{\n  int *piVar1;\n  \n  piVar1 \u003d __copy_move_a2\u003cfalse,int_const*,int*\u003e(param_1,param_2,param_3);\n  return piVar1;\n}\n\n",
  "operator.delete": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid operator_delete(void *param_1,ulong param_2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZdlPvm@CXXABI_1.3.9 */\n  halt_baddata();\n}\n\n",
  "eq": "\n/* __gnu_cxx::char_traits\u003cchar\u003e::eq(char const\u0026, char const\u0026) */\n\nbool __gnu_cxx::char_traits\u003cchar\u003e::eq(char *param_1,char *param_2)\n\n{\n  return *param_1 \u003d\u003d *param_2;\n}\n\n",
  "__static_initialization_and_destruction_0": "\n/* __static_initialization_and_destruction_0(int, int) */\n\nvoid __static_initialization_and_destruction_0(int param_1,int param_2)\n\n{\n  allocator local_36d8 [13999];\n  allocator\u003cint\u003e local_29 [9];\n  \n  if ((param_1 \u003d\u003d 1) \u0026\u0026 (param_2 \u003d\u003d 0xffff)) {\n    std::ios_base::Init::Init((Init *)\u0026std::__ioinit);\n    __cxa_atexit(std::ios_base::Init::~Init,\u0026std::__ioinit,\u0026__dso_handle);\n    memcpy(local_36d8,\u0026DAT_00403740,0x36a4);\n    std::allocator\u003cint\u003e::allocator();\n                    /* try { // try from 00402135 to 00402139 has its CatchHandler @ 0040215c */\n    std::vector\u003cint,std::allocator\u003cint\u003e\u003e::vector(0x409df0,local_36d8);\n    std::allocator\u003cint\u003e::~allocator(local_29);\n    __cxa_atexit(std::vector\u003cint,std::allocator\u003cint\u003e\u003e::~vector,data,\u0026__dso_handle);\n  }\n  return;\n}\n\n",
  "max_size": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::__new_allocator\u003cunsigned char\u003e::max_size() const */\n\nvoid std::__new_allocator\u003cunsigned_char\u003e::max_size(void)\n\n{\n  _M_max_size();\n  return;\n}\n\n",
  "memmove": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "__do_global_ctors_aux": "\nvoid __do_global_ctors_aux(void)\n\n{\n  code *pcVar1;\n  undefined8 *puVar2;\n  \n  if (__CTOR_LIST__ !\u003d (code *)0xffffffffffffffff) {\n    puVar2 \u003d \u0026__CTOR_LIST__;\n    pcVar1 \u003d __CTOR_LIST__;\n    do {\n      (*pcVar1)();\n      pcVar1 \u003d (code *)puVar2[-1];\n      puVar2 \u003d puVar2 + -1;\n    } while (pcVar1 !\u003d (code *)0xffffffffffffffff);\n    return;\n  }\n  return;\n}\n\n",
  "~Init": "\n/* WARNING: Switch with 1 destination removed at 0x00401600 */\n/* std::ios_base::Init::~Init() */\n\nvoid __thiscall std::ios_base::Init::~Init(Init *this)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
  "_Vector_impl": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e\n   \u003e::_Vector_impl::_Vector_impl(std::allocator\u003cunsigned char\u003e const\u0026) */\n\nvoid __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_impl::_Vector_impl\n          (_Vector_impl *this,allocator *param_1)\n\n{\n  allocator\u003cunsigned_char\u003e::allocator((allocator *)this);\n  _Vector_impl_data::_Vector_impl_data((_Vector_impl_data *)this);\n  return;\n}\n\n",
  "__gthread_trigger": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* __gthread_trigger() */\n\nvoid __gthread_trigger(void)\n\n{\n  __gthread_active \u003d 1;\n  return;\n}\n\n",
  "__niter_wrap\u003cint*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int* std::__niter_wrap\u003cint*\u003e(int* const\u0026, int*) */\n\nint * std::__niter_wrap\u003cint*\u003e(int **param_1,int *param_2)\n\n{\n  return param_2;\n}\n\n",
  "_init_tls": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _init_tls(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _init_tls@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "distance\u003cunsigned_char_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cunsigned char const*\u003e::difference_type std::distance\u003cunsigned char\n   const*\u003e(unsigned char const*, unsigned char const*) */\n\ndifference_type std::distance\u003cunsigned_char_const*\u003e(uchar *param_1,uchar *param_2)\n\n{\n  difference_type dVar1;\n  uchar *local_10;\n  \n  local_10 \u003d param_1;\n  __iterator_category\u003cunsigned_char_const*\u003e(\u0026local_10);\n  dVar1 \u003d __distance\u003cunsigned_char_const*\u003e(local_10,param_2,(random_access_iterator_tag)param_2);\n  return dVar1;\n}\n\n",
  "__throw_bad_array_new_length": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__throw_bad_array_new_length(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29 */\n  halt_baddata();\n}\n\n",
  "_start": "\n/* WARNING: Removing unreachable block (ram,0x004016d2) */\n/* WARNING: Removing unreachable block (ram,0x004016ba) */\n/* WARNING: Removing unreachable block (ram,0x004016b2) */\n/* WARNING: Removing unreachable block (ram,0x0040168c) */\n/* WARNING: Removing unreachable block (ram,0x004016d4) */\n/* WARNING: Removing unreachable block (ram,0x004016db) */\n/* WARNING: Removing unreachable block (ram,0x004016a0) */\n/* WARNING: Removing unreachable block (ram,0x004016a4) */\n/* WARNING: Removing unreachable block (ram,0x004016ad) */\n/* WARNING: Removing unreachable block (ram,0x004016cb) */\n/* WARNING: Removing unreachable block (ram,0x004016eb) */\n/* WARNING: Unknown calling convention */\n\nvoid _start(char **ap,_func_void *cleanup)\n\n{\n  char cVar1;\n  char *pcVar2;\n  uint32_t cpu_stdext_feature;\n  int __status;\n  char *pcVar3;\n  Elf_Addr target;\n  uint32_t cpu_stdext_feature2;\n  char **env_00;\n  char **env;\n  uint32_t cpu_feature2;\n  uint32_t cpu_feature;\n  Elf_Addr *where;\n  Elf_Rela *r;\n  char **argv_00;\n  char **argv;\n  int argc;\n  char *pcVar4;\n  \n  pcVar2 \u003d *ap;\n  argc \u003d (int)pcVar2;\n  env_00 \u003d ap + (long)argc + 2;\n  if (environ \u003d\u003d (char **)0x0) {\n    environ \u003d env_00;\n  }\n  argv_00 \u003d ap + 1;\n  if ((0 \u003c argc) \u0026\u0026 (pcVar4 \u003d *argv_00, pcVar3 \u003d pcVar4, pcVar4 !\u003d (char *)0x0)) {\n    do {\n      do {\n        __progname \u003d pcVar3;\n        pcVar3 \u003d pcVar4 + 1;\n        cVar1 \u003d *pcVar4;\n        pcVar4 \u003d pcVar3;\n      } while (cVar1 \u003d\u003d \u0027/\u0027);\n      pcVar3 \u003d __progname;\n    } while (cVar1 !\u003d \u0027\\0\u0027);\n  }\n  atexit((__func *)cleanup);\n  handle_static_init(argc,argv_00,env_00);\n  __status \u003d main((ulong)pcVar2 \u0026 0xffffffff,argv_00,env_00);\n                    /* WARNING: Subroutine does not return */\n  exit(__status);\n}\n\n",
  "__copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::__copy_move_a1\u003cfalse, unsigned char const*, unsigned char*\u003e(unsigned char\n   const*, unsigned char const*, unsigned char*) */\n\nuchar * std::__copy_move_a1\u003cfalse,unsigned_char_const*,unsigned_char*\u003e\n                  (uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  uchar *puVar1;\n  \n  puVar1 \u003d __copy_move_a2\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(param_1,param_2,param_3);\n  return puVar1;\n}\n\n",
  "_Destroy\u003cint*,int\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* void std::_Destroy\u003cint*, int\u003e(int*, int*, std::allocator\u003cint\u003e\u0026) */\n\nvoid std::_Destroy\u003cint*,int\u003e(int *param_1,int *param_2,allocator *param_3)\n\n{\n  _Destroy\u003cint*\u003e(param_1,param_2);\n  return;\n}\n\n",
  "atexit": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atexit(__func *__func)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* atexit@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "__iterator_category\u003cunsigned_char_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cunsigned char const*\u003e::iterator_category std::__iterator_category\u003cunsigned\n   char const*\u003e(unsigned char const* const\u0026) */\n\niterator_category std::__iterator_category\u003cunsigned_char_const*\u003e(uchar **param_1)\n\n{\n  iterator_category in_EAX;\n  \n  return in_EAX;\n}\n\n",
  "_Vector_impl_data": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e\n   \u003e::_Vector_impl_data::_Vector_impl_data() */\n\nvoid __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_Vector_impl_data::_Vector_impl_data\n          (_Vector_impl_data *this)\n\n{\n  *(undefined8 *)this \u003d 0;\n  *(undefined8 *)(this + 8) \u003d 0;\n  *(undefined8 *)(this + 0x10) \u003d 0;\n  return;\n}\n\n",
  "allocator\u003cchar\u003e_\u003e*)": "\n/* std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e\n   \u003e::_M_construct\u003cchar const*\u003e(char const*, char const*,\n   std::forward_iterator_tag)::_Guard::_Guard(std::__cxx11::basic_string\u003cchar,\n   std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e*) */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n     _M_construct\u003cchar_const*\u003e(char_const*,char_const*,std::forward_iterator_tag)::_Guard::\n     _Guard(std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e_\u003e__\n               (undefined8 *param_1,undefined8 param_2)\n\n{\n  *param_1 \u003d param_2;\n  return;\n}\n\n",
  "_Destroy\u003cunsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* void std::_Destroy\u003cunsigned char*\u003e(unsigned char*, unsigned char*) */\n\nvoid std::_Destroy\u003cunsigned_char*\u003e(uchar *param_1,uchar *param_2)\n\n{\n  _Destroy_aux\u003ctrue\u003e::__destroy\u003cunsigned_char*\u003e(param_1,param_2);\n  return;\n}\n\n",
  "_GLOBAL__sub_I_fail_msgs": "\nvoid _GLOBAL__sub_I_fail_msgs(void)\n\n{\n  __static_initialization_and_destruction_0(1,0xffff);\n  return;\n}\n\n",
  "end": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::initializer_list\u003cunsigned char\u003e::end() const */\n\nlong std::initializer_list\u003cunsigned_char\u003e::end(void)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  lVar1 \u003d begin();\n  lVar2 \u003d size();\n  return lVar2 + lVar1;\n}\n\n",
  "__cxa_atexit": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@FBSD_1.0 */\n  halt_baddata();\n}\n\n",
  "__miter_base\u003cint_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int const* std::__miter_base\u003cint const*\u003e(int const*) */\n\nint * std::__miter_base\u003cint_const*\u003e(int *param_1)\n\n{\n  return param_1;\n}\n\n",
  "_M_max_size": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::__new_allocator\u003cunsigned char\u003e::_M_max_size() const */\n\nundefined8 std::__new_allocator\u003cunsigned_char\u003e::_M_max_size(void)\n\n{\n  return 0x7fffffffffffffff;\n}\n\n",
  "_S_copy_chars": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_S_copy_chars\n               (char *param_1,char *param_2,char *param_3)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21\n                        */\n  halt_baddata();\n}\n\n",
  "register_tm_clones": "\n/* WARNING: Removing unreachable block (ram,0x004018f4) */\n/* WARNING: Removing unreachable block (ram,0x00401900) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n",
  "__throw_length_error": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid std::__throw_length_error(char *param_1)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _ZSt20__throw_length_errorPKc@GLIBCXX_3.4 */\n  halt_baddata();\n}\n\n",
  "__niter_base\u003cint_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* int const* std::__niter_base\u003cint const*\u003e(int const*) */\n\nint * std::__niter_base\u003cint_const*\u003e(int *param_1)\n\n{\n  return param_1;\n}\n\n",
  "length": "\n/* __gnu_cxx::char_traits\u003cchar\u003e::length(char const*) */\n\nlong __gnu_cxx::char_traits\u003cchar\u003e::length(char *param_1)\n\n{\n  char cVar1;\n  char local_11;\n  long local_10;\n  \n  local_10 \u003d 0;\n  while( true ) {\n    local_11 \u003d \u0027\\0\u0027;\n    cVar1 \u003d eq(param_1 + local_10,\u0026local_11);\n    if (cVar1 \u003d\u003d \u0027\\x01\u0027) break;\n    local_10 \u003d local_10 + 1;\n  }\n  return local_10;\n}\n\n",
  "__distance\u003cunsigned_char_const*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::iterator_traits\u003cunsigned char const*\u003e::difference_type std::__distance\u003cunsigned char\n   const*\u003e(unsigned char const*, unsigned char const*, std::random_access_iterator_tag) */\n\ndifference_type\nstd::__distance\u003cunsigned_char_const*\u003e\n          (uchar *param_1,uchar *param_2,random_access_iterator_tag param_3)\n\n{\n  return (int)param_2 - (int)param_1;\n}\n\n",
  "_S_check_init_len": "\n/* std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::_S_check_init_len(unsigned long,\n   std::allocator\u003cunsigned char\u003e const\u0026) */\n\nulong std::vector\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_S_check_init_len\n                (ulong param_1,allocator *param_2)\n\n{\n  ulong uVar1;\n  allocator local_19 [9];\n  \n  allocator\u003cunsigned_char\u003e::allocator(local_19);\n  uVar1 \u003d _S_max_size(local_19);\n  allocator\u003cunsigned_char\u003e::~allocator((allocator\u003cunsigned_char\u003e *)local_19);\n  if (uVar1 \u003c param_1) {\n    std::__throw_length_error(\"cannot create std::vector larger than max_size()\");\n  }\n  return param_1;\n}\n\n",
  "_M_allocate": "\n/* std::_Vector_base\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e::_M_allocate(unsigned long) */\n\nundefined8 __thiscall\nstd::_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e::_M_allocate\n          (_Vector_base\u003cunsigned_char,std::allocator\u003cunsigned_char\u003e\u003e *this,ulong param_1)\n\n{\n  undefined8 uVar1;\n  \n  if (param_1 \u003d\u003d 0) {\n    uVar1 \u003d 0;\n  }\n  else {\n    uVar1 \u003d allocator_traits\u003cstd::allocator\u003cunsigned_char\u003e\u003e::allocate((allocator *)this,param_1);\n  }\n  return uVar1;\n}\n\n",
  "copy\u003cunsigned_char_const*,unsigned_char*\u003e": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* unsigned char* std::copy\u003cunsigned char const*, unsigned char*\u003e(unsigned char const*, unsigned\n   char const*, unsigned char*) */\n\nuchar * std::copy\u003cunsigned_char_const*,unsigned_char*\u003e(uchar *param_1,uchar *param_2,uchar *param_3)\n\n{\n  uchar *puVar1;\n  uchar *puVar2;\n  \n  puVar1 \u003d __miter_base\u003cunsigned_char_const*\u003e(param_2);\n  puVar2 \u003d __miter_base\u003cunsigned_char_const*\u003e(param_1);\n  puVar1 \u003d __copy_move_a\u003cfalse,unsigned_char_const*,unsigned_char*\u003e(puVar2,puVar1,param_3);\n  return puVar1;\n}\n\n",
  "_M_get_Tp_allocator": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n/* std::_Vector_base\u003cint, std::allocator\u003cint\u003e \u003e::_M_get_Tp_allocator() */\n\nundefined8 std::_Vector_base\u003cint,std::allocator\u003cint\u003e\u003e::_M_get_Tp_allocator(void)\n\n{\n  undefined8 in_RDI;\n  \n  return in_RDI;\n}\n\n",
  "__do_global_dtors_aux": "\n/* WARNING: Removing unreachable block (ram,0x00401948) */\n/* WARNING: Removing unreachable block (ram,0x00401950) */\n\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_1 !\u003d \u0027\\0\u0027) {\n    return;\n  }\n  deregister_tm_clones();\n  completed_1 \u003d 1;\n  return;\n}\n\n",
  "_M_construct\u003cchar_const*\u003e": "\n/* void std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e\n   \u003e::_M_construct\u003cchar const*\u003e(char const*, char const*, std::forward_iterator_tag) */\n\nvoid std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n     _M_construct\u003cchar_const*\u003e(char *param_1,char *param_2,forward_iterator_tag param_3)\n\n{\n  difference_type dVar1;\n  undefined4 extraout_var;\n  char *pcVar2;\n  undefined4 in_register_00000014;\n  undefined8 local_20;\n  ulong local_18;\n  char *local_10;\n  \n  dVar1 \u003d distance\u003cchar_const*\u003e(param_2,(char *)CONCAT44(in_register_00000014,param_3));\n  local_18 \u003d CONCAT44(extraout_var,dVar1);\n  if (local_18 \u003c 0x10) {\n    local_10 \u003d param_1;\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_local_data();\n  }\n  else {\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_create\n              ((ulong *)param_1,(ulong)\u0026local_18);\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_data(param_1);\n    std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_capacity\n              ((ulong)param_1);\n  }\n  basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n  _M_construct\u003cchar_const*\u003e(char_const*,char_const*,std::forward_iterator_tag)::_Guard::_Guard(std::\n  __cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e_\u003e__(\u0026local_20,param_1);\n  pcVar2 \u003d (char *)std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::\n                   _M_data();\n  std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_S_copy_chars\n            (pcVar2,param_2,(char *)CONCAT44(in_register_00000014,param_3));\n  local_20 \u003d 0;\n  std::__cxx11::basic_string\u003cchar,std::char_traits\u003cchar\u003e,std::allocator\u003cchar\u003e\u003e::_M_set_length\n            ((ulong)param_1);\n  _M_construct\u003cchar_const*\u003e(char_const*,char_const*,std::forward_iterator_tag)::_Guard::~_Guard\n            ((_Guard *)\u0026local_20);\n  return;\n}\n\n",
  "_fini": "\nvoid _fini(void)\n\n{\n  __do_global_dtors_aux();\n  return;\n}\n\n",
  "time": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t time(time_t *__timer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* time@FBSD_1.0 */\n  halt_baddata();\n}\n\n"
}